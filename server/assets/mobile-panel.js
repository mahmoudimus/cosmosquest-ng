"use strict";
define("mobile-panel/adapters/application", ["exports"], function(e) {
    var t, n = Ember.get;
    t = n(DS, "ActiveModelAdapter").extend({
        shouldBackgroundReloadRecord: function() {
            return !1
        }
    }), e["default"] = t
}), define("mobile-panel/adapters/message", ["exports", "mobile-panel/adapters/application"], function(e, t) {
    var n;
    Ember.get;
    n = t["default"].extend({
        namespace: "mobile_panel"
    }), e["default"] = n
}), define("mobile-panel/ajax-ban-handler", function() {
    var e, t = Ember.get;
    e = function(e, t) {
        var n;
        return n = "/mobile_ban.html?reason=" + encodeURIComponent(e), t && (n += "&banned_until=" + t), window.location = n
    }, window.sendToBanPage = e, $(document).ajaxError(function(e, n) {
        return 403 === t(n, "status") && "banned" === t(t(n, "responseJSON"), "error") ? window.sendToBanPage(t(t(n, "responseJSON"), "ban_reason"), t(t(n, "responseJSON"), "banned_until")) : void 0
    })
}), define("mobile-panel/app", ["exports", "ember", "ember/resolver", "ember/load-initializers", "mobile-panel/load-extensions", "mobile-panel/config/environment", "mobile-panel/ajax-ban-handler"], function(e, t, n, r, a, l) {
    var i;
    t["default"].MODEL_FACTORY_INJECTIONS = !0, t["default"].EventDispatcher.reopen({
        events: {
            mousedown: "mouseDown",
            mouseup: "mouseUp",
            click: "click",
            focusin: "focusIn",
            focusout: "focusOut",
            submit: "submit",
            input: "input",
            change: "change",
            keydown: "keyDown",
            keyup: "keyUp"
        }
    }), i = t["default"].Application.extend({
        modulePrefix: l["default"].modulePrefix,
        podModulePrefix: l["default"].podModulePrefix,
        Resolver: n["default"],
        isProduction: function() {
            return /^(m|www)\.kongregate\.com$/.test(window.location.hostname)
        },
        fingerprint: function() {
            return $('meta[name="kongregate-panel-fingerprint"]').attr("content")
        }
    }), a["default"](l["default"].modulePrefix), r["default"](i, l["default"].modulePrefix), e["default"] = i
}), define("mobile-panel/components/app-version", ["exports", "ember-cli-app-version/components/app-version", "mobile-panel/config/environment"], function(e, t, n) {
    var r = n["default"].APP,
        a = r.name,
        l = r.version;
    e["default"] = t["default"].extend({
        version: l,
        name: a
    })
}), define("mobile-panel/components/auto-expanding-textarea", ["exports"], function(e) {
    var t, n = Ember.get;
    t = Ember.TextArea.extend({
        setupFocusListener: function() {
            return n(n(this, "device"), "androidLegacy") ? void 0 : this.$().on("focus", function(e) {
                return function() {
                    return e.$().autosize()
                }
            }(this))
        }.on("didInsertElement"),
        removeFocusListener: function() {
            return this.$().off("focus")
        }.on("willDestroyElement")
    }), e["default"] = t
}), define("mobile-panel/components/avatar-image", ["exports"], function(e) {
    var t, n, r, a, l, i, o, c = Ember.get;
    r = "blue green purple red".w(), o = [1, 2, 3, 4, 5, 6], a = [];
    for (var s = 0, u = r.length; u > s; ++s) {
        n = r[s];
        for (var d = 0, m = o.length; m > d; ++d) i = o[d], a.push("guestavatar-" + n + i + ".png")
    }
    l = function(e) {
        var t, n;
        t = 0;
        for (var r = function() {
                var t;
                t = [];
                for (var n = 0; 0 <= c(e, "length") - 1 ? n <= c(e, "length") - 1 : n >= c(e, "length") - 1; 0 <= c(e, "length") - 1 ? ++n : --n) t.push(n);
                return t
            }.apply(this, arguments), a = 0, l = r.length; l > a; ++a) n = r[a], t = (t << 5) - t + e.charCodeAt(n), t &= t;
        return Math.abs(t)
    }, t = Ember.Component.extend({
        tagName: "img",
        attributeBindings: ["src", "width", "height"],
        width: 64,
        height: 64,
        src: Ember.computed(function() {
            var e, t, n;
            return e = c(c(window, "location"), "host").split(".")[1], n = c(this, "username") ? "assets/dynamic/accounts/" + c(this, "username") + "/avatar" : (t = a[l(c(this, "kuid")) % c(a, "length")], "assets/mobile_guest_avatars/" + t), "https://assets." + e + ".com/" + n + "??i10c=img.resize(width:" + c(this, "width") + ",height:" + c(this, "height") + ")"
        }).property("username", "kuid", "width", "height")
    }), e["default"] = t
}), define("mobile-panel/components/badge-item", ["exports"], function(e) {
    var t, n = Ember.get;
    t = Ember.Component.extend({
        tagName: "li",
        classNames: ["mbadge"],
        classNameBindings: ["completed:completed"],
        completed: Ember.computed(function() {
            return n(n(this, "activeUser"), "completedBadges").contains(n(n(this, "badge"), "id"))
        }).property("activeUser.completedBadges.@each", "badge.id")
    }), e["default"] = t
}), define("mobile-panel/components/chat-message/chat", ["exports"], function(e) {
    var t, n = Ember.get;
    t = Ember.Component.extend({
        tagName: "li",
        classNames: "msg",
        classNameBindings: ["me"],
        me: Ember.computed(function() {
            return n(n(this, "message"), "kuid") === n(n(this, "activeUser"), "kuid")
        }).property("message.kuid", "activeUser.kuid"),
        failed: Ember.computed(function() {
            return n(n(this, "message"), "error") || n(n(this, "message"), "rateLimited") || n(n(this, "message"), "unsupportedPrivateMessage")
        }).property("message.error", "message.rateLimited", "message.unsupportedPrivateMessage"),
        retryable: Ember.computed(function() {
            return n(this, "failed") && !n(n(this, "message"), "unsupportedPrivateMessage")
        }).property("failed", "message.unsupportedPrivateMessage"),
        actions: {
            show: function() {
                return this.sendAction("action", n(this, "message"))
            },
            retry: function() {
                return this.sendAction("retry", n(this, "message"))
            },
            "delete": function() {
                return this.sendAction("delete", n(this, "message"))
            }
        }
    }), e["default"] = t
}), define("mobile-panel/components/chat-message/guild-join", ["exports"], function(e) {
    var t;
    Ember.get;
    t = Ember.Component.extend({
        tagName: "li",
        classNames: "guild-join room-activity"
    }), e["default"] = t
}), define("mobile-panel/components/chat-message/guild-leave", ["exports"], function(e) {
    var t;
    Ember.get;
    t = Ember.Component.extend({
        tagName: "li",
        classNames: "guild-leave room-activity"
    }), e["default"] = t
}), define("mobile-panel/components/chat-message/motd", ["exports"], function(e) {
    var t;
    Ember.get;
    t = Ember.Component.extend({
        tagName: "li",
        classNames: "motd",
        actions: {
            showRoomList: function() {
                return this.sendAction("showRoomList")
            }
        }
    }), e["default"] = t
}), define("mobile-panel/components/chat-native-textarea", ["exports"], function(e) {
    var t, n, r, a, l, i, o, c = Ember.get,
        s = Ember.set;
    r = "native-text-field", n = ["menu-opening", "modal-opened"], i = ["menu-closed", "modal-closed"], t = Ember.Component.extend({
        device: Ember.computed.alias("applicationController.device"),
        enabled: Ember.computed.alias("device.hasNativeTextEntry"),
        active: !1,
        transparent: !0,
        value: null,
        receivedValue: null,
        cursorStart: 0,
        cursorEnd: 0,
        paddingElement: "#content",
        keyboardMode: "resize",
        nativeSendButton: !0,
        maxlength: "250",
        addNativeTextField: function() {
            var e;
            if (c(this, "enabled")) {
                s(this, "active", !0), this.show(), c(this, "device").on("resize", this, "onResize"), c(this, "device").on("keyboard-size", this, "onKeyboardSize"), c(this, "device").on(r, this, "handleUpdate"), s(this, "orientationChangeHandler", function(e) {
                    return function() {
                        return e.updateBoundsLater()
                    }
                }(this)), window.addEventListener("orientationchange", c(this, "orientationChangeHandler"));
                for (var t = 0, a = i.length; a > t; ++t) e = i[t], null != c(this, "applicationController") && c(this, "applicationController").on(e, this, "show");
                return function(t) {
                    for (var r = 0, a = n.length; a > r; ++r) e = n[r], t.push(null != c(this, "applicationController") ? c(this, "applicationController").on(e, this, "hide") : void 0);
                    return t
                }.call(this, [])
            }
        }.on("didInsertElement"),
        removeNativeTextField: function() {
            var e;
            if (c(this, "enabled")) {
                this.hide(), s(this, "active", !1), c(this, "device").off("resize", this, "onResize"), c(this, "device").off("keyboard-size", this, "onKeyboardSize"), c(this, "device").off(r, this, "handleUpdate"), window.removeEventListener("orientationchange", c(this, "orientationChangeHandler"));
                for (var t = 0, n = i.length; n > t; ++t) e = i[t], null != c(this, "applicationController") && c(this, "applicationController").off(e, this, "show");
                return function(t) {
                    for (var n = 0, r = i.length; r > n; ++n) e = i[n], t.push(null != c(this, "applicationController") ? c(this, "applicationController").off(e, this, "hide") : void 0);
                    return t
                }.call(this, [])
            }
        }.on("willClearRender"),
        valueChanged: Ember.observer(function() {
            return c(this, "active") && c(this, "value") !== c(this, "receivedValue") ? c(this, "device").sendToApp(r, {
                value: c(this, "value")
            }) : void 0
        }, "value"),
        onResize: function(e) {
            return Ember.run.next(function(e) {
                return function() {
                    return c(e, "device").sendToApp(r, {
                        bounds: e.calculateBounds()
                    })
                }
            }(this)), this.updateBoundsLater()
        },
        updateBoundsLater: function(e) {
            return Ember.run.later(function(e) {
                return function() {
                    var t;
                    return t = e.calculateBounds(), !Ember.testing && c(t, "y") <= 0 ? e.updateBoundsLater() : null != c(e, "device") ? c(e, "device").sendToApp(r, {
                        bounds: e.calculateBounds()
                    }) : void 0
                }
            }(this), Ember.testing ? 0 : 500)
        },
        onKeyboardSize: function(e) {
            return this.updateBoundsLater()
        },
        handleUpdate: function(e) {
            return Ember.run(function(t) {
                return function() {
                    return s(t, "receivedValue", c(e, "value")), s(t, "value", c(e, "value"))
                }
            }(this)), c(e, "submit") && this.sendAction(), c(e, "selection_start") ? (s(this, "cursorStart", c(e, "selection_start")), s(this, "cursorEnd", c(this, "cursorStart") + c(e, "selection_length"))) : void 0
        },
        hide: function() {
            return c(this, "active") ? c(this, "device").sendToApp(r, {
                visible: !1
            }) : void 0
        },
        show: function() {
            var e;
            if (c(this, "active")) return e = {
                bounds: this.calculateBounds(),
                style: this.calculateStyle(),
                placeholder: c(this, "placeholder"),
                keyboardMode: c(this, "keyboardMode"),
                nativeSendButton: c(this, "nativeSendButton"),
                maxLength: parseInt(c(this, "maxlength")),
                visible: !0
            }, c(this, "device").sendToApp(r, e), this.updateBoundsLater()
        },
        calculateBounds: function() {
            var e, t, n, r;
            return e = this.$(), t = null != e ? e.offsetParent() : void 0, t && c(t, "length") ? (r = c(this, "transparent") ? a(e.css("padding-left")) : 0, n = e.position(), {
                x: r + c(n, "left"),
                y: c(t.position(), "top") + c(n, "top"),
                w: e.outerWidth() - r,
                h: e.outerHeight()
            }) : {}
        },
        calculateStyle: function() {
            var e;
            return (e = this.$()) ? {
                borderColor: l(e.css("border-color")),
                borderWidth: a(e.css("border-width")),
                borderRadius: a(e.css("border-radius")),
                borderStyle: c(this, "transparent") ? "none" : "solid",
                backgroundColor: c(this, "transparent") ? null : l(e.css("background-color")),
                fontFamily: o(e.css("font-family")),
                fontSize: a(e.css("font-size")),
                fontWeight: parseInt(e.css("font-weight"), 10),
                fontColor: l(e.css("color"))
            } : void 0
        }
    }), l = function(e) {
        return -1 === e.search("rgb") ? 0 : (e = e.match(/\d+/g), parseInt(e[0]) << 16 | parseInt(e[1]) << 8 | parseInt(e[2]))
    }, a = function(e) {
        return parseFloat(e.split("px")[0])
    }, o = function(e) {
        return e.split("'").join("").split('"').join("")
    }, e["default"] = t, e.MESSAGE_NAME = r
}), define("mobile-panel/components/chat-textarea", ["exports", "mobile-panel/components/auto-expanding-textarea"], function(e, t) {
    var n, r = Ember.get;
    Ember.set;
    n = t["default"].extend({
        keyDown: function(e) {
            return 13 === r(e, "which") ? e.preventDefault() : void 0
        }
    }), e["default"] = n
}), define("mobile-panel/components/email-taken", ["exports"], function(e) {
    var t;
    Ember.get, Ember.set;
    t = Ember.Component.extend({
        tagName: "div",
        classNames: ["email-taken", "mnotice"]
    }), e["default"] = t
}), define("mobile-panel/components/hide-on-error-img", ["exports"], function(e) {
    var t, n = Ember.get,
        r = Ember.set;
    t = Ember.Component.extend({
        tagName: "span",
        attributeBindings: ["style"],
        classNameBindings: ["hasError"],
        didReceiveAttrs: function() {
            return this._super(), this.setProperties({
                hasError: !1,
                style: null,
                url: n(Ember.Handlebars, "Utils").escapeExpression(n(this, "src"))
            }), $("<img>").attr("src", n(this, "url")).on("error", Ember.run.bind(this, "onError")).on("load", Ember.run.bind(this, "setBackground"))
        },
        onError: function() {
            return n(this, "isDestroyed") ? void 0 : r(this, "hasError", !0)
        },
        setBackground: function() {
            return n(this, "isDestroyed") ? void 0 : r(this, "style", Ember.String.htmlSafe("background-image: url(" + n(this, "url") + ");"))
        }
    }), e["default"] = t
}), define("mobile-panel/components/index/scores-pod-score", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.Component.extend({
        tagName: "li",
        classNames: "score",
        inTopPercentile: Ember.computed(function() {
            return (null != n(this, "score") ? n(n(this, "score"), "percentile") : void 0) < 50
        }).property("score.percentile")
    }), e["default"] = t
}), define("mobile-panel/components/index/scores-pod", ["exports"], function(e) {
    var t, n = Ember.get,
        r = Ember.set;
    t = Ember.Component.extend({
        classNames: "section home-high-scores",
        setupSwitchTimer: function() {
            var e, t, a;
            return a = $(".home-high-scores .score"), t = n(a, "length"), 1 === t ? $(a).addClass("show") : t > 1 ? (e = 0, $(a[e]).addClass("show"), r(this, "switchInterval", setInterval(function() {
                return $(".home-high-scores .score.hide").removeClass("hide"), $(a[e]).removeClass("show").addClass("hide"), e = e === t - 1 ? 0 : e + 1, $(a[e]).addClass("show").removeClass("hide")
            }, 8e3))) : void 0
        }.on("didInsertElement"),
        clearSwitchInterval: function() {
            return n(this, "switchInterval") ? clearInterval(n(this, "switchInterval")) : void 0
        }.on("willDestroyElement"),
        didUpdateAttrs: function() {
            return "inDOM" === n(this, "_state") ? (this.clearSwitchInterval(), Ember.run.scheduleOnce("afterRender", function(e) {
                return function() {
                    return e.setupSwitchTimer()
                }
            }(this))) : void 0
        }
    }), e["default"] = t
}), define("mobile-panel/components/level-bug", ["exports"], function(e) {
    var t;
    Ember.get, Ember.set;
    t = Ember.Component.extend({
        tagName: "span",
        classNames: ["mlvl"]
    }), e["default"] = t
}), define("mobile-panel/components/motd-indicator", ["exports"], function(e) {
    var t;
    Ember.get, Ember.set;
    t = Ember.Component.extend({
        tagName: "span",
        classNames: ["ico", "motd-indicator"],
        classNameBindings: ["isUnread"],
        guildMotdService: Ember.inject.service("guild-motd"),
        isUnread: Ember.computed.alias("guildMotdService.isUnread")
    }), e["default"] = t
}), define("mobile-panel/components/page-title", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.Component.extend({
        locationHistory: Ember.inject.service("location-history"),
        canGoBack: Ember.computed.alias("locationHistory.canGoBack"),
        actions: {
            goBackOrDefault: function() {
                return n(this, "locationHistory").goBackOrDefault()
            }
        }
    }), e["default"] = t
}), define("mobile-panel/components/radio-button", ["exports"], function(e) {
    var t, n = Ember.get,
        r = Ember.set;
    t = Ember.Component.extend({
        tagName: "input",
        type: "radio",
        attributeBindings: ["name", "type", "value", "checked:checked"],
        click: function() {
            return r(this, "selection", this.$().val())
        },
        checked: Ember.computed(function() {
            return n(this, "value") === n(this, "selection")
        }).property("value", "selection")
    }), e["default"] = t
}), define("mobile-panel/components/user-details", ["exports"], function(e) {
    var t;
    Ember.get, Ember.set;
    t = Ember.Component.extend({
        tagName: "span",
        classNames: ["kong-name"]
    }), e["default"] = t
}), define("mobile-panel/components/x-option", ["exports", "emberx-select/components/x-option"], function(e, t) {
    e["default"] = t["default"]
}), define("mobile-panel/components/x-select", ["exports", "emberx-select/components/x-select"], function(e, t) {
    e["default"] = t["default"]
}), define("mobile-panel/controllers/apple/callback", ["exports"], function(e) {
    var t;
    Ember.get, Ember.set;
    t = Ember.Controller.extend({
        queryParams: ["matchInfo"]
    }), e["default"] = t
}), define("mobile-panel/controllers/apple/finalize", ["exports", "mobile-panel/support/normalize-json", "mobile-panel/support/describe-errors", "mobile-panel/mixins/authentication", "ic-ajax"], function(e, t, n, r, a) {
    var l, i = Ember.get,
        o = Ember.set;
    l = Ember.Controller.extend(r["default"], {
        errorDescriptions: Ember.computed(function() {
            return n["default"](i(this, "errors"))
        }).property("errors"),
        clearForm: function() {
            return this.setProperties({
                errors: null,
                password: null
            })
        },
        emailAddress: Ember.computed(function() {
            return i(this, "invalidEmailAddress") ? void 0 : i(i(this, "activeUser"), "emailAddress")
        }).property("invalidEmailAddress", "activeUser.emailAddress"),
        invalidEmailAddress: Ember.computed(function() {
            return i(i(this, "activeUser"), "invalidEmailAddress")
        }).property("activeUser.invalidEmailAddress"),
        username: Ember.computed(function() {
            return i(i(this, "activeUser"), "username")
        }).property("activeUser.username"),
        privacyPolicyConsent: Ember.computed(function() {
            return i(i(this, "activeUser"), "privacyPolicyConsent") || !1
        }).property("activeUser.privacyPolicyConsent"),
        params: function() {
            return {
                game_id: i(i(this, "game"), "id"),
                user: {
                    username: i(this, "username"),
                    password: i(this, "password"),
                    email_address: i(this, "emailAddress"),
                    privacy_policy_consent: i(this, "privacyPolicyConsent")
                }
            }
        },
        actions: {
            submit: function() {
                return o(this, "errors", null), this.prettyPromise(a["default"]("/apple_connection/finalize.json", {
                    method: "PATCH",
                    data: this.params()
                }).then(function(e) {
                    return function(n) {
                        return t["default"](n), i(n, "user") ? (e.finishAuthentication(n), i(e, "analyticsService").pushSDKEvent("apple_connected_at_local", (new Date).toISOString(), "replace")) : i(n, "errors") ? o(e, "errors", i(n, "errors")) : i(Ember.RSVP, "Promise").reject(n)
                    }
                }(this)))
            }
        }
    }), e["default"] = l
}), define("mobile-panel/controllers/application-error", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.Controller.extend({
        actions: {
            retry: function() {
                var e;
                return n(this, "transition") ? (e = n(n(this, "transition"), "handlerInfos").slice().reverse().find(function(e) {
                    return n(n(e, "handler"), "retry")
                }), e ? n(e, "handler").retry() : n(this, "transition").retry()) : void 0
            },
            support: function() {
                return n(this, "device").openExternalBrowser("mailto:support@kongregate.com")
            }
        }
    }), e["default"] = t
}), define("mobile-panel/controllers/application", ["exports", "mobile-panel/support/loading-spinner"], function(e, t) {
    var n, r = Ember.get,
        a = Ember.set;
    n = Ember.Controller.extend(Ember.Evented, {
        needs: ["menu"],
        loading: !1,
        menuButtonDisabled: !1,
        menuButtonVisible: Ember.computed(function() {
            return !r(this, "menuButtonDisabled")
        }).property("menuButtonDisabled"),
        menuButtonVisibilityChanged: Ember.observer(function() {
            return r(this, "device").sendMenuButtonState({
                visible: r(this, "menuButtonVisible")
            })
        }.on("init"), "menuButtonVisible"),
        virtualMenuButtonVisible: Ember.computed(function() {
            return r(r(this, "device"), "hasVirtualMenuButton") && r(this, "menuButtonVisible")
        }).property("device.hasVirtualMenuButton", "menuButtonVisible"),
        init: function() {
            return a(this, "spinner", t["default"].create({
                controller: this
            }))
        },
        willDestroy: function() {
            return r(this, "spinner").stop()
        },
        actions: {
            toggleMenuVisibility: function() {
                return this.toggleProperty("controllers.menu.menuVisible"), null
            }
        }
    }), e["default"] = n
}), define("mobile-panel/controllers/asset-preloader", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.Controller.extend({
        classesToLoad: ["more-games-icos-warmer"],
        imagesToLoad: Ember.computed(function() {
            var e, t;
            return t = [n(n(this, "game"), "backgroundImageUrl"), n(n(this, "game"), "chatBackgroundImageUrl"), n(n(this, "activeUser"), "avatarUrl"), n(n(this, "activeUser"), "smallAvatarUrl")].concat(n(n(this, "game"), "badges").map(function(e, t) {
                    return n(e, "image_url")
                })),
                function(n) {
                    for (var r = 0, a = t.length; a > r; ++r) e = t[r], "undefined" != typeof e && null != e && n.push(e);
                    return n
                }.call(this, [])
        }).property("game.backgroundImageUrl", "game.chatBackgroundImageUrl", "activeUser.avatarUrl", "activeUser.smallAvatarUrl", "game.badges.@each")
    }), e["default"] = t
}), define("mobile-panel/controllers/back-button", ["exports"], function(e) {
    var t;
    Ember.get, Ember.set;
    t = Ember.Controller.extend({
        locationHistory: Ember.inject.service("location-history"),
        canGoBack: Ember.computed.alias("locationHistory.canGoBack")
    }), e["default"] = t
}), define("mobile-panel/controllers/change-email", ["exports", "mobile-panel/support/normalize-json", "mobile-panel/controllers/modal", "ic-ajax", "ember-i18n"], function(e, t, n, r, a) {
    var l, i = Ember.get,
        o = Ember.set;
    l = n["default"].extend({
        defaultOptIn: Ember.observer(function() {
            return o(this, "optIn", !0)
        }, "model"),
        title: a.translationMacro("changeEmail.title"),
        submitText: Ember.computed(function() {
            return null != i(i(this, "model"), "submitText") ? i(i(this, "model"), "submitText") : i(this, "i18n").t("changeEmail.update")
        }).property("i18n.locale", "model.submitText"),
        actions: {
            submit: function() {
                return o(i(this, "model"), "errors", null), this.prettyPromise(r["default"]("/accounts/" + i(i(this, "activeUser"), "username") + "/email.json", {
                    method: "POST",
                    data: {
                        _method: "PUT",
                        user: {
                            email_address: i(this, "emailAddress"),
                            password: i(this, "password"),
                            opt_in: i(this, "optIn")
                        }
                    }
                }).then(function(e) {
                    return function(n) {
                        return t["default"](n), i(n, "success") ? (i(e, "activeUser").setProperties({
                            emailAddress: i(n, "emailAddress"),
                            mfaMethod: i(n, "mfaMethod"),
                            mfaEnabled: i(n, "mfaEnabled"),
                            emailVerified: i(n, "emailVerified"),
                            optIn: i(n, "optIn")
                        }), e.resolve(i(n, "emailAddress"))) : o(i(e, "model"), "errors", i(n, "errors"))
                    }
                }(this), function(e) {
                    return function() {
                        return o(i(e, "model"), "errors", {
                            server: !0
                        })
                    }
                }(this)))
            }
        }
    }), e["default"] = l
}), define("mobile-panel/controllers/change-password", ["exports", "mobile-panel/support/normalize-json", "mobile-panel/controllers/modal", "ic-ajax", "ember-i18n"], function(e, t, n, r, a) {
    var l, i = Ember.get,
        o = Ember.set;
    l = n["default"].extend({
        title: a.translationMacro("changePassword.title"),
        actions: {
            forgotPassword: function() {
                return this.resolve(), this.transitionToRoute("forgot-password")
            },
            submit: function() {
                return i(this, "newPassword") !== i(this, "confirmNewPassword") ? void o(i(this, "model"), "errors", {
                    new_password: "needs to match confirmation"
                }) : (o(i(this, "model"), "errors", null), this.prettyPromise(r["default"]("/accounts/" + i(i(this, "activeUser"), "username") + "/password.json", {
                    method: "POST",
                    data: {
                        _method: "PUT",
                        user: {
                            original_password: i(this, "password"),
                            password: i(this, "newPassword")
                        }
                    }
                }).then(function(e) {
                    return function(n) {
                        return t["default"](n), i(n, "success") ? e.resolve() : o(i(e, "model"), "errors", i(n, "errors"))
                    }
                }(this), function(e) {
                    return function() {
                        return o(i(e, "model"), "errors", {
                            server: !0
                        })
                    }
                }(this))))
            }
        }
    }), e["default"] = l
}), define("mobile-panel/controllers/chat/profile", ["exports", "mobile-panel/controllers/chat-modal"], function(e, t) {
    var n, r = Ember.get,
        a = Ember.set;
    n = t["default"].extend({
        errorMessage: null,
        loadingInside: !1,
        avatarUrl: Ember.computed(function() {
            var e;
            return e = r(r(window, "location"), "host").split(".")[1], "https://assets." + e + ".com/assets/dynamic/accounts/" + r(r(this, "model"), "userId") + "/avatar"
        }).property("model.userId"),
        muted: Ember.computed(function() {
            return r(this, "muteService").isMuted(r(r(this, "model"), "kuid"))
        }).property("muteService", "model.kuid"),
        performAsync: function() {
            return r(r(this, "model"), "username") ? r(this, "chatProfileService").fetch(r(r(this, "model"), "username")).then(function(e) {
                return function(t) {
                    return a(r(e, "model"), "level", r(t, "level")), a(r(e, "model"), "friends", r(t, "friends"))
                }
            }(this), function(e) {
                return function(t) {
                    return a(r(e, "model"), "errors", {
                        server: !0
                    })
                }
            }(this)) : Ember.RSVP.resolve()
        },
        profilePrettyPromise: function(e) {
            return a(this, "errorMessage", null), a(this, "loadingInside", !0), e["catch"](function(e) {
                return function() {
                    return a(e, "errorMessage", "There was an error processing your request. Please try again later.")
                }
            }(this))["finally"](function(e) {
                return function() {
                    return a(e, "loadingInside", !1)
                }
            }(this))
        },
        actions: {
            befriend: function() {
                return r(r(this, "model"), "username") ? this.profilePrettyPromise(r(this, "friendService").befriend(r(r(this, "model"), "username")).then(function(e) {
                    return function() {
                        return a(r(e, "model"), "friends", !0)
                    }
                }(this))) : void 0
            },
            unfriend: function() {
                return this.profilePrettyPromise(r(this, "friendService").unfriend(r(r(this, "model"), "username")).then(function(e) {
                    return function() {
                        return a(r(e, "model"), "friends", !1)
                    }
                }(this)))
            },
            profile: function() {
                return r(r(this, "model"), "username") ? this.transitionToRoute("profile.show", r(r(this, "model"), "username")).then(function(e) {
                    return function() {
                        return e.send("closeModal")
                    }
                }(this)) : void 0
            },
            mute: function() {
                return r(this, "muteService").mute(r(r(this, "model"), "kuid")), this.notifyPropertyChange("muteService")
            },
            unmute: function() {
                return r(this, "muteService").unmute(r(r(this, "model"), "kuid")), this.notifyPropertyChange("muteService")
            }
        }
    }), e["default"] = n
}), define("mobile-panel/controllers/chat-modal", ["exports", "mobile-panel/controllers/modal"], function(e, t) {
    var n, r = (Ember.get, Ember.set);
    n = t["default"].extend({
        loading: !0,
        setup: function(e, t) {
            return this._super(e, t), r(this, "loading", !0), this.performAsync()["finally"](function(e) {
                return function() {
                    return r(e, "loading", !1)
                }
            }(this))
        }
    }), e["default"] = n
}), define("mobile-panel/controllers/chat", ["exports"], function(e) {
    var t, n = Ember.get,
        r = Ember.set;
    t = Ember.Controller.extend(Ember.Evented, {
        needs: ["application"],
        messageText: "",
        messages: Ember.computed.alias("chatService.messages"),
        pendingMessages: Ember.computed.alias("chatService.pendingMessages"),
        hasMessage: Ember.computed(function() {
            return !Ember.isBlank(n(this, "messageText"))
        }).property("messageText"),
        historyLoading: !1,
        historyError: null,
        charactersCountLoading: !1,
        charactersCountError: null,
        isConnected: Ember.computed.alias("chatService.isConnected"),
        temporarilyDisconnected: Ember.computed(function() {
            return !n(this, "isConnected") && n(n(this, "activeUser"), "hasGuildChat")
        }).property("isConnected", "activeUser.hasGuildChat"),
        rateLimited: Ember.computed.alias("chatService.rateLimited"),
        inputDisabled: Ember.computed(function() {
            return n(this, "temporarilyDisconnected") || n(this, "rateLimited")
        }).property("temporarilyDisconnected", "rateLimited"),
        messageCount: null,
        atMessageLimit: Ember.computed.alias("chatService.atMessageLimit"),
        nearBottom: !0,
        showMostRecent: Ember.computed(function() {
            return !n(this, "nearBottom") && !n(this, "iosKeyboardVisible")
        }).property("nearBottom", "iosKeyboardVisible"),
        supportsGoToGuild: Ember.computed(function() {
            return null != n(n(n(this, "device"), "config"), "supportedEvents") ? n(n(n(this, "device"), "config"), "supportedEvents").contains("GO_TO_GUILDS") : void 0
        }).property("device.config.supportedEvents.@each"),
        guildMotdService: Ember.inject.service("guild-motd"),
        chatSize: Ember.computed(function() {
            return n(n(this, "activeUser"), "chatInfoChatSize")
        }).property("activeUser.chatInfoChatSize"),
        init: function() {
            return this._super(), n(this, "isConnected") && this.loadCharactersCount(), n(this, "chatService").on("message", this, "onMessage"), n(this, "chatService").on("joinedGuildChat", this, "onJoinedGuildChat"), n(this, "chatService").on("rateLimited", this, "onRateLimited"), n(this, "device").on("keyboard-size", this, "onKeyboardSize"), n(this, "guildMotdService").fetch(n(n(n(n(this, "activeUser"), "chatInfo"), "authentication"), "guildId"))
        },
        destroy: function() {
            return this._super(), n(this, "chatService").off("message", this, "onMessage"), n(this, "chatService").off("joinedGuildChat", this, "onJoinedGuildChat"), n(this, "chatService").off("rateLimited", this, "onRateLimited"), n(this, "device").off("keyboard-size", this, "onKeyboardSize")
        },
        keyboardOpen: function() {
            return n(n(this, "device"), "iosApp") ? n(this, "iosKeyboardVisible") : n(window, "innerHeight") < n(this, "initialHeight") - 100
        },
        onMessage: function() {
            return this.trigger("scrollToBottom")
        },
        onKeyboardSize: function(e) {
            return n(e, "height") > 0 ? (r(this, "iosKeyboardVisible", !0), this.debouncedScrollToBottomIfNear()) : r(this, "iosKeyboardVisible", !1)
        },
        debouncedScrollToBottomIfNear: function() {
            return Ember.run.debounce(this, "trigger", "scrollToBottom", !1, 500, 250)
        },
        onJoinedGuildChat: function() {
            return this.loadCharactersCount(), this.send("loadHistory", !0)
        },
        onRateLimited: function() {
            return this.trigger("scrollToBottom", !0)
        },
        loadCharactersCount: function() {
            return r(this, "charactersCountLoading", !0), n(this, "roomListService").charactersCount(n(n(this, "chatService"), "guildRoom")).then(function(e) {
                return function(t) {
                    return r(e, "charactersCountError", null), r(e, "charactersCount", n(t, "charactersCount"))
                }
            }(this), function(e) {
                return function() {
                    return r(e, "charactersCountError", "There was an error loading the characters count")
                }
            }(this))["finally"](function(e) {
                return function() {
                    return r(e, "charactersCountLoading", !1), n(e, "schedulingService").schedule(e, "loadCharactersCount", 3e5)
                }
            }(this))
        },
        actions: {
            publish: function() {
                return n(this, "hasMessage") && n(this, "isConnected") && !n(this, "rateLimited") ? (this.keyboardOpen() && this.trigger("focusInput"), this.trigger("scrollToBottom", !0), n(this, "chatService").publishGuildMessage(n(this, "messageText")), r(this, "messageText", ""), this.trigger("scrollToBottom", !0)) : void 0
            },
            submitChat: function() {
                return n(n(this, "device"), "hasNativeTextEntry") ? n(this, "device").sendToApp("native-text-field", {
                    submit: !0
                }) : this.send("publish")
            },
            retry: function(e) {
                return n(this, "chatService").retryGuildMessage(e)
            },
            "delete": function(e) {
                return n(this, "chatService").removePendingMessage(e)
            },
            showChatProfile: function(e) {
                return n(e, "kuid") === n(n(this, "activeUser"), "kuid") || this.keyboardOpen() ? void 0 : this.displayModal({
                    name: "chat.profile",
                    model: e
                })
            },
            showRoomList: function() {
                return n(this, "guildMotdService").markAsRead(), this.displayModal({
                    name: "room-list-modal",
                    room: n(n(this, "chatService"), "guildRoom")
                })
            },
            loadHistory: function(e) {
                return null == e && (e = !1), e || (r(this, "historyLoading", !0), r(this, "messageCount", n(n(this, "messages"), "length"))), n(this, "chatService").fetchHistory().then(function(e) {
                    return function() {
                        return r(e, "historyError", null)
                    }
                }(this), function(e) {
                    return function() {
                        return r(e, "historyError", "There was an error loading the chat history")
                    }
                }(this))["finally"](function(t) {
                    return function() {
                        var a;
                        return r(t, "historyLoading", !1), e ? t.trigger("scrollToBottom") : (a = n(n(t, "messages"), "length") - n(t, "messageCount"), t.trigger("stickToMessage", a))
                    }
                }(this))
            },
            scrollToBottom: function() {
                return this.trigger("scrollToBottom", !0)
            },
            goToGuild: function() {
                return n(this, "device").goToGuild(n(n(n(this, "activeUser"), "guild"), "id"))
            }
        }
    }), e["default"] = t
}), define("mobile-panel/controllers/confirmation-modal", ["exports", "mobile-panel/controllers/modal"], function(e, t) {
    var n, r = Ember.get;
    Ember.set;
    n = t["default"].extend({
        confirm: Ember.computed(function() {
            return null != r(r(this, "model"), "confirm") ? r(r(this, "model"), "confirm") : "OK"
        }).property("model.confirm"),
        single: Ember.computed(function() {
            return !(null != r(r(this, "model"), "cancel"))
        }).property("model.cancel"),
        actions: {
            confirm: function() {
                return this.resolve(!0)
            },
            cancel: function() {
                return this.reject(!1)
            },
            close: function() {
                return r(this, "single") ? this.resolve(!0) : this.reject(!1)
            }
        }
    }), e["default"] = n
}), define("mobile-panel/controllers/coupon-claimed-modal", ["exports", "mobile-panel/controllers/modal"], function(e, t) {
    var n;
    Ember.get, Ember.set;
    n = t["default"].extend(), e["default"] = n
}), define("mobile-panel/controllers/create-or-edit-post", ["exports", "mobile-panel/controllers/modal"], function(e, t) {
    var n, r = Ember.get,
        a = Ember.set;
    n = t["default"].extend({
        hasTitle: Ember.computed(function() {
            return "topic" === r(r(r(this, "object"), "constructor"), "modelName")
        }).property("object"),
        actions: {
            save: function() {
                return a(r(this, "model"), "errors", null), this.prettyPromise(r(this, "object").save().then(function(e) {
                    return function() {
                        return e.resolve(r(e, "object"))
                    }
                }(this), function(e) {
                    return function(t) {
                        return e.send("scrollToTop"), null != r(r(t, "errors")[0], "status") ? a(r(e, "model"), "errors", {
                            server: !0
                        }) : a(r(e, "model"), "errors", r(t, "errors").mapBy("detail"))
                    }
                }(this)))
            }
        }
    }), e["default"] = n
}), define("mobile-panel/controllers/edit-avatar", ["exports", "ic-ajax"], function(e, t) {
    var n, r = Ember.get;
    Ember.set;
    n = Ember.Controller.extend({
        actions: {
            reloadAvatar: function() {
                return this.prettyPromise(t["default"]("/mobile_panel/user.json").then(function(e) {
                    return function(t) {
                        return r(e, "activeUser").setProperties({
                            avatarUrl: r(r(t, "user"), "avatar_url"),
                            smallAvatarUrl: r(r(t, "user"), "small_avatar_url")
                        }), e.send("goBackOrDefault")
                    }
                }(this)))
            }
        }
    }), e["default"] = n
}), define("mobile-panel/controllers/edit-profile", ["exports", "mobile-panel/support/normalize-json", "mobile-panel/support/underscore-json", "mobile-panel/support/describe-errors", "mobile-panel/mixins/change-avatar", "ic-ajax"], function(e, t, n, r, a, l) {
    var i, o = Ember.get,
        c = Ember.set;
    i = Ember.Controller.extend(a["default"], {
        errorMessages: Ember.computed(function() {
            return r["default"](o(o(this, "model"), "errors"))
        }).property("model.errors"),
        actions: {
            changePassword: function() {
                return this.displayModal({
                    name: "change-password"
                })
            },
            changeEmail: function() {
                return this.displayModal({
                    name: "change-email"
                })
            },
            manageMfa: function() {
                return this.displayModal({
                    name: "manage-mfa"
                })
            },
            submit: function() {
                return this.prettyPromise(l["default"]("/mobile_panel/profile", {
                    method: "POST",
                    data: {
                        profile: n["default"](o(this, "model").getProperties("emailAddress", "optIn", "about", "location", "private"))
                    }
                }).then(function(e) {
                    return function(n) {
                        return o(e, "activeUser").setProperties(t["default"](o(n, "profile"))), e.setProperties(o(n, "profile")), e.displayModal({
                            title: o(e, "i18n").t("editProfile.success"),
                            message: o(e, "i18n").t("editProfile.updatedMessage")
                        })
                    }
                }(this), function(e) {
                    return function(n) {
                        if (422 === o(o(n, "jqXHR"), "status")) return c(o(e, "model"), "errors", t["default"](o(o(o(n, "jqXHR"), "responseJSON"), "errors")));
                        throw n
                    }
                }(this)))
            },
            sendVerificationEmail: function() {
                return c(this, "notice", null), c(o(this, "model"), "errors", null), this.prettyPromise(l["default"]("/accounts/" + o(o(this, "activeUser"), "username") + "/email/send_verification.json", {
                    method: "POST"
                }).then(function(e) {
                    return function(t) {
                        return o(t, "success") ? c(e, "notice", o(e, "i18n").t("editProfile.verificationEmailSuccess")) : c(o(e, "model"), "errors", [o(e, "i18n").t("editProfile.verificationEmailError")])
                    }
                }(this), function(e) {
                    return function(t) {
                        return c(o(e, "model"), "errors", [o(e, "i18n").t("editProfile.verificationEmailError")]);
                    }
                }(this)))
            },
            refreshVerificationStatus: function() {
                return c(this, "notice", null), this.prettyPromise(l["default"]("/api/mobile_panel/v1/active_user.json", {
                    method: "GET"
                }).then(function(e) {
                    return function(n) {
                        return t["default"](n), o(e, "activeUser").setProperties({
                            emailVerified: o(o(n, "user"), "emailVerified")
                        })
                    }
                }(this), function(e) {}))
            }
        }
    }), e["default"] = i
}), define("mobile-panel/controllers/facebook/callback", ["exports"], function(e) {
    var t;
    Ember.get, Ember.set;
    t = Ember.Controller.extend({
        queryParams: ["matchInfo"]
    }), e["default"] = t
}), define("mobile-panel/controllers/facebook/finalize", ["exports", "mobile-panel/support/normalize-json", "mobile-panel/support/describe-errors", "mobile-panel/mixins/authentication", "ic-ajax"], function(e, t, n, r, a) {
    var l, i = Ember.get,
        o = Ember.set;
    l = Ember.Controller.extend(r["default"], {
        errorDescriptions: Ember.computed(function() {
            return n["default"](i(this, "errors"))
        }).property("errors"),
        clearForm: function() {
            return this.setProperties({
                errors: null,
                password: null
            })
        },
        emailAddress: Ember.computed(function() {
            return i(this, "invalidEmailAddress") ? void 0 : i(i(this, "activeUser"), "emailAddress")
        }).property("invalidEmailAddress", "activeUser.emailAddress"),
        invalidEmailAddress: Ember.computed(function() {
            return i(i(this, "activeUser"), "invalidEmailAddress")
        }).property("activeUser.invalidEmailAddress"),
        username: Ember.computed(function() {
            return i(i(this, "activeUser"), "username")
        }).property("activeUser.username"),
        privacyPolicyConsent: Ember.computed(function() {
            return i(i(this, "activeUser"), "privacyPolicyConsent") || !1
        }).property("activeUser.privacyPolicyConsent"),
        params: function() {
            return {
                game_id: i(i(this, "game"), "id"),
                user: {
                    username: i(this, "username"),
                    password: i(this, "password"),
                    email_address: i(this, "emailAddress"),
                    privacy_policy_consent: i(this, "privacyPolicyConsent")
                }
            }
        },
        actions: {
            submit: function() {
                return o(this, "errors", null), this.prettyPromise(a["default"]("/facebook_connection/finalize.json", {
                    method: "PATCH",
                    data: this.params()
                }).then(function(e) {
                    return function(n) {
                        return t["default"](n), i(n, "user") ? (e.finishAuthentication(n), i(e, "analyticsService").pushSDKEvent("facebook_connected_at_local", (new Date).toISOString(), "replace")) : i(n, "errors") ? o(e, "errors", i(n, "errors")) : i(Ember.RSVP, "Promise").reject(n)
                    }
                }(this)))
            }
        }
    }), e["default"] = l
}), define("mobile-panel/controllers/facebook/matched", ["exports", "mobile-panel/mixins/authentication", "ic-ajax"], function(e, t, n) {
    var r, a = Ember.get,
        l = Ember.set;
    r = Ember.Controller.extend(t["default"], {
        matchedOnEmailAddress: Ember.computed(function() {
            return "email_address" === a(a(this, "matchInfo"), "matchedOn")
        }).property("matchInfo.matchedOn"),
        matchedOnSiteVisitor: Ember.computed(function() {
            return "site_visitor" === a(a(this, "matchInfo"), "matchedOn")
        }).property("matchInfo.matchedOn"),
        avatarUrl: Ember.computed(function() {
            return a(a(this, "matchInfo"), "avatarUrl") ? decodeURIComponent(a(a(this, "matchInfo"), "avatarUrl")) : void 0
        }).property("matchInfo.avatarUrl"),
        username: Ember.computed(function() {
            return a(a(this, "matchInfo"), "username")
        }).property("matchInfo.username"),
        recordAuthenticationSuccess: function() {
            return a(this, "analyticsService").trackEvent("Facebook Connect", "sign in success")
        },
        recordAuthenticationFailure: function() {
            return a(this, "analyticsService").trackEvent("Facebook Connect", "sign in error")
        },
        clearForm: function() {
            return this.setProperties({
                errors: null,
                password: null,
                recoveryTokenSuccess: !1
            })
        },
        forceCreate: function(e) {
            return l(this, "errors", null), this.prettyPromise(n["default"]("/facebook_connection/force_create.json", {
                method: "POST",
                data: {
                    game_id: a(a(this, "game"), "id")
                }
            }).then(function(t) {
                return function(n) {
                    return a(t, "analyticsService").trackEvent("Facebook Connect", "registration success"), t.finishAuthentication(n, e)
                }
            }(this), function(e) {
                return function(t) {
                    return a(e, "analyticsService").trackEvent("Facebook Connect", "registration error"), l(e, "errors", ["There was a problem creating your account. Please try again."])
                }
            }(this)))
        },
        actions: {
            submit: function() {
                return this.authenticate(), this.clearForm()
            },
            forgotPassword: function() {
                return l(this, "recoveryTokenSuccess", !1), this.sendRecoveryToken().then(function(e) {
                    return function() {
                        return l(e, "recoveryTokenSuccess", !0)
                    }
                }(this))
            },
            forceCreate: function() {
                return this.forceCreate("index")
            },
            finalize: function() {
                return this.forceCreate("facebook.finalize")
            }
        }
    }), e["default"] = r
}), define("mobile-panel/controllers/forgot-password", ["exports", "mobile-panel/mixins/authentication"], function(e, t) {
    var n, r = Ember.get,
        a = Ember.set;
    n = Ember.Controller.extend(t["default"], {
        clearForm: function() {
            return this.setProperties({
                errors: null,
                username: null,
                success: !1
            })
        },
        actions: {
            submit: function() {
                return a(this, "success", !1), r(this, "username") ? this.sendRecoveryToken().then(function(e) {
                    return function() {
                        return a(e, "success", !0)
                    }
                }(this)) : a(this, "errors", ["Missing username or email, please try again."])
            }
        }
    }), e["default"] = n
}), define("mobile-panel/controllers/forum-list-item", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.ObjectController.extend({
        displayName: Ember.computed(function() {
            return n(this, "parentForum") ? "" + n(n(this, "parentForum"), "name") + " - " + n(this, "name") : n(this, "isGuildForum") ? n(this, "name") : "" + n(this, "name") + " - General"
        }).property("parentForum", "parentForum.name", "name", "isGuildForum"),
        hasRecentActivity: Ember.computed(function() {
            return n(this, "forumViewTrackingService") && n(this, "forumViewTrackingService").hasRecentForumActivity(n(this, "model"))
        }).property("forumViewTrackingService", "model")
    }), e["default"] = t
}), define("mobile-panel/controllers/forum-search-modal", ["exports", "mobile-panel/controllers/modal", "ember-i18n"], function(e, t, n) {
    var r, a = Ember.get;
    Ember.set;
    r = t["default"].extend({
        title: n.translationMacro("forumSearchModal.title"),
        actions: {
            submit: function() {
                return this.resolve(a(a(this, "model"), "value"))
            }
        }
    }), e["default"] = r
}), define("mobile-panel/controllers/forum-search", ["exports", "mobile-panel/mixins/pagination-controller", "mobile-panel/support/normalize-json", "ic-ajax"], function(e, t, n, r) {
    var a, l = Ember.get,
        i = Ember.set;
    a = Ember.Controller.extend(t["default"], {
        resultsVisible: Ember.computed(function() {
            return l(l(this, "activeUser"), "forumSearchEnabled") && l(this, "query")
        }).property("activeUser.forumSearchEnabled", "query"),
        loadPage: function(e) {
            return i(this, "page", e || 1), this.send("showLoading"), i(this, "noResults", !0), this.prettyPromise(r["default"]("/forum_search.json", {
                method: "POST",
                data: {
                    q: l(this, "query"),
                    page: l(this, "page"),
                    game_id: window.kongGameId()
                }
            }).then(function(e) {
                return function(t) {
                    var r;
                    return e.send("hideLoading"), r = n["default"](t), l(r, "resultTotal") > 0 ? (i(e, "noResults", !1), i(e, "resultsHeader", "About " + l(r, "resultTotal") + " results (" + l(r, "queryTime") / 1e3 + " seconds)"), i(e, "posts", l(r, "posts")), i(e, "maxPage", l(r, "pageCount")), i(e, "currentPage", parseInt(l(r, "page"), 10)), i(e, "paginationInput", l(e, "currentPage"))) : void 0
                }
            }(this)))
        },
        actions: {
            forumSearch: function(e) {
                return e && l(e, "length") > 0 ? (i(this, "query", e), this.loadPage(1)) : void 0
            }
        }
    }), e["default"] = a
}), define("mobile-panel/controllers/forum-toolbar", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.Controller.extend({
        needs: ["forum"],
        forum: Ember.computed.alias("controllers.forum.model"),
        actions: {
            newTopic: function() {
                var e;
                return e = n(this, "store").createRecord("topic", {
                    forum: n(this, "forum")
                }), n(this, "analyticsService").incrementPageviewCounter("/forum_post"), n(this.displayModal({
                    name: "create-or-edit-post",
                    noTitle: !0,
                    object: e,
                    boundClass: "forum-lb"
                }), "promise").then(function(t) {
                    return function() {
                        return t.transitionToRoute("topic", e)
                    }
                }(this))
            }
        }
    }), e["default"] = t
}), define("mobile-panel/controllers/forum", ["exports", "mobile-panel/mixins/pagination-controller"], function(e, t) {
    var n, r = Ember.get,
        a = Ember.set;
    n = Ember.ObjectController.extend(Ember.Evented, t["default"], {
        topics: null,
        showHiddenStickies: !1,
        error: !1,
        scrollTop: 0,
        stickyTopics: Ember.computed.filterBy("topics", "sticky", !0),
        normalTopics: Ember.computed.filterBy("topics", "sticky", !1),
        hasHiddenStickyTopics: Ember.computed.gt("stickyTopics.length", 2),
        hasPreviousPage: !0,
        displayedStickyTopics: Ember.computed(function() {
            return r(this, "showHiddenStickies") ? r(this, "stickyTopics") : r(this, "stickyTopics").slice(0, 2)
        }).property("showHiddenStickies", "stickyTopics.[]"),
        hiddenStickyCount: Ember.computed(function() {
            return r(r(this, "stickyTopics"), "length") - 2
        }).property("stickyTopics.length"),
        showShowAllStickiesButton: Ember.computed(function() {
            return !r(this, "showHiddenStickies") && r(this, "hasHiddenStickyTopics")
        }).property("showHiddenStickies", "hasHiddenStickyTopics"),
        loadPage: function(e, t) {
            var n, l, i;
            return null == t && (t = {}), l = t, n = l.anchor, i = l.forceReload, n || (n = "top"), i || (i = !1), e !== r(this, "currentPage") || i ? this.prettyPromise(r(this, "model").topics(e).then(function(t) {
                return function(l) {
                    return a(t, "currentPage", e), a(t, "maxPage", r(r(l, "meta"), "max_page")), e > r(t, "maxPage") ? t.loadPage(r(t, "maxPage")) : (a(t, "topics", l), t.trigger("scrollToAnchor", n), 1 === e ? r(t, "forumViewTrackingService").trackForumView(r(t, "model")) : void 0)
                }
            }(this))["finally"](function(e) {
                return function() {
                    return a(e, "paginationInput", r(e, "currentPage"))
                }
            }(this))) : void("bottom" === n && this.trigger("pageLoaded", "bottom"))
        },
        actions: {
            showAllStickies: function() {
                a(this, "showHiddenStickies", !0)
            },
            initializeForum: function(e) {
                return null == e && (e = 1), a(this, "maxPage", e), a(this, "currentPosts", []), a(this, "currentPage", e - 1), a(this, "paginationInput", e), this.loadPage(e)
            },
            loadFirstPage: function() {
                return this.loadPage(1, {
                    forceReload: !0
                })
            }
        }
    }), e["default"] = n
}), define("mobile-panel/controllers/game/game-faq", ["exports"], function(e) {
    var t;
    Ember.get, Ember.set;
    t = Ember.ObjectController.extend(), e["default"] = t
}), define("mobile-panel/controllers/game/scores", ["exports", "mobile-panel/support/clone-object"], function(e, t) {
    var n, r = Ember.get,
        a = Ember.set;
    n = Ember.ObjectController.extend({
        statisticId: null,
        chosenTab: null,
        defaultTab: null,
        currentPages: null,
        loading: !1,
        statisticIdChanged: Ember.observer(function() {
            return Ember.run.next(function(e) {
                return function() {
                    return e.send("showStatistic", r(e, "statisticId"))
                }
            }(this))
        }, "statisticId"),
        modelChanged: Ember.observer(function() {
            return a(this, "loading", !1), r(this, "defaultTab") || r(r(this, "model"), "error") ? void 0 : this.chooseDefaultTab()
        }, "model"),
        activePageNum: Ember.computed(function() {
            return r(this, "currentPages")[r(this, "activePageName")]
        }).property("currentPages", "activePageName"),
        hasNext: Ember.computed(function() {
            return !r(this, "error") && r(this, "activePageNum") < r(this, "pageCounts")[r(this, "activeTabPrefix")]
        }).property("error", "activePageNum", "pageCounts", "activeTabPrefix"),
        hasPrevious: Ember.computed(function() {
            return r(this, "activePageNum") > 1
        }).property("activePageNum"),
        chooseDefaultTab: function() {
            return a(this, "defaultTab", ["friendsScores", "todayScores", "weeklyScores"].find(function(e) {
                return function(t) {
                    return r(r(e, "model")[t], "length") >= 5
                }
            }(this)))
        },
        activeTab: Ember.computed(function() {
            return null != r(this, "chosenTab") ? r(this, "chosenTab") : null != r(this, "defaultTab") ? r(this, "defaultTab") : "lifetimeScores"
        }).property("chosenTab", "defaultTab"),
        todayActive: Ember.computed.equal("activeTab", "todayScores"),
        weeklyActive: Ember.computed.equal("activeTab", "weeklyScores"),
        lifetimeActive: Ember.computed.equal("activeTab", "lifetimeScores"),
        friendsActive: Ember.computed.equal("activeTab", "friendsScores"),
        activeTabPrefix: Ember.computed(function() {
            return r(this, "activeTab").split(/[A-Z]/)[0]
        }).property("activeTab"),
        activePageName: Ember.computed(function() {
            return "" + r(this, "activeTabPrefix") + "Page"
        }).property("activeTabPrefix"),
        userScore: Ember.computed(function() {
            return null != (null != r(r(this, "model"), "userScores") ? r(r(this, "model"), "userScores")[r(this, "activeTabPrefix")] : void 0) ? null != r(r(this, "model"), "userScores") ? r(r(this, "model"), "userScores")[r(this, "activeTabPrefix")] : void 0 : "N/A"
        }).property("model.userScores", "activeTabPrefix"),
        scores: Ember.computed(function() {
            return r(this, "error") ? [] : r(this, "model")[r(this, "activeTab")].map(function(e) {
                return function(t, n) {
                    return {
                        score: t,
                        rank: 1 + n + r(e, "perPage") * (r(e, "activePageNum") - 1)
                    }
                }
            }(this))
        }).property("error", "model.@each", "activeTab.@each", "perPage", "activePageNum"),
        resetCurrentPages: function() {
            return a(this, "currentPages", {
                todayPage: 1,
                weeklyPage: 1,
                lifetimePage: 1,
                friendsPage: 1
            })
        },
        showUpsell: Ember.computed(function() {
            return !r(r(this, "activeUser"), "isAuthenticated") && "friendsScores" === r(this, "activeTab")
        }).property("activeUser.isAuthenticated", "activeTab"),
        actions: {
            changeTab: function(e) {
                return a(this, "chosenTab", e)
            },
            nextPage: function() {
                var e;
                return !r(this, "loading") && r(this, "hasNext") ? (a(this, "loading", !0), e = t["default"](r(this, "currentPages")), e[r(this, "activePageName")] += 1, this.send("loadScores", e)) : void 0
            },
            previousPage: function() {
                var e;
                return !r(this, "loading") && r(this, "hasPrevious") ? (a(this, "loading", !0), e = t["default"](r(this, "currentPages")), e[r(this, "activePageName")] -= 1, this.send("loadScores", e)) : void 0
            }
        }
    }), e["default"] = n
}), define("mobile-panel/controllers/game/support", ["exports", "mobile-panel/support/underscore-json", "ic-ajax"], function(e, t, n) {
    var r, a, l = Ember.get,
        i = Ember.set;
    a = ["playerId", "deviceType", "clientOsType", "clientOsVersion", "kongUsername", "clientVersion", "countryCode", "serverPlayerId", "playerLevel", "langCode", "kongUserId", "totalSpentInUsd", "serverTotalSpentInUsd", "daysSinceInstall"], r = Ember.ObjectController.extend({
        maxCharacters: 2e3,
        charactersRemaining: Ember.computed(function() {
            return Math.max(0, l(this, "maxCharacters") - (null != (null != l(this, "generalContent") ? l(l(this, "generalContent"), "length") : void 0) ? null != l(this, "generalContent") ? l(l(this, "generalContent"), "length") : void 0 : 0))
        }).property("maxCharacters", "generalContent.length"),
        feedbackTypeIsBadge: Ember.computed(function() {
            return "MissingAccomplishmentFeedback" === l(this, "feedbackType")
        }).property("feedbackType"),
        missingAccomplishmentIds: Ember.computed(function() {
            var e;
            return l(l(this, "activeUser"), "isAuthenticated") ? (e = l(l(this, "game"), "badges").map(function(e) {
                return l(e, "id")
            }), e.filter(function(e) {
                return function(t) {
                    return !l(e, "activeUser").hasBadge(t)
                }
            }(this))) : []
        }).property("activeUser.isAuthenticated", "game.badges.@each.@each", "activeUser"),
        missingAccomplishments: Ember.computed(function() {
            return l(this, "game").getBadges(l(this, "missingAccomplishmentIds")).map(function(e) {
                return {
                    label: "" + l(e, "name") + " - " + l(e, "level"),
                    value: l(e, "id")
                }
            })
        }).property("game.@each", "missingAccomplishmentIds.@each"),
        feedbackTypes: Ember.computed(function() {
            var e;
            return e = [], l(l(this, "missingAccomplishments"), "length") > 0 && e.push({
                value: "MissingAccomplishmentFeedback",
                label: "support.missingBadge"
            }), e.concat([{
                value: "GameBugReport",
                label: "support.gameBug"
            }, {
                value: "BugReport",
                label: "support.kongregateBug"
            }, {
                value: "FeatureRequest",
                label: "support.featureRequest"
            }, {
                value: "PurchasingIssuesReport",
                label: "support.purchasingIssues"
            }, {
                value: "OtherInquiryFeedback",
                label: "support.otherInquiry"
            }])
        }).property("missingAccomplishments.length"),
        feedbackParams: function() {
            var e, n;
            return n = ["generalContent", "gameId"], l(this, "feedbackTypeIsBadge") && n.push("missingAccomplishmentId"), n.push("emailAddress"), e = this.getProperties(n), i(e, "userData", Ember.getProperties(l(l(this, "device"), "analyticFields"), a)), t["default"](e)
        },
        emailAddress: Ember.computed(function() {
            return l(l(this, "activeUser"), "invalidEmailAddress") ? void 0 : l(l(this, "activeUser"), "emailAddress")
        }).property("activeUser.invalidEmailAddress", "activeUser.emailAddress"),
        clearForm: function() {
            return i(this, "model", {
                gameId: l(l(this, "game"), "id"),
                generalContent: null,
                replyToUser: !1,
                feedbackType: l(l(l(this, "feedbackTypes"), "firstObject"), "value"),
                missingAccomplishmentId: null != l(l(this, "missingAccomplishments"), "firstObject") ? l(l(l(this, "missingAccomplishments"), "firstObject"), "value") : void 0
            })
        },
        actions: {
            submit: function() {
                return i(this, "errors", []), this.prettyPromise(n["default"]("/feedbacks.json", {
                    method: "POST",
                    data: {
                        type: l(this, "feedbackType"),
                        feedback: this.feedbackParams()
                    }
                }).then(function(e) {
                    return function(t) {
                        return l(e, "analyticsService").pushSDKEvent("support_submissions"), l(e.displayModal({
                            title: l(e, "i18n").t("support.feedback"),
                            message: l(e, "i18n").t("support.success")
                        }), "promise").then(function(e) {
                            return function() {
                                return e.transitionToRoute("index")
                            }
                        }(e)), l(Ember.RSVP, "Promise").resolve(!0)
                    }
                }(this), function(e) {
                    return function(t) {
                        if (400 === l(l(t, "jqXHR"), "status")) return i(e, "errors", l($.parseJSON(l(l(t, "jqXHR"), "responseText")), "errors")), $(document).scrollTop(0);
                        throw t
                    }
                }(this)))
            },
            changeEmail: function() {
                return this.displayModal({
                    name: "change-email"
                })
            }
        }
    }), e["default"] = r
}), define("mobile-panel/controllers/game-forums", ["exports"], function(e) {
    var t;
    Ember.get, Ember.set;
    t = Ember.Controller.extend(), e["default"] = t
}), define("mobile-panel/controllers/image-modal", ["exports", "mobile-panel/controllers/modal"], function(e, t) {
    var n;
    Ember.get, Ember.set;
    n = t["default"].extend({
        boundClass: "image-modal",
        noTitle: !0,
        actions: {
            close: function() {
                return this.resolve()
            }
        }
    }), e["default"] = n
}), define("mobile-panel/controllers/index/badges-pod", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.Controller.extend({
        earnedBadgeCount: Ember.computed(function() {
            return n(n(n(this, "activeUser"), "completedBadges"), "length")
        }).property("activeUser.completedBadges.length"),
        totalBadgeCount: Ember.computed(function() {
            return n(n(n(this, "game"), "badges"), "length")
        }).property("game.badges.length"),
        unearnedBadges: Ember.computed(function() {
            return n(n(this, "game"), "badges").filter(function(e) {
                return function(t) {
                    return !n(n(e, "activeUser"), "completedBadges").contains(n(t, "id"))
                }
            }(this)).sortBy("numericLevel")
        }).property("game.badges.@each", "activeUser.completedBadges.@each"),
        earnedBadges: Ember.computed(function() {
            return n(n(this, "game"), "badges").filter(function(e) {
                return function(t) {
                    return n(n(e, "activeUser"), "completedBadges").contains(n(t, "id"))
                }
            }(this)).sortBy("numericLevel").reverse()
        }).property("game.badges.@each", "activeUser.completedBadges.@each"),
        highlightedBadge: Ember.computed(function() {
            return n(n(this, "unearnedBadges"), "firstObject") || n(n(this, "earnedBadges"), "firstObject")
        }).property("unearnedBadges.firstObject", "earnedBadges.firstObject")
    }), e["default"] = t
}), define("mobile-panel/controllers/index/coupon-promotion", ["exports", "mobile-panel/support/normalize-json", "ic-ajax"], function(e, t, n) {
    var r, a = Ember.get,
        l = Ember.set;
    r = Ember.Controller.extend({
        userHasCoupon: Ember.computed(function() {
            return a(a(this, "activeUser"), "claimedCoupon")
        }).property("activeUser.claimedCoupon"),
        claimContent: Ember.computed(function() {
            return a(a(a(this, "game"), "couponPromotion"), "claimContent").replace("<%= email_address %>", a(a(this, "activeUser"), "emailAddress"))
        }).property("game.couponPromotion.claimContent", "activeUser.emailAddress"),
        upsellContent: Ember.computed(function() {
            return a(a(a(this, "game"), "couponPromotion"), "upsellContent")
        }).property("game.couponPromotion.upsellContent"),
        couponEmail: Ember.computed(function() {
            return a(a(a(this, "activeUser"), "coupon"), "emailAddress")
        }).property("activeUser.coupon.emailAddress"),
        couponAvailableAfter: Ember.computed(function() {
            return a(a(a(this, "activeUser"), "coupon"), "availableAfter")
        }).property("activeUser.coupon.availableAfter"),
        expiresOn: Ember.computed(function() {
            return a(a(a(this, "activeUser"), "coupon"), "expiresOn")
        }).property("activeUser.coupon.expiresOn"),
        link: Ember.computed(function() {
            return a(a(a(this, "activeUser"), "coupon"), "link")
        }).property("activeUser.coupon.link"),
        couponAvailable: Ember.computed(function() {
            var e;
            return e = (new Date).getTime(), a(a(this, "activeUser"), "couponViewable") && a(a(a(this, "activeUser"), "coupon"), "availableAfter") <= e && a(a(a(this, "activeUser"), "coupon"), "availableBefore") >= e
        }).property()["volatile"](),
        actions: {
            claimCoupon: function() {
                return this.prettyPromise(n["default"]("/mobile_panel/claim_coupon.json", {
                    method: "POST"
                }).then(function(e) {
                    return function(n) {
                        return t["default"](n), l(a(e, "activeUser"), "claimedCoupon", !0), l(a(e, "activeUser"), "coupon", a(n, "coupon")), e.displayModal({
                            name: "coupon-claimed-modal",
                            title: "Almost done!"
                        })
                    }
                }(this)))
            },
            changeEmail: function() {
                var e;
                return e = a(a(this, "activeUser"), "coupon") ? a(this, "i18n").t("changeEmail.updateAndSendCoupon") : void 0, a(this.displayModal({
                    name: "change-email",
                    submitText: e
                }), "promise").then(function(e) {
                    return function() {
                        var r;
                        return (r = a(a(e, "activeUser"), "coupon")) && a(a(e, "activeUser"), "couponViewable") ? e.prettyPromise(n["default"]("" + a(r, "link") + "/resend.json").then(function(e) {
                            return function(n) {
                                return t["default"](n), l(a(e, "activeUser"), "coupon", a(n, "coupon"))
                            }
                        }(e), function(e) {
                            return function(t) {
                                var n;
                                if (403 === a(a(t, "jqXHR"), "status")) return n = JSON.parse(a(a(t, "jqXHR"), "responseText")), e.displayModal({
                                    message: a(n, "error_message")
                                });
                                throw t
                            }
                        }(e))) : void 0
                    }
                }(this))
            }
        }
    }), e["default"] = r
}), define("mobile-panel/controllers/index/forums-pod", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.ObjectController.extend({
        forumsAvailable: Ember.computed(function() {
            return null != (null != n(n(this, "activeUser"), "guild") ? n(n(n(this, "activeUser"), "guild"), "forumId") : void 0) || null != n(n(this, "game"), "gameForumId")
        }).property("activeUser.guild.forumId", "game.gameForumId")
    }), e["default"] = t
}), define("mobile-panel/controllers/index/guild-forum-pod", ["exports"], function(e) {
    var t;
    Ember.get, Ember.set;
    t = Ember.ObjectController.extend(), e["default"] = t
}), define("mobile-panel/controllers/index", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.ObjectController.extend({
        firstLoad: !0,
        delayed: !1,
        showCouponPromotion: Ember.computed(function() {
            return n(n(this, "game"), "couponPromotion") && n(n(this, "device"), "inApp") && (n(n(this, "activeUser"), "coupon") || !n(n(this, "activeUser"), "claimedCoupon") && n(n(n(this, "game"), "couponPromotion"), "active")) && n(n(this, "activeUser"), "couponEligible")
        }).property("game.couponPromotion", "device.inApp", "activeUser.coupon", "activeUser.claimedCoupon", "game.couponPromotion.active", "activeUser.couponEligible"),
        showGuildForum: Ember.computed(function() {
            return null != n(this, "guildForum") && !n(n(this, "activeUser"), "optedOutOfGuilds")
        }).property("guildForum", "activeUser.optedOutOfGuilds"),
        isRetention: Ember.computed(function() {
            return "Retention" === n(n(this, "game"), "landingLayout")
        }).property("game.landingLayout"),
        showMyProfile: Ember.computed(function() {
            return !n(n(this, "game"), "hasHighScores") && !n(n(this, "game"), "hasBadges")
        }).property("game.hasHighScores", "game.hasBadges"),
        defaultAdUrl: Ember.computed(function() {
            return n(n(this, "device"), "iosApp") ? "https://itunes.apple.com/us/artist/kongregate/id491569846" : "https://play.google.com/store/apps/developer?id=Kongregate"
        }).property("device.iosApp"),
        actions: {
            navigateToScores: function() {
                return this.transitionToRoute("game.scores", n(n(this, "game"), "defaultStatisticId"))
            },
            navigateToScore: function(e) {
                return this.transitionToRoute("game.scores", n(e, "id"))
            }
        }
    }), e["default"] = t
}), define("mobile-panel/controllers/login", ["exports", "mobile-panel/mixins/authentication", "ic-ajax"], function(e, t, n) {
    var r, a = Ember.get;
    Ember.set;
    r = Ember.Controller.extend(t["default"], {
        queryParams: ["emailAddress"],
        confirmButtonDisabled: Ember.computed(function() {
            return a(this, "busy") || !a(this, "securityCode")
        }).property("busy", "securityCode"),
        pendingMfaEmail: Ember.computed(function() {
            return "email" === (null != a(this, "pendingMfa") ? a(a(this, "pendingMfa"), "method") : void 0)
        }).property("pendingMfa.method"),
        reset: function() {
            return this.setProperties({
                pendingMfa: null,
                username: null,
                password: null,
                securityCode: null,
                errors: null,
                notice: null
            })
        },
        recordAuthenticationSuccess: function() {
            return a(this, "analyticsService").trackEvent("Sign In", "success")
        },
        recordAuthenticationFailure: function() {
            return a(this, "analyticsService").trackEvent("Sign In", "error")
        },
        actions: {
            cancelSecurityCode: function() {
                return this.reset()
            },
            resendSecurityCode: function() {
                return this.sendSecurityCode()
            },
            confirmSecurityCode: function() {
                return this.authenticate()
            },
            submit: function() {
                return this.authenticate()
            }
        }
    }), e["default"] = r
}), define("mobile-panel/controllers/manage-mfa", ["exports", "mobile-panel/support/normalize-json", "mobile-panel/controllers/modal", "ic-ajax", "ember-i18n"], function(e, t, n, r, a) {
    var l, i = Ember.get,
        o = Ember.set;
    l = n["default"].extend({
        title: a.translationMacro("manageMfa.title"),
        confirmDisabled: Ember.computed(function() {
            return i(i(this, "model"), "busy") || !i(i(this, "model"), "mfaCode")
        }).property("model.busy", "model.mfaCode"),
        performRequest: function(e) {
            return i(this, "model").setProperties({
                error: null,
                message: null,
                busy: !0
            }), this.prettyPromise(r["default"]("/accounts/" + i(i(this, "activeUser"), "username") + "/mfa.json", {
                method: i(e, "_method"),
                data: e
            }).then(function(e) {
                return function(t) {
                    return e.processResponse(t)
                }
            }(this))["catch"](function(e) {
                return function() {
                    return o(i(e, "model"), "error", i(e, "i18n").t("manageMfa.error"))
                }
            }(this))["finally"](function(e) {
                return function() {
                    return o(i(e, "model"), "busy", !1)
                }
            }(this)))
        },
        processResponse: function(e) {
            return t["default"](e), i(e, "success") ? (i(this, "activeUser").setProperties({
                mfaEnabled: i(e, "mfaEnabled"),
                mfaMethod: i(e, "mfaMethod"),
                emailVerified: i(e, "emailVerified")
            }), o(i(this, "model"), "message", i(e, "message"))) : o(i(this, "model"), "error", i(e, "error") || i(this, "i18n").t("manageMfa.error"))
        },
        actions: {
            enable: function() {
                return this.performRequest({
                    _method: "POST",
                    mfa_method: "email"
                })
            },
            resend: function() {
                return this.performRequest({
                    _method: "PUT",
                    resend_code: !0
                })
            },
            confirm: function() {
                return this.performRequest({
                    _method: "PUT",
                    mfa_code: i(i(this, "model"), "mfaCode")
                })
            },
            disable: function() {
                return this.performRequest({
                    _method: "DELETE"
                })
            }
        }
    }), e["default"] = l
}), define("mobile-panel/controllers/menu", ["exports"], function(e) {
    var t, n = Ember.get,
        r = Ember.set;
    t = Ember.Controller.extend({
        application: Ember.inject.controller(),
        needs: ["application"],
        menuVisible: !1,
        menuRendered: !1,
        addDeviceEventListeners: function() {
            return n(this, "device").on("toggle-menu", this, "toggleMenu")
        }.on("init"),
        removeDeviceListeners: function() {
            return n(this, "device").off("toggle-menu", this, "toggleMenu")
        }.on("willDestroy"),
        toggleMenu: function() {
            return this.toggleProperty("menuVisible")
        },
        menuVisibilityChanged: Ember.observer(function() {
            return n(this, "menuVisible") ? (this.send("renderMenu"), Ember.run.schedule("afterRender", function(e) {
                return function() {
                    return $("html").addClass("menu_open"), n(e, "application").trigger("menu-opening")
                }
            }(this))) : ($("html").removeClass("menu_open"), n(this, "application").trigger("menu-closing"))
        }, "menuVisible"),
        highScoresActive: Ember.computed(function() {
            return "game.scores" === n(n(this, "application"), "currentRouteName")
        }).property("application.currentRouteName"),
        showChat: Ember.computed(function() {
            return n(n(this, "device"), "hasGuildChat") && n(n(this, "activeUser"), "hasGuildChat") && !n(n(this, "game"), "darkLaunchMobileChat")
        }).property("device.hasGuildChat", "activeUser.hasGuildChat", "game.darkLaunchMobileChat"),
        actions: {
            open: function() {
                n(n(this, "application"), "menuButtonVisible") && r(this, "menuVisible", !0)
            },
            close: function() {
                return r(this, "menuVisible", !1)
            },
            profile: function() {
                return this.send("close"), this.transitionToRoute("profile.show", n(n(this, "activeUser"), "username"))
            },
            logout: function() {
                return n(this.displayModal({
                    message: n(this, "i18n").t("nav.logoutConfirmation"),
                    confirm: n(this, "i18n").t("nav.yes"),
                    cancel: n(this, "i18n").t("nav.no")
                }), "promise").then(function(e) {
                    return function() {
                        return e.transitionToRoute("logout")
                    }
                }(this))
            },
            scores: function() {
                return this.transitionToRoute("game.scores", n(n(this, "game"), "defaultStatisticId"))
            },
            reload: function() {
                return n(this, "device").reload()
            }
        }
    }), e["default"] = t
}), define("mobile-panel/controllers/messages", ["exports", "mobile-panel/support/normalize-json", "ic-ajax"], function(e, t, n) {
    var r, a = Ember.get,
        l = Ember.set;
    r = Ember.Controller.extend({
        nextSrid: null,
        unreadCount: null,
        messageCount: Ember.computed(function() {
            return a(a(this, "model"), "length")
        }).property("model.length"),
        handleContentUrl: function(e) {
            var r;
            return e.match("://www.kong.*\\.com/accounts/.*/email/edit$") ? a(this.displayModal({
                name: "change-email"
            }), "promise").then(function(e) {
                return function() {
                    return e.displayModal({
                        title: e.i18n("messages.emailUpdated")
                    })
                }
            }(this)) : (r = e.match("://www.kong.*\\.com(/coupon_promotions/\\d*/coupon/.*/resend)$")) ? this.prettyPromise(n["default"]("" + r[1] + ".json").then(function(e) {
                return function(n) {
                    return t["default"](n), l(a(e, "activeUser"), "coupon", a(n, "coupon")), e.displayModal({
                        title: "Coupon sent!"
                    })
                }
            }(this), function(e) {
                return function(t) {
                    var n;
                    if (403 === a(a(t, "jqXHR"), "status")) return n = JSON.parse(a(a(t, "jqXHR"), "responseText")), e.displayModal({
                        message: a(n, "error_message")
                    });
                    throw t
                }
            }(this))) : this.send("externalLink", e)
        },
        actions: {
            loadMore: function() {
                return this.prettyPromise(a(this, "store").query("message", {
                    srid: a(this, "nextSrid")
                }).then(function(e) {
                    return function(t) {
                        return l(e, "nextSrid", a(a(t, "meta"), "next_srid")), l(e, "unreadCount", a(a(t, "meta"), "unread_count")), a(e, "model").addObjects(t)
                    }
                }(this)))
            },
            sendMessage: function(e) {
                return a(a(this, "activeUser"), "isAuthenticated") ? this.displayModal({
                    name: "profile.send-message",
                    username: e
                }) : this.send("redirectToRegistrationFlowWithMessage", "Sign-in or register to message friends")
            }
        }
    }), e["default"] = r
}), define("mobile-panel/controllers/modal", ["exports", "mobile-panel/support/describe-errors"], function(e, t) {
    var n, r = Ember.get,
        a = Ember.set;
    n = Ember.ObjectController.extend({
        title: Ember.computed(function() {
            return null != r(r(this, "model"), "title") ? r(r(this, "model"), "title") : r(this, "i18n").t("modal.defaultTitle")
        }).property("i18n.locale", "model.title"),
        errors: Ember.computed(function() {
            return t["default"](r(r(this, "model"), "errors"))
        }).property("model.errors"),
        setup: function(e, t) {
            return a(e, "settled", !1), a(e, "deferred", t), this.setProperties({
                model: e
            })
        },
        resolve: function(e) {
            r(r(this, "model"), "settled") || (a(r(this, "model"), "settled", !0), r(r(this, "model"), "deferred").resolve(e), this.send("closeModal"))
        },
        reject: function(e) {
            r(r(this, "model"), "settled") || (a(r(this, "model"), "settled", !0), r(r(this, "model"), "deferred").reject(e), this.send("closeModal"))
        },
        actions: {
            close: function() {
                return this.reject(!1)
            },
            changeChatSize: function(e) {
                return r(this, "activeUser").updateChatSize(e), this.send("closeModal")
            }
        }
    }), e["default"] = n
}), define("mobile-panel/controllers/more-games", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.Controller.extend({
        actions: {
            clickthrough: function() {
                return n(this, "analyticsService").pushSDKEvent("more_games_clickthroughs")
            }
        }
    }), e["default"] = t
}), define("mobile-panel/controllers/post-flag-modal", ["exports", "mobile-panel/controllers/modal", "ic-ajax"], function(e, t, n) {
    var r, a = Ember.get,
        l = Ember.set;
    r = t["default"].extend({
        reasons: [{
            label: "postFlagModal.spam",
            value: "Spam"
        }, {
            label: "postFlagModal.harassingOtherUsers",
            value: "Harassing other users"
        }, {
            label: "postFlagModal.inappropriateLinkImage",
            value: "Inappropriate link/image"
        }, {
            label: "postFlagModal.inappropriateLanguage",
            value: "Inappropriate language"
        }, {
            label: "postFlagModal.other",
            value: "Other"
        }],
        selectedReason: null,
        clearSelectedReason: Ember.observer(function() {
            return l(this, "selectedReason", null)
        }, "model"),
        actions: {
            flag: function() {
                return a(this, "selectedReason") ? (l(a(this, "model"), "errors", null), this.prettyPromise(n["default"]("/posts/" + a(a(this, "object"), "id") + "/flagging", {
                    method: "POST",
                    type: "json",
                    data: {
                        post_flagging: {
                            flagging_reason: a(this, "selectedReason")
                        }
                    }
                }).then(function(e) {
                    return function(t) {
                        return a(e, "store").pushPayload("post", t), e.resolve(!0)
                    }
                }(this), function(e) {
                    return function() {
                        return l(a(e, "model"), "errors", {
                            server: !0
                        })
                    }
                }(this)))) : void 0
            }
        }
    }), e["default"] = r
}), define("mobile-panel/controllers/post-list-item", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.ObjectController.extend({
        isNew: Ember.computed(function() {
            return n(this, "forumViewTrackingService").isNewPost(n(this, "model"))
        }).property("forumViewTrackingService", "model"),
        viewingOwnPost: Ember.computed(function() {
            return n(n(this, "activeUser"), "id") === parseInt(n(n(this, "user"), "id"))
        }).property("activeUser.id", "user.id"),
        moderator: Ember.computed(function() {
            return n(n(this, "activeUser"), "moderatedForums").indexOf("all") >= 0 || n(n(this, "activeUser"), "moderatedForums").indexOf(parseInt(n(n(n(n(this, "model"), "topic"), "forum"), "id"))) >= 0
        }).property("activeUser.moderatedForums", "model.topic.forum.id"),
        showControls: Ember.computed(function() {
            return n(this, "moderator") || !n(n(this, "model"), "hidden")
        }).property("moderator", "model.hidden"),
        showPostedBy: Ember.computed(function() {
            return !n(n(this, "model"), "hidden") || n(this, "moderator") || n(this, "viewingOwnPost")
        }).property("model.hidden", "moderator", "viewingOwnPost"),
        domId: Ember.computed(function() {
            return "post-" + n(this, "id")
        }).property("id"),
        displayName: Ember.computed(function() {
            return n(n(n(this, "topic"), "forum"), "isGuildForum") && n(n(this, "activeUser"), "showInGameNames") ? n(n(this, "user"), "characterName") : n(n(this, "user"), "username")
        }).property("topic.forum.isGuildForum", "activeUser.showInGameNames", "user.characterName", "user.username")
    }), e["default"] = t
}), define("mobile-panel/controllers/post-moderate-modal", ["exports", "mobile-panel/controllers/modal", "mobile-panel/mixins/create-or-edit-post", "ic-ajax"], function(e, t, n, r) {
    var a, l = Ember.get,
        i = Ember.set;
    a = t["default"].extend(n["default"], {
        actions: {
            hidePost: function() {
                return this.prettyPromise(r["default"]("/forums/" + l(l(l(l(this, "object"), "topic"), "forum"), "id") + "/topics/" + l(l(l(this, "object"), "topic"), "id") + "/posts/" + l(l(this, "object"), "id") + "/hide.json", {
                    method: "POST",
                    type: "json"
                }).then(function(e) {
                    return function(t) {
                        return i(l(e, "object"), "hidden", !l(l(e, "object"), "hidden")), e.resolve(!0)
                    }
                }(this), function(e) {
                    return function() {
                        return i(l(e, "model"), "errors", {
                            server: !0
                        })
                    }
                }(this)))
            },
            markPostAsSpam: function() {
                return this.prettyPromise(r["default"]("/forums/" + l(l(l(l(this, "object"), "topic"), "forum"), "id") + "/topics/" + l(l(l(this, "object"), "topic"), "id") + "/posts/" + l(l(this, "object"), "id") + "/spam.json", {
                    method: "POST",
                    type: "json"
                }).then(function(e) {
                    return function(t) {
                        return i(l(e, "object"), "hidden", !0), e.resolve(!0)
                    }
                }(this), function(e) {
                    return function() {
                        return i(l(e, "model"), "errors", {
                            server: !0
                        })
                    }
                }(this)))
            },
            deletePost: function() {
                return l(l(this, "deferred"), "promise").then(function(e) {
                    return function() {
                        return l(e.displayModal({
                            message: l(e, "i18n").t("postModerate.confirmDelete"),
                            confirm: l(e, "i18n").t("yes"),
                            cancel: l(e, "i18n").t("no")
                        }), "promise").then(function(e) {
                            return function() {
                                return e.prettyPromise(r["default"]("/forums/" + l(l(l(l(e, "object"), "topic"), "forum"), "id") + "/topics/" + l(l(l(e, "object"), "topic"), "id") + "/posts/" + l(l(e, "object"), "id") + ".json", {
                                    method: "DELETE",
                                    type: "json"
                                }).then(function(e) {
                                    return function(t) {
                                        return l(e, "object").deleteRecord(), e.resolve(!0)
                                    }
                                }(e), function(e) {
                                    return function() {
                                        return i(l(e, "model"), "errors", {
                                            server: !0
                                        })
                                    }
                                }(e)))
                            }
                        }(e)), null
                    }
                }(this)), this.resolve(!0)
            },
            editPost: function() {
                return l(l(this, "deferred"), "promise").then(function(e) {
                    return function() {
                        return e.createOrEditPost(l(e, "object"))["catch"](function(e) {
                            return function() {
                                return l(e, "object").rollbackAttributes()
                            }
                        }(e)), null
                    }
                }(this)), this.resolve(!0)
            }
        }
    }), e["default"] = a
}), define("mobile-panel/controllers/privacy-policy-required", ["exports", "ic-ajax", "ember-i18n"], function(e, t, n) {
    var r, a = Ember.get,
        l = Ember.set;
    r = Ember.Controller.extend({
        actions: {
            submitPolicyConsent: function() {
                return this.prettyPromise(t["default"]("/accounts/" + a(a(this, "activeUser"), "username") + "/privacy_policy_consent.json", {
                    method: "POST",
                    data: {
                        privacy_policy_consent: "1",
                        _method: "PUT"
                    }
                }).then(function(e) {
                    return function() {
                        return a(e, "activeUser").acceptPrivacyPolicy(), e.transitionToRoute("index")
                    }
                }(this)))
            },
            submitParentEmail: function() {
                return this.prettyPromise(t["default"]("/accounts/" + a(a(this, "activeUser"), "username") + "/privacy_policy_consent.json", {
                    method: "POST",
                    data: {
                        parent_email: a(this, "parentEmail"),
                        showing_parent_form: "true",
                        _method: "PUT"
                    }
                }).then(function(e) {
                    return function(t) {
                        return a(t, "success") ? (l(a(e, "activeUser"), "mustEnterParentEmail", !1), l(a(e, "activeUser"), "awaitingParentalConsent", !0), l(e, "showThankYou", !0)) : l(e, "parentEmailError", !0), e.transitionToRoute("privacy-policy-required")
                    }
                }(this)))
            },
            logout: function() {
                return this.transitionToRoute("logout")
            }
        }
    }), e["default"] = r
}), define("mobile-panel/controllers/profile/befriendings", ["exports", "mobile-panel/mixins/profile-controller"], function(e, t) {
    var n, r = Ember.get;
    Ember.set;
    n = Ember.ObjectController.extend(t["default"], {
        showFriendsLink: Ember.computed.gt("friendsCount", 20),
        showFansLink: Ember.computed.gt("fansCount", 20),
        showFriendsContainer: Ember.computed(function() {
            return r(this, "friends")
        }).property("friends"),
        showFansContainer: Ember.computed(function() {
            return r(this, "fans")
        }).property("fans"),
        actions: {
            goToFriends: function() {
                return this.transitionToRoute("profile.friends", r(this, "username"))
            },
            goToFans: function() {
                return this.transitionToRoute("profile.fans", r(this, "username"))
            }
        }
    }), e["default"] = n
}), define("mobile-panel/controllers/profile/fans", ["exports", "mobile-panel/support/normalize-json", "mobile-panel/mixins/pagination-controller", "mobile-panel/mixins/profile-controller", "ic-ajax"], function(e, t, n, r, a) {
    var l, i = Ember.get,
        o = Ember.set;
    l = Ember.Controller.extend(Ember.Evented, n["default"], r["default"], {
        username: null,
        currentFans: null,
        fansCount: null,
        loadPage: function(e) {
            return this.prettyPromise(a["default"]("/mobile_panel/profile/" + i(this, "username") + "/befriendings/fans?page=" + e, {
                method: "GET"
            })["catch"](function(e) {
                return function(t) {
                    return e.transitionToRoute("profile.show", i(e, "username"))
                }
            }(this)).then(function(n) {
                return function(r) {
                    var a;
                    return a = t["default"](r), o(n, "currentPage", e), o(n, "maxPage", i(a, "maxPage")), o(n, "fansCount", i(a, "fansCount")), e > i(n, "maxPage") ? n.loadPage(i(n, "maxPage")) : (o(n, "currentFans", i(a, "fans")), n.trigger("scrollToAnchor", "top"))
                }
            }(this))["finally"](function(e) {
                return function() {
                    return o(e, "paginationInput", i(e, "currentPage"))
                }
            }(this)))
        },
        actions: {
            initializeFans: function(e) {
                return null == e && (e = 1), o(this, "maxPage", e), o(this, "currentFans", []), o(this, "currentPage", e - 1), o(this, "paginationInput", e), this.loadPage(e)
            }
        }
    }), e["default"] = l
}), define("mobile-panel/controllers/profile/friends", ["exports", "mobile-panel/support/normalize-json", "mobile-panel/mixins/pagination-controller", "mobile-panel/mixins/profile-controller", "ic-ajax"], function(e, t, n, r, a) {
    var l, i = Ember.get,
        o = Ember.set;
    l = Ember.Controller.extend(Ember.Evented, n["default"], r["default"], {
        username: null,
        currentFriends: null,
        fansCount: null,
        loadPage: function(e) {
            return this.prettyPromise(a["default"]("/mobile_panel/profile/" + i(this, "username") + "/befriendings/friends?page=" + e, {
                method: "GET"
            })["catch"](function(e) {
                return function(t) {
                    return e.transitionToRoute("profile.show", i(e, "username"))
                }
            }(this)).then(function(n) {
                return function(r) {
                    var a;
                    return a = t["default"](r), o(n, "currentPage", e), o(n, "maxPage", i(a, "maxPage")), o(n, "friendsCount", i(a, "friendsCount")), e > i(n, "maxPage") ? n.loadPage(i(n, "maxPage")) : (o(n, "currentFriends", i(a, "friends")), n.trigger("scrollToAnchor", "top"))
                }
            }(this))["finally"](function(e) {
                return function() {
                    return o(e, "paginationInput", i(e, "currentPage"))
                }
            }(this)))
        },
        actions: {
            initializeFriends: function(e) {
                return null == e && (e = 1), o(this, "maxPage", e), o(this, "currentFriends", []), o(this, "currentPage", e - 1), o(this, "paginationInput", e), this.loadPage(e)
            }
        }
    }), e["default"] = l
}), define("mobile-panel/controllers/profile/games", ["exports", "mobile-panel/mixins/profile-controller"], function(e, t) {
    var n, r = Ember.get;
    Ember.set;
    n = Ember.ObjectController.extend(t["default"], {
        gamesPlayedCount: Ember.computed(function() {
            return r(r(this, "gamesPlayed"), "length")
        }).property("gamesPlayed.length"),
        showSuggested: Ember.computed(function() {
            return r(this, "viewingOwnProfile") && r(r(this, "gamesSuggested"), "length") > 0
        }).property("viewingOwnProfile", "gamesSuggested.length")
    }), e["default"] = n
}), define("mobile-panel/controllers/profile/posts", ["exports", "mobile-panel/mixins/pagination-controller"], function(e, t) {
    var n, r = Ember.get,
        a = Ember.set;
    n = Ember.Controller.extend(Ember.Evented, t["default"], {
        username: null,
        currentPosts: null,
        postsCount: null,
        loadPage: function(e) {
            return this.prettyPromise(r(this, "store").query("post", {
                username: r(this, "username"),
                page: e
            }).then(function(t) {
                return function(n) {
                    var l;
                    return a(t, "currentPage", e), l = r(n, "meta"), a(t, "maxPage", r(l, "max_page")), a(t, "postsCount", r(l, "posts_count")), e > r(t, "maxPage") ? t.loadPage(r(t, "maxPage")) : (a(t, "currentPosts", n), Ember.run.schedule("afterRender", function(e) {
                        return function() {
                            return e.trigger("scrollToAnchor", "top")
                        }
                    }(t)))
                }
            }(this))["finally"](function(e) {
                return function() {
                    return a(e, "paginationInput", r(e, "currentPage"))
                }
            }(this)))
        },
        actions: {
            initializeTopic: function(e) {
                return null == e && (e = 1), a(this, "maxPage", e), a(this, "currentPosts", []), a(this, "currentPage", e - 1), a(this, "paginationInput", e), this.loadPage(e)
            },
            viewPost: function(e) {
                return this.transitionToRoute("topic", r(e, "topic"), {
                    queryParams: {
                        page: r(e, "pageNumber"),
                        anchor: "post-" + r(e, "id")
                    }
                })
            }
        }
    }), e["default"] = n
}), define("mobile-panel/controllers/profile/send-message", ["exports", "mobile-panel/support/normalize-json", "mobile-panel/controllers/modal", "ic-ajax", "ember-i18n"], function(e, t, n, r, a) {
    var l, i = Ember.get,
        o = Ember.set;
    l = n["default"].extend({
        title: a.translationMacro("profile.sendMessage.title", {
            user: "username"
        }),
        actions: {
            sendMessage: function() {
                return this.prettyPromise(r["default"]("/mobile_panel/profile/" + i(this, "username") + "/message", {
                    method: "POST",
                    data: {
                        content: i(this, "message")
                    }
                }).then(function(e) {
                    return function() {
                        return e.resolve()
                    }
                }(this), function(e) {
                    return function(n) {
                        var r;
                        return r = n.jqXHR, o(i(e, "model"), "errors", i(r, "responseJSON") ? t["default"](i(i(r, "responseJSON"), "errors")) : {
                            server: !0
                        })
                    }
                }(this)))
            }
        }
    }), e["default"] = l
}), define("mobile-panel/controllers/profile/show", ["exports", "mobile-panel/mixins/change-avatar", "mobile-panel/mixins/profile-controller"], function(e, t, n) {
    var r, a = Ember.get,
        l = Ember.set;
    r = Ember.ObjectController.extend(n["default"], t["default"], {
        hideInfo: Ember.computed(function() {
            return a(this, "private") && !a(this, "viewingOwnProfile")
        }).property("private", "viewingOwnProfile"),
        showInGameName: Ember.computed(function() {
            return a(this, "inGameName") && !a(this, "optedOutOfGuilds") && !a(a(this, "activeUser"), "optedOutOfGuilds")
        }).property("inGameName", "optedOutOfGuilds", "activeUser.optedOutOfGuilds"),
        actions: {
            befriend: function() {
                return a(a(this, "activeUser"), "isAuthenticated") ? this.prettyPromise(a(this, "friendService").befriend(a(this, "username"))).then(function(e) {
                    return function() {
                        return l(e, "friends", !0)
                    }
                }(this)) : this.send("redirectToRegistrationFlowWithMessage", "Sign-in or register to connect with friends")
            },
            unfriend: function() {
                return this.prettyPromise(a(this, "friendService").unfriend(a(this, "username"))).then(function(e) {
                    return function() {
                        return l(e, "friends", !1)
                    }
                }(this))
            },
            sendMessage: function() {
                return a(a(this, "activeUser"), "isAuthenticated") ? this.displayModal({
                    name: "profile.send-message",
                    username: a(this, "username")
                }) : this.send("redirectToRegistrationFlowWithMessage", "Sign-in or register to message friends")
            },
            toggleShowAll: function() {
                return this.toggleProperty("showAll"), !1
            },
            goToMyGames: function() {
                return a(this, "gamesCount") ? this.transitionToRoute("profile.games", a(this, "username")) : void 0
            },
            goToForumPosts: function() {
                return a(this, "postsCount") ? this.transitionToRoute("profile.posts", a(this, "username")) : void 0
            },
            goToBadges: function() {
                return a(this, "earnedBadgesCount") ? this.transitionToRoute("profile.badges", a(this, "username")) : void 0
            },
            goToMyFriends: function() {
                return a(this, "friendsCount") || a(this, "fansCount") ? this.transitionToRoute("profile.befriendings", a(this, "username")) : void 0
            }
        }
    }), e["default"] = r
}), define("mobile-panel/controllers/registration-flow/birthdate", ["exports", "ic-ajax"], function(e, t) {
    var n, r = Ember.get,
        a = Ember.set;
    n = Ember.Controller.extend({
        needs: "registrationFlow",
        birthYear: Ember.computed.alias("controllers.registrationFlow.birthYear"),
        birthMonth: Ember.computed.alias("controllers.registrationFlow.birthMonth"),
        birthDay: Ember.computed.alias("controllers.registrationFlow.birthDay"),
        message: Ember.computed.alias("controllers.registrationFlow.message"),
        parentEmail: Ember.computed.alias("controllers.registrationFlow.parentEmail"),
        thisYear: Ember.computed(function() {
            return (new Date).getFullYear()
        }).property(),
        months: Ember.computed(function() {
            var e;
            return e = "january february march april may june july august september october november december", e.w().map(function(e, t) {
                return {
                    name: e,
                    number: t + 1
                }
            })
        }).property(),
        days: function() {
            var e;
            e = [];
            for (var t = 1; 31 >= t; ++t) e.push(t);
            return e
        }.call(void 0),
        years: Ember.computed(function() {
            return function() {
                var e;
                e = [];
                for (var t = 1940; 1940 <= r(this, "thisYear") ? t <= r(this, "thisYear") : t >= r(this, "thisYear"); 1940 <= r(this, "thisYear") ? ++t : --t) e.push(t);
                return e
            }.apply(this, arguments)
        }).property("thisYear"),
        showMonthAndDay: Ember.computed(function() {
            return r(this, "birthYear") >= r(this, "thisYear") - r(r(this, "activeUser"), "ageOfConsent")
        }).property("birthYear", "thisYear", "activeUser.ageOfConsent"),
        age: Ember.computed(function() {
            var e, t, n;
            if (r(this, "birthYear") && r(this, "birthMonth") && r(this, "birthDay")) return n = new Date(r(this, "birthYear"), r(this, "birthMonth") - 1, r(this, "birthDay")), t = Date.now() - n.getTime(), e = new Date(t), Math.abs(e.getUTCFullYear() - 1970)
        }).property("birthYear", "birthMonth", "birthDay"),
        showParentEmail: Ember.computed(function() {
            return r(r(this, "activeUser"), "inEuConsentCountry") && r(this, "age") && r(this, "age") < r(r(this, "activeUser"), "ageOfConsent")
        }).property("activeUser.inEuConsentCountry", "age", "activeUser.ageOfConsent"),
        actions: {
            submit: function() {
                r(this, "birthYear") && (!r(this, "showMonthAndDay") || r(this, "birthDay") && r(this, "birthMonth")) ? r(this, "showParentEmail") ? this.prettyPromise(t["default"]("/accounts/email_valid.json", {
                    method: "GET",
                    data: {
                        email: r(this, "parentEmail")
                    }
                }).then(function(e) {
                    return function(t) {
                        r(t, "valid") === !0 ? (r(r(e, "controllers"), "registrationFlow").nextStep(), a(e, "parentEmailError", !1), r(e, "activeUser").set("age", r(e, "age"))) : a(e, "parentEmailError", !0)
                    }
                }(this))) : (r(this, "activeUser").set("age", r(this, "age")), r(r(this, "controllers"), "registrationFlow").nextStep(), a(this, "dateError", !1), a(this, "parentEmailError", !1)) : a(this, "dateError", !0)
            }
        }
    }), e["default"] = n
}), define("mobile-panel/controllers/registration-flow/email-address", ["exports", "ic-ajax"], function(e, t) {
    var n, r = Ember.get,
        a = Ember.set;
    n = Ember.Controller.extend({
        needs: "registrationFlow",
        emailAddress: Ember.computed.alias("controllers.registrationFlow.emailAddress"),
        message: Ember.computed.alias("controllers.registrationFlow.message"),
        actions: {
            submit: function() {
                var e;
                return e = r(this, "emailAddress"), a(this, "takenEmailAddress", null), a(this, "errors", !1), this.prettyPromise(t["default"]("/accounts/email_valid.json", {
                    method: "GET",
                    data: {
                        check_uniqueness: !0,
                        email: r(this, "emailAddress")
                    }
                }).then(function(t) {
                    return function(n) {
                        r(n, "valid") === !0 ? (r(r(t, "controllers"), "registrationFlow").nextStep(), a(t, "errors", !1)) : r(n, "taken") === !0 ? a(t, "takenEmailAddress", e) : a(t, "errors", !0)
                    }
                }(this)))
            }
        }
    }), e["default"] = n
}), define("mobile-panel/controllers/registration-flow/password", ["exports"], function(e) {
    var t, n = Ember.get,
        r = Ember.set;
    t = Ember.Controller.extend({
        needs: "registrationFlow",
        password: Ember.computed.alias("controllers.registrationFlow.password"),
        message: Ember.computed.alias("controllers.registrationFlow.message"),
        actions: {
            submit: function() {
                !n(this, "password") || n(n(this, "password"), "length") < 10 || n(n(this, "password"), "length") > 55 ? r(this, "errors", !0) : (n(n(this, "controllers"), "registrationFlow").nextStep(), r(this, "errors", !1))
            }
        }
    }), e["default"] = t
}), define("mobile-panel/controllers/registration-flow/username", ["exports", "mobile-panel/support/normalize-json", "mobile-panel/support/underscore-json", "mobile-panel/mixins/authentication", "ic-ajax"], function(e, t, n, r, a) {
    var l, i = Ember.get,
        o = Ember.set;
    l = Ember.Controller.extend(r["default"], {
        needs: "registrationFlow",
        username: Ember.computed.alias("controllers.registrationFlow.username"),
        optIn: Ember.computed.alias("controllers.registrationFlow.optIn"),
        message: Ember.computed.alias("controllers.registrationFlow.message"),
        privacyPolicyConsent: Ember.computed.alias("controllers.registrationFlow.privacyPolicyConsent"),
        errorMessages: Ember.computed(function() {
            var e;
            return e = i(this, "errors"), Ember.keys(e).map(function(t) {
                return e[t]
            }).reject(function(e) {
                return e.match(/hash/)
            })
        }).property("errors.@each.@each.@each"),
        userParams: function() {
            var e, t;
            return e = i(i(this, "controllers"), "registrationFlow"), t = n["default"](e.getProperties("emailAddress", "username", "password", "optIn", "privacyPolicyConsent", "parentEmail")), o(t, "age_concern", i(this, "ageConcern")), t
        },
        ageConcern: Ember.computed(function() {
            return i(i(this, "activeUser"), "age") < 13 ? "coppa" : i(i(this, "activeUser"), "parentalConsentRequired") ? "parent" : "false"
        }).property("activeUser.age", "activeUser.parentalConsentRequired"),
        actions: {
            submit: function() {
                var e;
                return e = i(i(i(this, "controllers"), "registrationFlow"), "emailAddress"), o(this, "takenEmailAddress", null), this.prettyPromise(a["default"]("/accounts.json", {
                    method: "POST",
                    data: {
                        user: this.userParams(),
                        game_id: i(i(this, "game"), "id")
                    }
                }).then(function(n) {
                    return function(r) {
                        return i(r, "user") ? (i(n, "analyticsService").trackEvent("Registration", "success"), i(n, "analyticsService").pushSDKEvent("account_created_at_local", (new Date).toISOString(), "replace"), n.finishAuthentication(r)) : i(r, "email_taken") ? o(n, "takenEmailAddress", e) : (t["default"](r), i(n, "analyticsService").trackEvent("Registration", "error"), o(i(n, "activeUser"), "kongUnderage", i(r, "underage")), i(i(n, "activeUser"), "kongUnderage") ? void 0 : o(n, "errors", i(r, "errors")))
                    }
                }(this)))
            }
        }
    }), e["default"] = l
}), define("mobile-panel/controllers/registration-flow", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.Controller.extend({
        needs: "application",
        optIn: Ember.computed(function() {
            return n(this, "activeUser").registrationOptIn()
        }).property("activeUser"),
        nextStep: function() {
            var e;
            return e = function() {
                switch (n(this, "currentStep")) {
                    case "email-address":
                        return "password";
                    case "password":
                        return "birthdate";
                    case "birthdate":
                        return "username"
                }
            }.call(this), this.transitionToRoute("registration-flow." + e)
        },
        currentStep: Ember.computed(function() {
            return n(n(n(this, "controllers"), "application"), "currentRouteName").split(".")[1]
        }).property("controllers.application.currentRouteName")
    }), e["default"] = t
}), define("mobile-panel/controllers/room-list-modal", ["exports", "mobile-panel/controllers/chat-modal"], function(e, t) {
    var n, r = Ember.get,
        a = Ember.set;
    n = t["default"].extend({
        guildMotdService: Ember.inject.service("guild-motd"),
        participantCount: Ember.computed(function() {
            return r(r(this, "characters"), "length")
        }).property("characters.length"),
        onlineCount: Ember.computed(function() {
            return r(r(this, "characters").filterBy("active", !0), "length")
        }).property("characters.length"),
        performAsync: function() {
            return Ember.RSVP.all([r(this, "guildMotdService").fetch(r(r(r(r(this, "activeUser"), "chatInfo"), "authentication"), "guildId")), r(this, "roomListService").fetch(r(this, "room"))]).then(function(e) {
                return function(t) {
                    var n, l, i;
                    return n = t, l = n[0], i = n[1], a(e, "motd", l), a(e, "characters", r(i, "characters").sort(function(e, t) {
                        return Ember.compare(r(e, "characterName").toLowerCase(), r(t, "characterName").toLowerCase())
                    }))
                }
            }(this), function(e) {
                return function() {
                    return a(r(e, "model"), "errors", {
                        server: !0
                    })
                }
            }(this))
        },
        actions: {
            visitProfile: function(e) {
                return r(e, "kuid") !== r(r(this, "activeUser"), "kuid") ? (this.send("close"), this.displayModal({
                    name: "chat.profile",
                    model: e
                })) : void 0
            }
        }
    }), e["default"] = n
}), define("mobile-panel/controllers/topic-list-item", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.ObjectController.extend({
        hasRecentActivity: Ember.computed(function() {
            return n(this, "forumViewTrackingService").hasRecentTopicActivity(n(this, "model"))
        }).property("forumViewTrackingService", "model")
    }), e["default"] = t
}), define("mobile-panel/controllers/topic-moderate-modal", ["exports", "mobile-panel/controllers/modal"], function(e, t) {
    var n, r = Ember.get,
        a = Ember.set;
    n = t["default"].extend({
        actions: {
            save: function() {
                return a(r(this, "model"), "errors", null), this.prettyPromise(r(this, "object").save().then(function(e) {
                    return function() {
                        return e.resolve(r(e, "object"))
                    }
                }(this), function(e) {
                    return function(t) {
                        return e.send("scrollToTop"), null != r(t, "errors") ? a(r(e, "model"), "errors", r(t, "errors")) : a(r(e, "model"), "errors", {
                            server: !0
                        })
                    }
                }(this)))
            }
        }
    }), e["default"] = n
}), define("mobile-panel/controllers/topic-toolbar", ["exports", "mobile-panel/mixins/create-or-edit-post"], function(e, t) {
    var n, r = Ember.get;
    Ember.set;
    n = Ember.Controller.extend(t["default"], {
        parentForum: Ember.computed(function() {
            return r(r(r(this, "controllers"), "topic"), "forum")
        }).property("controllers.topic.forum"),
        actions: {
            reply: function() {
                var e;
                return e = r(this, "store").createRecord("post", {
                    topic: r(r(r(this, "controllers"), "topic"), "model")
                }), this.createOrEditPost(e)
            }
        }
    }), e["default"] = n
}), define("mobile-panel/controllers/topic", ["exports", "mobile-panel/mixins/create-or-edit-post", "mobile-panel/mixins/pagination-controller"], function(e, t, n) {
    var r, a = Ember.get,
        l = Ember.set;
    r = Ember.ObjectController.extend(Ember.Evented, t["default"], n["default"], {
        currentPosts: null,
        moderator: Ember.computed(function() {
            return a(a(this, "activeUser"), "moderatedForums").indexOf("all") >= 0 || a(a(this, "activeUser"), "moderatedForums").indexOf(parseInt(a(a(a(this, "model"), "forum"), "id"))) >= 0
        }).property("activeUser.moderatedForums", "model.forum.id"),
        loadPage: function(e, t) {
            var n, r, i;
            return null == t && (t = {}), r = t, n = r.anchor, i = r.forceReload, n || (n = "top"), i || (i = !1), e !== a(this, "currentPage") || i ? this.prettyPromise(a(this, "model").posts(e).then(function(t) {
                return function(r) {
                    return l(t, "currentPage", e), l(t, "maxPage", a(a(r, "meta"), "max_page")), e > a(t, "maxPage") ? t.loadPage(a(t, "maxPage")) : (l(t, "currentPosts", r), Ember.run.schedule("afterRender", function(e) {
                        return function() {
                            return e.trigger("scrollToAnchor", n), a(a(e, "currentPosts"), "lastObject") ? a(e, "forumViewTrackingService").trackTopicView(a(a(e, "currentPosts"), "lastObject")) : void 0
                        }
                    }(t)))
                }
            }(this))["finally"](function(e) {
                return function() {
                    return l(e, "paginationInput", a(e, "currentPage"))
                }
            }(this))) : void("bottom" === n && this.trigger("pageLoaded", "bottom"))
        },
        actions: {
            quotePost: function(e) {
                var t, n, r;
                return r = a(a(e, "user"), "username"), a(a(a(this, "model"), "forum"), "isGuildForum") && (r += " (" + a(a(e, "user"), "characterName") + ")"), t = "> _Originally posted by **[" + r + "](/forums/" + a(a(this, "game"), "gameForumId") + "/topics/" + a(a(this, "model"), "id") + "?page=" + a(this, "currentPage") + "#" + a(e, "id") + "):**_\n> " + a(e, "body").split("\n").join("\n> ") + "\n\n", n = a(this, "store").createRecord("post", {
                    topic: a(this, "model"),
                    body: t
                }), this.createOrEditPost(n)
            },
            editPost: function(e) {
                return this.createOrEditPost(e)["catch"](function() {
                    return e.rollbackAttributes()
                })
            },
            initializeTopic: function(e, t) {
                return null == e && (e = 1), l(this, "maxPage", e), l(this, "currentPosts", []), l(this, "currentPage", e - 1), l(this, "paginationInput", e), this.loadPage(e, {
                    anchor: t
                })
            },
            flagPost: function(e) {
                return this.displayModal({
                    name: "post-flag-modal",
                    object: e,
                    noTitle: !0
                })
            },
            moderatePost: function(e) {
                return this.displayModal({
                    name: "post-moderate-modal",
                    object: e,
                    noTitle: !0
                })
            },
            moderateTopic: function() {
                return this.displayModal({
                    name: "topic-moderate-modal",
                    object: a(this, "model"),
                    noTitle: !0,
                    boundClass: "forum-lb"
                })
            },
            toggleShowInGameNames: function(e) {
                return l(a(this, "activeUser"), "showInGameNames", e), !1
            }
        }
    }), e["default"] = r
}), define("mobile-panel/extensions/pretty-promise", ["exports", "mobile-panel/mixins/pretty-promise"], function(e, t) {
    var n;
    Ember.get, Ember.set;
    n = function() {
        return Ember.Controller.reopen(t["default"]), Ember.ObjectController.reopen(t["default"]), Ember.ArrayController.reopen(t["default"]), Ember.Route.reopen(t["default"])
    }, e["default"] = n
}), define("mobile-panel/extensions/show-modal", ["exports", "mobile-panel/mixins/show-modal"], function(e, t) {
    var n;
    Ember.get, Ember.set;
    n = function() {
        return Ember.Controller.reopen(t["default"]), Ember.ObjectController.reopen(t["default"]), Ember.ArrayController.reopen(t["default"]), Ember.Route.reopen(t["default"])
    }, e["default"] = n
}), define("mobile-panel/helpers/and", ["exports", "ember", "ember-truth-helpers/helpers/and"], function(e, t, n) {
    var r = null;
    t["default"].Helper ? r = t["default"].Helper.helper(n.andHelper) : t["default"].HTMLBars.makeBoundHelper && (r = t["default"].HTMLBars.makeBoundHelper(n.andHelper)), e["default"] = r
}), define("mobile-panel/helpers/eq", ["exports", "ember", "ember-truth-helpers/helpers/equal"], function(e, t, n) {
    var r = null;
    t["default"].Helper ? r = t["default"].Helper.helper(n.equalHelper) : t["default"].HTMLBars.makeBoundHelper && (r = t["default"].HTMLBars.makeBoundHelper(n.equalHelper)), e["default"] = r
}), define("mobile-panel/helpers/gt", ["exports", "ember", "ember-truth-helpers/helpers/gt"], function(e, t, n) {
    var r = null;
    t["default"].Helper ? r = t["default"].Helper.helper(n.gtHelper) : t["default"].HTMLBars.makeBoundHelper && (r = t["default"].HTMLBars.makeBoundHelper(n.gtHelper)), e["default"] = r
}), define("mobile-panel/helpers/gte", ["exports", "ember", "ember-truth-helpers/helpers/gte"], function(e, t, n) {
    var r = null;
    t["default"].Helper ? r = t["default"].Helper.helper(n.gteHelper) : t["default"].HTMLBars.makeBoundHelper && (r = t["default"].HTMLBars.makeBoundHelper(n.gteHelper)), e["default"] = r
}), define("mobile-panel/helpers/is-array", ["exports", "ember", "ember-truth-helpers/helpers/is-array"], function(e, t, n) {
    var r = null;
    t["default"].Helper ? r = t["default"].Helper.helper(n.isArrayHelper) : t["default"].HTMLBars.makeBoundHelper && (r = t["default"].HTMLBars.makeBoundHelper(n.isArrayHelper)), e["default"] = r
}), define("mobile-panel/helpers/k-pluralize", ["exports"], function(e) {
    var t;
    Ember.get, Ember.set;
    t = function(e, t) {
        return 1 === e ? t : t.pluralize()
    }, e["default"] = Ember.Handlebars.makeBoundHelper(t), e.kPluralize = t
}), define("mobile-panel/helpers/link-decorator", ["exports", "mobile-panel/helpers/tag-decorator"], function(e, t) {
    var n;
    Ember.get, Ember.set;
    n = Ember.Helper.extend({
        routing: Ember.inject.service("_routing"),
        compute: function(e, n) {
            var r, a, l, i;
            return r = e, a = r[0], i = r[1], null != i && (i = [i]), l = this.get("routing").generateURL(a, i), t.tagDecorator(["a"], Ember.merge({
                href: l
            }, n))
        }
    }), e["default"] = n
}), define("mobile-panel/helpers/lt", ["exports", "ember", "ember-truth-helpers/helpers/lt"], function(e, t, n) {
    var r = null;
    t["default"].Helper ? r = t["default"].Helper.helper(n.ltHelper) : t["default"].HTMLBars.makeBoundHelper && (r = t["default"].HTMLBars.makeBoundHelper(n.ltHelper)), e["default"] = r
}), define("mobile-panel/helpers/lte", ["exports", "ember", "ember-truth-helpers/helpers/lte"], function(e, t, n) {
    var r = null;
    t["default"].Helper ? r = t["default"].Helper.helper(n.lteHelper) : t["default"].HTMLBars.makeBoundHelper && (r = t["default"].HTMLBars.makeBoundHelper(n.lteHelper)), e["default"] = r
}), define("mobile-panel/helpers/medium-format-date", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.Helper.extend({
        dateFormatting: Ember.inject.service(),
        compute: function(e) {
            var t;
            return t = e[0], n(this, "dateFormatting").mediumFormatDate(t)
        },
        localeChanged: Ember.observer(function() {
            return this.recompute()
        }, "dateFormatting.locale")
    }), e["default"] = t
}), define("mobile-panel/helpers/medium-format-datetime", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.Helper.extend({
        dateFormatting: Ember.inject.service(),
        compute: function(e) {
            var t;
            return t = e[0], n(this, "dateFormatting").mediumFormatDateTime(t)
        },
        localeChanged: Ember.observer(function() {
            return this.recompute()
        }, "dateFormatting.locale")
    }), e["default"] = t
}), define("mobile-panel/helpers/medium-format-unix-datetime", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.Helper.extend({
        dateFormatting: Ember.inject.service(),
        compute: function(e) {
            var t, r;
            return r = e[0], t = new Date(1e3 * r), n(this, "dateFormatting").mediumFormatDateTime(t)
        },
        localeChanged: Ember.observer(function() {
            return this.recompute()
        }, "dateFormatting.locale")
    }), e["default"] = t
}), define("mobile-panel/helpers/not-eq", ["exports", "ember", "ember-truth-helpers/helpers/not-equal"], function(e, t, n) {
    var r = null;
    t["default"].Helper ? r = t["default"].Helper.helper(n.notEqualHelper) : t["default"].HTMLBars.makeBoundHelper && (r = t["default"].HTMLBars.makeBoundHelper(n.notEqualHelper)), e["default"] = r
}), define("mobile-panel/helpers/not", ["exports", "ember", "ember-truth-helpers/helpers/not"], function(e, t, n) {
    var r = null;
    t["default"].Helper ? r = t["default"].Helper.helper(n.notHelper) : t["default"].HTMLBars.makeBoundHelper && (r = t["default"].HTMLBars.makeBoundHelper(n.notHelper)), e["default"] = r
}), define("mobile-panel/helpers/number-with-delimiter", ["exports"], function(e) {
    var t;
    Ember.get, Ember.set;
    t = function(e) {
        var t, n;
        return null != e ? (n = e.toString().split("."), t = n[1] ? "." + n[1] : "", n[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",") + t) : void 0
    }, e["default"] = Ember.Handlebars.makeBoundHelper(t), e.numberWithDelimiter = t
}), define("mobile-panel/helpers/or", ["exports", "ember", "ember-truth-helpers/helpers/or"], function(e, t, n) {
    var r = null;
    t["default"].Helper ? r = t["default"].Helper.helper(n.orHelper) : t["default"].HTMLBars.makeBoundHelper && (r = t["default"].HTMLBars.makeBoundHelper(n.orHelper)), e["default"] = r
}), define("mobile-panel/helpers/posted-by", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = function(e, t) {
        var r, a, l, i;
        return r = t, a = r.user, i = r.displayName, l = n(Ember.Handlebars, "Utils").escapeExpression(n(a, "username")), i = n(Ember.Handlebars, "Utils").escapeExpression(i), Ember.String.htmlSafe('<a href="#/profile/' + l + '"><strong>' + ('<img class="avatar" src="' + n(a, "avatarUrl") + '">&nbsp;') + ("<span>" + i + "</span>") + "</strong></a>")
    }, e["default"] = Ember.Helper.helper(t), e.postedBy = t
}), define("mobile-panel/helpers/supported-message", ["exports", "ember-getowner-polyfill"], function(e, t) {
    var n, r = Ember.get;
    Ember.set;
    n = Ember.Helper.extend({
        compute: function(e) {
            var n, a;
            return n = e[0], a = t["default"](this), null != a.lookup("template:components/chat-message/" + r(n, "type"))
        }
    }), e["default"] = n
}), define("mobile-panel/helpers/t-error", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.Helper.extend({
        i18n: Ember.inject.service(),
        compute: function(e) {
            var t, r;
            return t = e[0], r = "errors." + t.replace(/[^0-9a-zA-Z ]/g, "").camelize(), n(this, "i18n").exists(r) ? n(this, "i18n").t(r) : new(n(Ember.Handlebars, "SafeString"))(t)
        },
        localeChanged: Ember.observer(function() {
            return this.recompute()
        }, "i18n.locale")
    }), e["default"] = t
}), define("mobile-panel/helpers/t", ["exports", "ember-i18n/helper"], function(e, t) {
    e["default"] = t["default"]
}), define("mobile-panel/helpers/tag-decorator", ["exports", "mobile-panel/support/tag-generator"], function(e, t) {
    var n;
    Ember.get, Ember.set;
    n = function(e, n) {
        var r;
        return r = e[0], t["default"](r, "{}", n)
    }, e["default"] = Ember.Helper.helper(n), e.tagDecorator = n
}), define("mobile-panel/helpers/tag", ["exports", "mobile-panel/support/tag-generator"], function(e, t) {
    var n;
    Ember.get, Ember.set;
    n = function(e, n) {
        var r, a, l;
        return r = e, l = r[0], a = r[1], Ember.String.htmlSafe(t["default"](l, a, n))
    }, e["default"] = Ember.Helper.helper(n), e.tag = n
}), define("mobile-panel/helpers/username-with-level", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = function(e, t) {
        var r, a;
        return r = t.user, a = n(Ember.Handlebars, "Utils").escapeExpression(n(r, "username")), Ember.String.htmlSafe("<strong>" + ("<span class='username truncate'>" + a + "</span>") + ("<span class='mlvl'>" + n(r, "level") + "</span>") + "</strong>")
    }, e["default"] = Ember.Helper.helper(t), e.usernameWithLevel = t
}), define("mobile-panel/helpers/xor", ["exports", "ember", "ember-truth-helpers/helpers/xor"], function(e, t, n) {
    var r = null;
    t["default"].Helper ? r = t["default"].Helper.helper(n.xorHelper) : t["default"].HTMLBars.makeBoundHelper && (r = t["default"].HTMLBars.makeBoundHelper(n.xorHelper)), e["default"] = r
}), define("mobile-panel/initializers/app-version", ["exports", "ember-cli-app-version/initializer-factory", "mobile-panel/config/environment"], function(e, t, n) {
    var r = n["default"].APP,
        a = r.name,
        l = r.version;
    e["default"] = {
        name: "App Version",
        initialize: t["default"](a, l)
    }
}), define("mobile-panel/initializers/csrf", ["exports"], function(e) {
    var t, n, r = Ember.get;
    Ember.set;
    t = function() {
        return r(window, "hasPrefilter") ? void 0 : (window.hasPrefilter = !0, $.ajaxPrefilter(function(e, t, n) {
            return !r(e, "crossDomain") && r(MobilePanel, "csrfToken") ? n.setRequestHeader("X-CSRF-Token", r(MobilePanel, "csrfToken")) : void 0
        }))
    }, n = {
        name: "csrf",
        initialize: t
    }, e["default"] = n, e.initialize = t
}), define("mobile-panel/initializers/ember-i18n", ["exports", "mobile-panel/instance-initializers/ember-i18n"], function(e, t) {
    e["default"] = {
        name: t["default"].name,
        initialize: function() {
            var e = arguments[1] || arguments[0];
            e.instanceInitializer || t["default"].initialize(e)
        }
    }
}), define("mobile-panel/initializers/export-application-global", ["exports", "ember", "mobile-panel/config/environment"], function(e, t, n) {
    function r() {
        var e = arguments[1] || arguments[0];
        if (n["default"].exportApplicationGlobal !== !1) {
            var r, a = n["default"].exportApplicationGlobal;
            r = "string" == typeof a ? a : t["default"].String.classify(n["default"].modulePrefix), window[r] || (window[r] = e, e.reopen({
                willDestroy: function() {
                    this._super.apply(this, arguments), delete window[r]
                }
            }))
        }
    }
    e.initialize = r, e["default"] = {
        name: "export-application-global",
        initialize: r
    }
}), define("mobile-panel/initializers/metric-tracker", ["exports", "mobile-panel/config/environment"], function(e, t) {
    var n, r, a = Ember.get;
    Ember.set;
    n = function(e) {
        return a(window, "metricTracker") ? void 0 : window.metricTracker = new MetricTracker({
            googleAnalytics: {
                analyticsCode: t["default"].APP.googleAnalytics.accountID,
                trackPageView: !1,
                setDomain: !0,
                maxEventTime: 6e4
            }
        })
    }, r = {
        name: "metricTracker",
        initialize: n
    }, e["default"] = r, e.initialize = n
}), define("mobile-panel/initializers/model-injector", ["exports", "mobile-panel/support/logger", "mobile-panel/models/active-user", "mobile-panel/models/game", "mobile-panel/models/device"], function(e, t, n, r, a) {
    var l, i, o, c = Ember.get,
        s = Ember.set;
    o = function() {
        var e, t, n, r, a, l, i;
        r = c(c(window, "location"), "search").substring(1), a = r.split("&"), n = {};
        for (var o = 0, s = a.length; s > o; ++o) l = a[o], e = l.split("="), t = e[0], i = e[1], n[t] = decodeURIComponent(i);
        return n
    }, l = function(e, l) {
        var i, u;
        return e.register("user:active", n["default"]), u = r["default"].create(), s(u, "isUnsigned", "true" === c(o(), "unsigned")), e.register("game:active", u, {
            instantiate: !1
        }), i = a["default"].create(), s(Ember, "Logger", t["default"].create({
            device: i
        })), e.register("device:active", i, {
            instantiate: !1
        }), e.injection("controller", "activeUser", "user:active"), e.injection("controller", "game", "game:active"), e.injection("controller", "device", "device:active"), e.injection("route", "activeUser", "user:active"), e.injection("route", "game", "game:active"), e.injection("route", "device", "device:active"), e.injection("view", "device", "device:active"), e.injection("component:auto-expanding-textarea", "device", "device:active"), e.injection("component:chat-textarea", "device", "device:active"), e.injection("user:active", "device", "device:active")
    }, i = {
        name: "modelInjector",
        initialize: l
    }, e["default"] = i, e.initialize = l
}), define("mobile-panel/initializers/service-injector", ["exports", "mobile-panel/services/location-history", "mobile-panel/services/route-to-pageview-component-mapper", "mobile-panel/services/analytics", "mobile-panel/services/forum-view-tracking", "mobile-panel/services/preference-storage", "mobile-panel/services/faye", "mobile-panel/services/chat-history", "mobile-panel/services/scheduling", "mobile-panel/services/character-token", "mobile-panel/services/chat-authentication", "mobile-panel/services/mute", "mobile-panel/services/chat", "mobile-panel/services/friend", "mobile-panel/services/chat-profile", "mobile-panel/services/room-list", "mobile-panel/services/landing-page", "mobile-panel/services/local-storage-factory", "mobile-panel/services/message-tracking"], function(e, t, n, r, a, l, i, o, c, s, u, d, m, p, h, f, b, g, v) {
    var C, A;
    Ember.get, Ember.set;
    C = function(e, C) {
        return e.injection("controller", "i18n", "service:i18n"), e.injection("route", "i18n", "service:i18n"), e.register("service:route_to_pageview_component_mapper", n["default"]), e.register("service:location-history", t["default"]), e.injection("service:location-history", "router", "router:main"), e.injection("service:location-history", "activeUser", "user:active"), e.register("service:analytics", r["default"]), e.injection("service:analytics", "device", "device:active"), e.injection("service:analytics", "activeUser", "user:active"), e.injection("service:analytics", "game", "game:active"), e.injection("service:analytics", "routeToPageviewComponentMapper", "service:route_to_pageview_component_mapper"), e.injection("controller", "analyticsService", "service:analytics"), e.injection("route", "analyticsService", "service:analytics"), e.injection("view:index/promo_pod", "analyticsService", "service:analytics"), e.injection("service:chat", "analyticsService", "service:analytics"), e.injection("service:forum_view_tracking", "analyticsService", "service:analytics"), e.register("service:forum_view_tracking", a["default"]), e.injection("service:forum_view_tracking", "activeUser", "user:active"), e.injection("service:forum_view_tracking", "game", "game:active"), e.injection("controller:game_forums", "forumViewTrackingService", "service:forum_view_tracking"), e.injection("controller:forum", "forumViewTrackingService", "service:forum_view_tracking"), e.injection("controller:forum_list_item", "forumViewTrackingService", "service:forum_view_tracking"), e.injection("controller:topic", "forumViewTrackingService", "service:forum_view_tracking"), e.injection("controller:topic_list_item", "forumViewTrackingService", "service:forum_view_tracking"), e.injection("controller:post_list_item", "forumViewTrackingService", "service:forum_view_tracking"), e.register("service:preference_storage", l["default"]), e.injection("user:active", "preferenceService", "service:preference_storage"), e.register("service:faye", i["default"]), e.injection("service:faye", "activeUser", "user:active"), e.register("service:chat_history", o["default"]), e.injection("service:chat_history", "activeUser", "user:active"), e.register("service:scheduling", c["default"]), e.register("service:character_token", s["default"]), e.injection("service:character_token", "device", "device:active"), e.injection("service:character_token", "activeUser", "user:active"), e.register("service:chat_authentication", u["default"]), e.injection("service:chat_authentication", "activeUser", "user:active"), e.injection("service:chat_authentication", "schedulingService", "service:scheduling"), e.injection("service:chat_authentication", "characterTokenService", "service:character_token"), e.injection("route:chat", "chatAuthenticationService", "service:chat_authentication"), e.register("service:mute", d["default"]), e.injection("controller:chat.profile", "muteService", "service:mute"), e.register("service:message_tracking", v["default"]), e.injection("route:chat", "messageTrackingService", "service:message_tracking"), e.register("service:localStorageFactory", g["default"]), e.injection("service:mute", "localStorageFactory", "service:localStorageFactory"), e.injection("service:preference_storage", "localStorageFactory", "service:localStorageFactory"), e.injection("service:message_tracking", "localStorageFactory", "service:localStorageFactory"), e.injection("service:message_tracking", "device", "device:active"), e.register("service:chat", m["default"]), e.injection("service:chat", "fayeService", "service:faye"), e.injection("service:chat", "chatHistoryService", "service:chat_history"), e.injection("service:chat", "chatAuthenticationService", "service:chat_authentication"), e.injection("service:chat", "activeUser", "user:active"), e.injection("service:chat", "schedulingService", "service:scheduling"), e.injection("service:chat", "muteService", "service:mute"), e.injection("service:chat", "messageTrackingService", "service:message_tracking"), e.injection("route:application", "chatService", "service:chat"), e.injection("route:chat", "chatService", "service:chat"), e.injection("controller:chat", "chatService", "service:chat"), e.injection("route:sleep", "chatService", "service:chat"), e.register("service:friend", p["default"]), e.injection("controller:profile.show", "friendService", "service:friend"), e.injection("controller:chat.profile", "friendService", "service:friend"), e.register("service:chat_profile", h["default"]), e.injection("controller:chat.profile", "chatProfileService", "service:chat_profile"), e.register("service:room_list", f["default"]), e.injection("service:room_list", "activeUser", "user:active"), e.injection("controller:room-list-modal", "roomListService", "service:room_list"), e.injection("controller:chat", "roomListService", "service:room_list"), e.injection("controller:chat", "schedulingService", "service:scheduling"), e.register("service:landing_page", b["default"]), e.injection("service:landing_page", "activeUser", "user:active"), e.injection("route:index", "landingPageService", "service:landing_page"), e.injection("route:wake", "landingPageService", "service:landing_page")
    }, A = {
        name: "serviceInjector",
        after: ["modelInjector"],
        initialize: C
    }, e["default"] = A, e.initialize = C
}), define("mobile-panel/initializers/truth-helpers", ["exports", "ember", "ember-truth-helpers/utils/register-helper", "ember-truth-helpers/helpers/and", "ember-truth-helpers/helpers/or", "ember-truth-helpers/helpers/equal", "ember-truth-helpers/helpers/not", "ember-truth-helpers/helpers/is-array", "ember-truth-helpers/helpers/not-equal", "ember-truth-helpers/helpers/gt", "ember-truth-helpers/helpers/gte", "ember-truth-helpers/helpers/lt", "ember-truth-helpers/helpers/lte"], function(e, t, n, r, a, l, i, o, c, s, u, d, m) {
    function p() {
        t["default"].Helper || (n.registerHelper("and", r.andHelper), n.registerHelper("or", a.orHelper), n.registerHelper("eq", l.equalHelper), n.registerHelper("not", i.notHelper), n.registerHelper("is-array", o.isArrayHelper), n.registerHelper("not-eq", c.notEqualHelper), n.registerHelper("gt", s.gtHelper), n.registerHelper("gte", u.gteHelper), n.registerHelper("lt", d.ltHelper), n.registerHelper("lte", m.lteHelper))
    }
    e.initialize = p, e["default"] = {
        name: "truth-helpers",
        initialize: p
    }
}), define("mobile-panel/instance-initializers/active-user-token-service", ["exports"], function(e) {
    var t, n, r = Ember.get;
    Ember.set;
    t = function(e) {
        var t;
        return t = r(e, "container").lookup("user:active"), t.characterTokenService = e.container.lookup("service:character_token")
    }, n = {
        name: "activeUserTokenService",
        initialize: t
    }, e["default"] = n, e.initialize = t
}), define("mobile-panel/instance-initializers/ember-i18n", ["exports", "ember", "ember-i18n/legacy-helper", "mobile-panel/config/environment"], function(e, t, n, r) {
    e["default"] = {
        name: "ember-i18n",
        initialize: function(e) {
            null != n["default"] && t["default"].HTMLBars._registerHelper("t", n["default"])
        }
    }
}), define("mobile-panel/instance-initializers/html-classes", ["exports"], function(e) {
    var t, n, r = Ember.get;
    Ember.set;
    t = function(e) {
        var t, n;
        return n = r(e, "container").lookup("device:active"), r(n, "androidApp") ? ($("html").addClass("android"), "8px" === $("html").css("font-size") && $("html").addClass("min-font-size-8px"), r(n, "osVersion") && 0 === r(n, "osVersion").indexOf("4.0") && $("html").addClass("bad-scroll"), t = /; ((KF|SD|AFT)[A-Z0-9]{1,8}|Kindle Fire) Build\/[A-Z0-9]{2,6}/, t.test(r(navigator, "userAgent")) && $("html").addClass("amazon")) : $("html").addClass("ios"), r(n, "androidLegacy") ? $("html").addClass("android-legacy") : void 0
    }, n = {
        name: "htmlClasses",
        initialize: t
    }, e["default"] = n, e.initialize = t
}), define("mobile-panel/instance-initializers/i18n", ["exports"], function(e) {
    var t, n, r, a, l = Ember.get,
        i = Ember.set;
    r = function(e) {
        var t;
        return null != l(e, "userAgent") && null != (t = l(e, "userAgent").match(/Android (?:\d+\.?)+;\s?([a-zA-Z]{2}(?:-[a-zA-Z]{2})?);/)) ? t[1] : void 0
    }, a = function(e, t) {
        return e.contains(t) ? !0 : -1 === t.indexOf("-") ? !1 : a(e, t.split("-")[0])
    }, t = function(e, t) {
        var n, o, c, s;
        return n = e.container, s = (null != t ? l(t, "navigator") : void 0) || l(window, "navigator"), c = n.lookup("service:i18n"), o = r(s) || l(s, "language") || l(s, "userLanguage"), o && a(l(c, "locales"), o) ? i(c, "locale", o) : void 0
    }, n = {
        name: "i18n",
        initialize: t
    }, e["default"] = n, e.initialize = t
}), define("mobile-panel/instance-initializers/message-receiver", ["exports"], function(e) {
    var t, n, r = Ember.get;
    Ember.set;
    t = function(e) {
        var t, n;
        return t = r(e, "container").lookup("device:active"), n = function(e, n) {
            return Ember.run.next(function() {
                return e = e.dasherize().toLowerCase(), Ember.Logger.log("Konduit message: " + e + "=" + JSON.stringify(n)), t.trigger(e, n)
            })
        }, window.iosKonduit = n
    }, n = {
        name: "messageReceiver",
        initialize: t
    }, e["default"] = n, e.initialize = t
}), define("mobile-panel/instance-initializers/utilities", ["exports"], function(e) {
    var t, n, r = Ember.get;
    Ember.set;
    t = function(e) {
        var t, n;
        return t = r(e, "container").lookup("device:active"), n = function(e) {
            return Ember.run.next(function() {
                return t.openExternalBrowser(e)
            })
        }, $.extend(window, {
            util: {
                openURL: n
            }
        })
    }, n = {
        name: "utilities",
        initialize: t
    }, e["default"] = n, e.initialize = t
}), define("mobile-panel/load-extensions", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = function(e) {
        var t;
        return t = new RegExp("^" + e + "/extensions/"), Ember.keys(n(requirejs, "_eak_seen")).forEach(function(e) {
            return t.test(e) ? require(e)["default"]() : void 0
        })
    }, e["default"] = t
}), define("mobile-panel/locales/de/translations", ["exports", "mobile-panel/locales/en/translations"], function(e, t) {
    var n;
    Ember.get, Ember.set;
    n = $.extend(!0, {}, t["default"], {}), e["default"] = n
}), define("mobile-panel/locales/en/translations", ["exports"], function(e) {
    var t;
    Ember.get, Ember.set;
    t = {
        errors: {
            error: "Error",
            serverErrorPleaseTryAgainLater: "Server error - please try again later",
            descriptionCantBeBlank: "Description can't be blank",
            emailAddressMustBeValid: "Email address must be valid",
            emailAddressIsInvalid: "Email address is invalid",
            noSingleWordCanBeLongerThan45Characters: "No single word can be longer than 45 characters",
            newPasswordNeedsToMatchConfirmation: "New password needs to match confirmation",
            originalPasswordIsNotTheCorrectPassword: "Original password is not the correct password.",
            passwordIsTooShort: "Password is too short",
            passwordIsTooLong: "Password is too long",
            passwordCantBeBlank: "Password can't be blank",
            thereWasAnErrorCompletingYourRequestPleaseTryAgain: "There was an error completing your request. Please try again.",
            couldNotLogYouInPleaseTryAgain: "Could not log you in, please try again.",
            usernameCantBeBlank: "Username can't be blank",
            usernameAlreadyTaken: "Username already taken",
            usernameIsTooShortMinimumIs4Characters: "Username is too short (minimum is 4 characters)",
            usernameIsTooLongMaximumIs16Characters: "Username is too long (maximum is 16 characters)",
            usernameCanContainOnlyLettersAndNumbers: "Username can contain only letters and numbers.",
            usernameIsNotValid: "Username is not valid",
            birthDateIsNotValid: "Birth date is not valid",
            missingUsernameOrEmailPleaseTryAgain: "Missing username or email, please try again."
        },
        months: {
            abbr: {
                jan: "Jan",
                feb: "Feb",
                mar: "Mar",
                apr: "Apr",
                may: "May",
                jun: "Jun",
                jul: "Jul",
                aug: "Aug",
                sep: "Sep",
                oct: "Oct",
                nov: "Nov",
                dec: "Dec"
            },
            january: "January",
            february: "February",
            march: "March",
            april: "April",
            may: "May",
            june: "June",
            july: "July",
            august: "August",
            september: "September",
            october: "October",
            november: "November",
            december: "December"
        },
        difficulties: {
            easy: "easy",
            medium: "medium",
            hard: "hard",
            impossible: "impossible"
        },
        nav: {
            signedInAs: "Signed in as {{user}}",
            home: "Home",
            achievements: "Achievements",
            highScores: "High Scores",
            forums: "Forums",
            settings: "Settings",
            support: "Support/Feedback",
            moreGames: "More Games",
            guildChat: "Guild Chat",
            logout: "Logout",
            signIn: "Sign In",
            register: "Register",
            reload: "Reload",
            logoutConfirmation: "Are you sure you want to log out?",
            yes: "Yes",
            no: "No"
        },
        registrationFlow: {
            title: "Register for forums, badges &amp; more",
            swipeToGoBack: "Swipe to go back",
            underage: "We&rsquo;re sorry - your birthday does not meet our minimum age requirement.",
            emailTaken: {
                title: "Good news!",
                message: "It looks like you have an account with us already.",
                signIn: "Sign in",
                forgotPassword: "Forgot Password?"
            },
            emailAddress: {
                placeholder: "username@email.com",
                invalidError: "Email address is invalid",
                label: "Enter Email Address",
                submitButton: "Continue",
                loginWithFacebook: "Login [em with] Facebook",
                or: "or",
                haveAccount: "Already have a Kongregate account?",
                signInNow: "Sign in now"
            },
            password: {
                lengthError: "Password must be between 10 and 55 characters",
                label: "Choose a Password",
                minLength: "10 characters minimum",
                submitButton: "Set Password",
                nextStep: "Next: Date of Birth"
            },
            birthdate: {
                invalidError: "Birth date is not valid",
                label: "When were you born?",
                submitButton: "Almost Done",
                nextStep: "Next: Choose Username",
                year: "Year",
                month: "Month",
                day: "Day"
            },
            parentEmail: {
                label: "Parent or guardian email address",
                explanation: "Your parent or guardian must review and agree to the Privacy Policy, User Agreement and Cookie Policy on your behalf",
                placeholder: "parent@email.com",
                invalidError: "Please enter a valid email for your parent or guardian"
            },
            username: {
                errorHeader: "Could not create the account, please fix the following:",
                label: "Choose your username",
                suggestion: "Here&rsquo;s our suggestion, feel free to change it",
                maxLength: "4-16 characters max",
                optIn: "send me updates",
                submitButton: "Complete Registration",
                nextStep: "That&rsquo;s it!",
                privacyPolicy: "I have read and agree to the [ppLink Privacy Policy], [tosLink User Agreement] and [cookieLink Cookie Policy]"
            }
        },
        login: {
            title: "Login to Kongregate",
            username: "Username or Email",
            password: "Password",
            login: "Login",
            loginWithFacebook: "Login [em with] Facebook",
            or: "or",
            forgotPassword: "Forgot your password?",
            noAccount: "Don't have a Kongregate account?",
            signUpNow: "Sign up now",
            enterSecurityCode: "Enter Security Code",
            securityCode: "Security code",
            emailMfaMessage: "We've sent a security code to your email address. Please enter it below.",
            genericMfaMessage: "Enter your multi-factor authentication security code",
            yourSecurityCode: "Your Security Code",
            rememberDevice: "Remember this device",
            emailResent: "The security code was successfully re-sent to your email address.",
            "continue": "Continue",
            securityCodeHelp: "Having trouble with your security code?",
            back: "Back",
            resendSecurityCode: "Send Code Again",
            securityCodeError: "There was an error trying to send you a security code."
        },
        forgotPassword: {
            title: "Forgot your password?",
            recoveryTokenSent: "A recovery email has been sent to your email address.",
            login: "Login",
            usernameOrEmail: "Username or email",
            recoverPassword: "Recover Password"
        },
        facebook: {
            connectedWith: "Connected with {{email}}",
            matched: {
                linkYourAccounts: "Link your accounts",
                emailAddressMatches: "Your email address matches an existing Kongregate user account!",
                isThisYou: "We think you may already have an account on Kongregate. Is this you?",
                recoveryTokenSent: "A recovery email has been sent to your email address.",
                enterYourKongregatePassword: "Enter Your Kongregate Password",
                forgotIt: "forgot it?",
                linkAccounts: "Link Accounts",
                createANewAccount: "Or create a new Kongregate account",
                skipThis: "Or skip this for now"
            },
            finalize: {
                couldNotCreateAccount: "Could not create the account, please fix the following",
                username: "Username",
                chooseUsername: "Choose 4â€“16 characters",
                password: "Password",
                setEmailAddress: "Email Address",
                choosePassword: "10 characters or longer",
                finish: "Finish",
                doThisLater: "I'll do this later"
            }
        },
        forums: {
            restrictAccess: "You must sign-in to participate in the forums:"
        },
        forum: {
            title: "Forums: {{name}}",
            showStickyThreads: {
                one: "Show 1 more sticky forum thread",
                other: "Show {{count}} more sticky forum threads"
            }
        },
        topicListItem: {
            latestPost: "Last post by {{user}} on {{time}}",
            latestPostWithCharacterName: "Last post by {{user}} {{characterName}} on {{time}}",
            posts: {
                one: "Post",
                other: "Posts"
            },
            views: {
                one: "View",
                other: "Views"
            }
        },
        forumToolbar: {
            newTopic: "New Topic"
        },
        forumSearchBox: {
            search: "Search"
        },
        pagination: {
            first: "First",
            prev: "Prev",
            next: "Next",
            last: "Last"
        },
        topic: {
            postsCount: {
                one: "1 post",
                other: "{{postsCount}} posts"
            },
            show: "Show",
            edit: "Edit",
            inGameName: "In-game Name",
            kongregateName: "Kongregate Name"
        },
        topicToolbar: {
            reply: "Reply",
            lastPost: "Last Post"
        },
        postListItem: {
            postedBy: "Posted by {{user}} on {{time}}",
            quotePost: "Quote Post",
            postRemoved: "This post either requires Admin Review or has been hidden by a moderator or administrator. If it is your post and it remains hidden for 24 hours, you can email support@kongregate.com if you think this was an error."
        },
        createOrEditPost: {
            topicTitle: "Topic Title",
            body: "Body",
            post: "Post",
            update: "Update",
            cancel: "Cancel",
            formattingTips: "Formatting tips",
            fullFormattingGuide: "Full formatting guide",
            bold: "bold",
            italics: "italics",
            iAmALink: "I am a link",
            exampleImage: "http://www.embededimage.com/image.jpg"
        },
        index: {
            placeholderAd: "Check out Kongregate&rsquo;s mobile games!",
            accountSettingsPod: {
                settings: "Settings"
            },
            activeUserPod: {
                greeting: "Hi, {{user}}!",
                newMessages: "{{messageCount}} New!",
                signInOrRegister: "[signInLink Sign in] or [registerLink register] for badges, high scores, forums and more!"
            },
            moreGamesPod: {
                moreGames: "More Games"
            },
            myProfilePod: {
                signInOrRegister: "[span Sign-in] [span or] [span Register!]"
            },
            supportPod: {
                support: "Support"
            },
            welcomeMessagePod: {
                welcomeMessage: "Kongregate adds <span><strong>community</strong> and <strong>achievements</strong></span> to your favorite games!"
            },
            badgesPod: {
                earnedBadges: "{{earnedBadgeCount}} of {{totalBadgeCount}} earned",
                badges: "Badges"
            },
            forumsPod: {
                "new": "New",
                forums: "Forums",
                comingSoon: "Coming Soon"
            },
            guildForumPod: {
                forumName: "{{guildName}} Guild Forum",
                lastPostBy: "last post by {{user}}"
            },
            promoPod: {
                promotionalEvents: "Promotional Events"
            },
            scoresPod: {
                highScores: "High Scores"
            }
        },
        support: {
            title: "{{gameName}} support",
            error: "Could not submit feedback due to the following:",
            emailAddress: "Email Address",
            topic: "Topic",
            missingBadge: "Report a Missing Badge",
            gameBug: "Report a Game Bug",
            kongregateBug: "Report a Kongregate Bug",
            featureRequest: "Feature Request",
            purchasingIssues: "Purchasing Issues",
            otherInquiry: "Other Inquiry",
            badge: "Badge",
            description: "Description",
            includeDetail: "Please include as much detail as possible",
            charactersRemaining: {
                one: "1 character left",
                other: "{{count}} characters left"
            },
            submit: "Submit",
            includeEmail: "Include email address to enable developer response",
            responseEmail: "Your response will be sent to {{email}}",
            edit: "edit",
            feedback: "Feedback",
            feedbackSubmitted: "Your feedback has been submitted.",
            success: "Your feedback has been submitted."
        },
        modal: {
            defaultTitle: "Alert",
            thereWasAProblem: "There was a problem"
        },
        changeEmail: {
            title: "Update Email",
            update: "Update",
            updateAndSendCoupon: "Update & Send Coupon",
            currentAddress: "Current address",
            email: "Email",
            password: "Password",
            sendMeUpdates: "Send me updates about Kongregate games",
            mfaWarning: "Changing your email address will disable email MFA and you will need to re-enable it afterward."
        },
        changePassword: {
            title: "Update Password",
            currentPassword: "Current password",
            newPassword: "New password",
            confirmPassword: "Confirm new password",
            forgotPassword: "Forgot your password?",
            submit: "Submit"
        },
        manageMfa: {
            title: "Manage MFA",
            confirm: "Confirm",
            resend: "Send Again",
            cancel: "Cancel",
            enterSecurityCode: "Enter your security code to enable MFA",
            emailEnabled: "Email MFA is enabled and confirmed with email address {{email}}.",
            emailLabel: "Enable email MFA to require entering a security code sent to {{email}} in order to log in.",
            emailEnable: "Enable Email MFA",
            emailResent: "The security code was successfully re-sent to {{email}}.",
            disable: "Disable MFA",
            error: "There was an error, please try again later."
        },
        editProfile: {
            success: "Success",
            updatedMessage: "Your profile has been updated.",
            mfa: "Multi-factor Authentication",
            manageMfa: "Manage MFA",
            error: "There was an error. Please try again later.",
            emailVerified: "Your email address is verified",
            emailNotVerified: "Your email address isn't verified",
            sendVerificationEmail: "Send Verification Email",
            refreshVerificationStatus: "(Refresh)",
            verificationEmailSuccess: "The verification email was sent successfully.",
            verificationEmailError: "The verification email could not be sent, try again later."
        },
        profile: {
            sendMessage: {
                title: "New Message for {{user}}",
                sendMessage: "Send message",
                cancel: "cancel"
            }
        },
        messages: {
            emailUpdated: "Email updated!"
        },
        postModerate: {
            confirmDelete: "Are you sure you want to delete this post?",
            yes: "Yes",
            no: "No"
        },
        logout: {
            thereWasAnError: "There was an error logging out"
        },
        forumSearchModal: {
            title: "Search Forum",
            placeholder: "Enter query text"
        },
        forumSearch: {
            searchResults: "Search Results",
            searchForums: "Search Forums",
            hereAreAFewTips: "Here are a few tips for searching effectively",
            spellTermsCorrectly: "Make sure all terms are spelled correctly.",
            useStar: "Use &ldquo;*&rdquo; if you're unsure about part of what you're searching for, such as a suffix (i.e., &ldquo;hovercraft*&rdquo; will show any game that begins with &ldquo;hovercraft,&rdquo; even if it ends with something really weird, like a &ldquo;y&rdquo;).",
            notOverlyStrict: "Make sure your search isn't overly strict. For example, multiple words in quotes will only show results with that exact phrase. Using <strong>AND</strong> between terms will require potential results to include both terms, and &ldquo;-&rdquo; will exclude anything immediately after the minus sign.",
            temporarilyUnavailable: "Search is temporarily unavailable"
        },
        searchToolbar: {
            backToForum: "Back to forum"
        },
        chatModal: {
            backToChat: "Back to Chat",
            loading: "Loading...",
            thereWasAProblem: "There was a problem",
            textSize: "Text Size:",
            normalText: "Normal",
            largeText: "Large"
        },
        chat: {
            profile: {
                onKongregateAs: "On Kongregate as: {{user}}",
                unfriend: "Unfriend",
                addFriend: "Add friend",
                seeProfile: "See Profile",
                mute: "Mute",
                unmute: "Unmute"
            }
        },
        backButton: {
            back: "back"
        },
        postFlagModal: {
            reasonForFlagging: "Reason for flagging",
            submit: "Submit",
            spam: "Spam",
            harassingOtherUsers: "Harassing other users",
            inappropriateLinkImage: "Inappropriate link/image",
            inappropriateLanguage: "Inappropriate language",
            other: "Other"
        },
        postModerateModal: {
            moderationOptions: "Moderation Options",
            edit: "Edit",
            "delete": "Delete",
            hide: "Hide",
            markAsSpam: "Mark as spam"
        },
        topicModerateModal: {
            topicTitle: "Topic Title",
            sticky: "Sticky",
            locked: "Locked",
            update: "Update",
            cancel: "Cancel",
            sink: "Sink"
        },
        roomListModal: {
            participantCount: {
                one: "1 Room Participant",
                other: "{{count}} Room Participants"
            },
            onlineCount: "{{count}} online"
        },
        externalLinkModal: {
            title: "External Link",
            message: "Would you like to open this page in your browser?",
            open: "Open",
            cancel: "Cancel"
        },
        privacyPolicyRequired: {
            acceptButton: "Accept",
            submitButton: "Submit",
            parentalConsent: "To continue, your parent or guardian needs to read and agree to the Privacy Policy, User Agreement and Cookie Policy on your behalf. Please ask them to click on the link that we emailed to them.",
            parentEmailRequired: "To continue, your parent or guardian's consent is required. Please enter your parent or guardian's email. They will be emailed a link to follow to activate the account on your behalf.",
            thankYou: "Thank you for submitting your parent or guardian's email. ",
            invalidParentEmail: "Please enter a valid email for your parent or guardian",
            policyConsentRequired: "To continue, you must agree to the [ppLink Privacy Policy], [tosLink User Agreement] and [cookieLink Cookie Policy]"
        }
    }, e["default"] = t
}), define("mobile-panel/locales/es/translations", ["exports", "mobile-panel/locales/en/translations"], function(e, t) {
    var n;
    Ember.get, Ember.set;
    n = $.extend(!0, {}, t["default"], {}), e["default"] = n
}), define("mobile-panel/locales/fr/translations", ["exports", "mobile-panel/locales/en/translations"], function(e, t) {
    var n;
    Ember.get, Ember.set;
    n = $.extend(!0, {}, t["default"], {}), e["default"] = n
}), define("mobile-panel/locales/it/translations", ["exports", "mobile-panel/locales/en/translations"], function(e, t) {
    var n;
    Ember.get, Ember.set;
    n = $.extend(!0, {}, t["default"], {}), e["default"] = n
}), define("mobile-panel/locales/pt/translations", ["exports", "mobile-panel/locales/en/translations"], function(e, t) {
    var n;
    Ember.get, Ember.set;
    n = $.extend(!0, {}, t["default"], {}), e["default"] = n
}), define("mobile-panel/locales/ru/translations", ["exports", "mobile-panel/locales/en/translations"], function(e, t) {
    var n;
    Ember.get, Ember.set;
    n = $.extend(!0, {}, t["default"], {}), e["default"] = n
}), define("mobile-panel/mixins/application-data", ["exports", "mobile-panel/support/normalize-json", "ic-ajax"], function(e, t, n) {
    var r, a = Ember.get,
        l = Ember.set;
    r = Ember.Mixin.create({
        initializeApplicationData: function(e) {
            var r, l;
            return r = a(window, "kongAppJSONPromise") ? (Ember.Logger.info("Using existing application JSON promise: " + kongAppJSONPromise.state()), new(a(Ember.RSVP, "Promise"))(function(e, t) {
                return Ember.run.next(function() {
                    return a(window, "kongAppJSONPromise").done(function() {
                        return e.apply(null, [].slice.call(arguments))
                    }).fail(function() {
                        return t.apply(null, [].slice.call(arguments))
                    }).always(function() {
                        return window.kongAppJSONPromise = null
                    })
                })
            })) : n["default"]("/api/mobile_panel/v1/active_user.json"), l = a(window, "kongGameInfoJSONPromise") ? (Ember.Logger.info("Using existing game info JSON promise: " + kongGameInfoJSONPromise.state()), new(a(Ember.RSVP, "Promise"))(function(e, t) {
                return Ember.run.next(function() {
                    return a(window, "kongGameInfoJSONPromise").done(function() {
                        return e.apply(null, [].slice.call(arguments))
                    }).fail(function() {
                        return t.apply(null, [].slice.call(arguments))
                    }).always(function() {
                        return window.kongGameInfoJSONPromise = null
                    })
                })
            })) : n["default"]("/api/mobile_panel/v1/games/" + window.kongGameId() + ".json"), Ember.RSVP.all([r, l], "ApplicationData").then(function(n) {
                return function(r) {
                    var l, i, o;
                    return i = r, l = i[0], o = i[1], n.processActiveUserData(l, e), t["default"](o), a(n, "game").reset(a(o, "game"))
                }
            }(this), function(e) {
                throw Ember.Logger.error("Error initializing application data"), e
            })
        },
        processActiveUserData: function(e, n) {
            return null == n && (n = void 0), t["default"](e), l(MobilePanel, "csrfToken", a(e, "csrfToken")), a(this, "device").checkPanelVersion(a(e, "panelFingerprint")), a(this, "activeUser").change(a(e, "user"), a(e, "splitTreatments")), l(a(this, "activeUser"), "kongUnderage", a(e, "underage")), this.sendLoginOrUserInfoEvent(n, e)
        },
        sendLoginOrUserInfoEvent: function(e, t) {
            var n;
            return delete a(t, "user").chatInfo, n = /^\/(facebook|apple)\/callback\?matchInfo=/.test(null != e && null != a(e, "intent") ? a(a(e, "intent"), "url") : void 0), n && a(a(this, "activeUser"), "isAuthenticated") ? a(this, "device").loginUser(a(t, "user"), a(t, "gameAuthToken")) : a(this, "device").pushInfo(a(t, "user"), a(t, "gameAuthToken"))
        }
    }), e["default"] = r
}), define("mobile-panel/mixins/authentication", ["exports", "mobile-panel/support/normalize-json", "ic-ajax"], function(e, t, n) {
    var r, a = Ember.get,
        l = Ember.set;
    r = Ember.Mixin.create({
        recordAuthenticationSuccess: function() {
            throw "Not Implemented"
        },
        recordAuthenticationFailure: function() {
            throw "Not Implemented"
        },
        authenticate: function() {
            var e;
            return Ember.Logger.log("Logging in"), this.setProperties({
                errors: null,
                notice: null,
                busy: !0
            }), e = {
                game_id: a(a(this, "game"), "id")
            }, a(this, "pendingMfa") ? (l(e, "pending_mfa_token", a(a(this, "pendingMfa"), "token")), l(e, "mfa_code", a(this, "securityCode")), l(e, "remember_device", a(this, "rememberDevice"))) : (l(e, "username", a(this, "username")), l(e, "password", a(this, "password"))), this.prettyPromise(n["default"]("/session.json", {
                method: "POST",
                data: e
            }).then(function(e) {
                return function(n) {
                    return Ember.Logger.log("Log in Returned"), t["default"](n), a(n, "user") ? (e.recordAuthenticationSuccess(), e.finishAuthentication(n)) : a(n, "pendingMfaToken") ? l(e, "pendingMfa", {
                        token: a(n, "pendingMfaToken"),
                        method: a(n, "method")
                    }) : (e.recordAuthenticationFailure(), l(e, "errors", Ember.isBlank(a(n, "error")) ? ["Could not log you in, please try again."] : [a(n, "error")]), e.rejectWithoutDialog())
                }
            }(this))["finally"](function(e) {
                return function() {
                    return l(e, "busy", !1)
                }
            }(this)))
        },
        sendSecurityCode: function() {
            return this.setProperties({
                errors: null,
                notice: null,
                busy: !0
            }), this.prettyPromise(n["default"]("/session/send_mfa_code.json", {
                method: "POST",
                data: {
                    pending_mfa_token: a(a(this, "pendingMfa"), "token")
                }
            }).then(function(e) {
                return function(n) {
                    return t["default"](n), a(n, "success") ? l(e, "notice", a(e, "i18n").t("login.emailResent")) : l(e, "errors", a(n, "errors") || [String(a(e, "i18n").t("login.securityCodeError"))])
                }
            }(this))["catch"](function(e) {
                return function() {
                    return l(e, "errors", [String(a(e, "i18n").t("login.securityCodeError"))])
                }
            }(this))["finally"](function(e) {
                return function() {
                    return l(e, "busy", !1)
                }
            }(this)))
        },
        sendRecoveryToken: function() {
            return this.setProperties({
                errors: null,
                notice: null
            }), this.prettyPromise(n["default"]("/recovery_tokens.json", {
                method: "POST",
                data: {
                    recovery_token: {
                        username_or_email: a(this, "username")
                    }
                }
            })["catch"](function(e) {
                return function(t) {
                    if (400 === a(a(t, "jqXHR"), "status")) return l(e, "errors", ["There was an error trying to send you a recovery email."]), e.rejectWithoutDialog();
                    throw t
                }
            }(this)))
        },
        finishAuthentication: function(e, n) {
            return Ember.Logger.log("Finishing Authentication"), t["default"](e), l(MobilePanel, "csrfToken", a(e, "csrfToken")), a(this, "activeUser").change(a(e, "user"), a(e, "splitTreatments")), a(this, "device").loginUser(a(e, "user"), a(e, "gameAuthToken")), a(this, "device").pushNotificationInfo({
                count: a(a(e, "user"), "notificationsCount"),
                type: "summary"
            }), (null != a(e, "user") ? a(a(e, "user"), "acceptedPrivacyPolicy") : void 0) ? n ? this.transitionToRoute(n) : this.send("goBackOrDefault", "index") : this.transitionToRoute("privacy-policy-required")
        }
    }), e["default"] = r
}), define("mobile-panel/mixins/change-avatar", ["exports", "ic-ajax"], function(e, t) {
    var n, r = Ember.get;
    Ember.set;
    n = Ember.Mixin.create({
        actions: {
            changeAvatar: function() {
                return t["default"]("/one_time_auth_tokens", {
                    method: "POST"
                }).then(function(e) {
                    return function(t) {
                        var n;
                        return n = Ember.RSVP.defer(), e.send("externalLink", "/mobile_panel/avatar/edit?auth_token=" + r(t, "token"), !1, n), r(n, "promise").then(function(e) {
                            return function() {
                                return e.transitionToRoute("edit-avatar")
                            }
                        }(e)), null
                    }
                }(this))
            }
        }
    }), e["default"] = n
}), define("mobile-panel/mixins/create-or-edit-post", ["exports"], function(e) {
    var t, n = Ember.get,
        r = Ember.set;
    t = Ember.Mixin.create({
        needs: ["topic"],
        createOrEditPost: function(e, t) {
            var a;
            return a = n(e, "isNew"), n(this, "analyticsService").incrementPageviewCounter("/forum_post"), n(this.displayModal({
                name: "create-or-edit-post",
                noTitle: !0,
                object: e,
                boundClass: "forum-lb"
            }), "promise").then(function(e) {
                return function() {
                    return r(n(n(e, "controllers"), "topic"), "maxPage", n(n(e, "store").metadataFor("post"), "max_page")), a ? (e.send("loadLastPost", !0), n(e, "analyticsService").pushSDKEvent("forum_posts_count")) : void 0
                }
            }(this))
        },
        actions: {
            loadLastPost: function(e) {
                return null == e && (e = !1), n(n(this, "controllers"), "topic").send("loadLastPost", e)
            }
        }
    }), e["default"] = t
}), define("mobile-panel/mixins/force-redraw", ["exports"], function(e) {
    var t;
    Ember.get, Ember.set;
    t = Ember.Mixin.create({
        forceRedraw: function() {
            return $("body").css("padding", "0px 1px 1px 0px"), Ember.run.next(function() {
                return $("body").css("padding", "0px")
            })
        }
    }), e["default"] = t
}), define("mobile-panel/mixins/forums-route", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.Mixin.create({
        _forumRoutes: ["forum", "topic", "profile.posts"],
        actions: {
            willTransition: function(e) {
                return n(this, "_forumRoutes").indexOf(n(e, "targetName")) < 0 ? (n(this, "store").unloadAll("forum"), n(this, "store").unloadAll("topic"), n(this, "store").unloadAll("user"), n(this, "store").unloadAll("post")) : void 0
            }
        }
    }), e["default"] = t
}), define("mobile-panel/mixins/pagination-controller", ["exports"], function(e) {
    var t, n = Ember.get,
        r = Ember.set;
    t = Ember.Mixin.create({
        currentPage: null,
        maxPage: null,
        paginationInput: null,
        hasPreviousPage: Ember.computed.gt("currentPage", 1),
        hasNextPage: Ember.computed(function() {
            return n(this, "currentPage") < n(this, "maxPage")
        }).property("currentPage", "maxPage"),
        loadPage: function() {
            throw "NotImplemented"
        },
        actions: {
            requestPage: function() {
                return r(this, "paginationInput", parseInt(n(this, "paginationInput"))), n(this, "paginationInput") > n(this, "maxPage") ? r(this, "paginationInput", n(this, "maxPage")) : n(this, "paginationInput") <= 0 && r(this, "paginationInput", 1), this.loadPage(n(this, "paginationInput"))
            },
            loadFirstPage: function() {
                return this.loadPage(1)
            },
            loadPreviousPage: function() {
                return this.loadPage(n(this, "currentPage") - 1)
            },
            loadLastPage: function() {
                return this.loadPage(n(this, "maxPage"))
            },
            loadNextPage: function() {
                return this.loadPage(n(this, "currentPage") + 1)
            },
            loadLastPost: function(e) {
                return null == e && (e = !1), this.loadPage(n(this, "maxPage"), {
                    anchor: "bottom",
                    forceReload: e
                })
            }
        }
    }), e["default"] = t
}), define("mobile-panel/mixins/pagination-route", ["exports"], function(e) {
    var t, n = Ember.get,
        r = Ember.set;
    t = Ember.Mixin.create({
        beforeModel: function(e) {
            return r(this, "requestedPage", parseInt((null != n(e, "queryParams") ? n(n(e, "queryParams"), "page") : void 0) || "1", 10))
        }
    }), e["default"] = t
}), define("mobile-panel/mixins/pagination-view", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.Mixin.create({
        attachListeners: function() {
            return this.$(".paginate-cur").on("keypress", function(e) {
                return 13 === n(e, "keyCode") ? $(this).blur() : void 0
            }), n(this, "controller").on("scrollToAnchor", function(e) {
                var t, r;
                return t = $(document), r = "bottom" === e ? t.height() : "top" === e ? 0 : n($("#" + e)[0], "offsetTop"), t.scrollTop(r)
            })
        }.on("didInsertElement"),
        removeListeners: function() {
            return n(this, "controller").off("scrollToAnchor")
        }.on("willDestroyElement")
    }), e["default"] = t
}), define("mobile-panel/mixins/pretty-promise", ["exports", "ember-i18n"], function(e, t) {
    var n, r = Ember.get;
    Ember.set;
    n = Ember.Mixin.create({
        rejectWithoutDialog: function(e) {
            return r(Ember.RSVP, "Promise").reject({
                __no_dialog__: !0,
                data: e
            })
        },
        defaultErrorMessage: t.translationMacro("errors.thereWasAnErrorCompletingYourRequestPleaseTryAgain"),
        prettyPromise: function(e, t) {
            return null == t && (t = r(this, "defaultErrorMessage")), this.send("showLoading"), e["catch"](function(e) {
                return function(n) {
                    return "object" === Ember.typeOf(n) && r(n, "__no_dialog__") ? r(Ember.RSVP, "Promise").reject(r(n, "data")) : (Ember.Logger.error(n), e.displayModal({
                        title: r(e, "i18n").t("errors.error"),
                        message: t
                    }))
                }
            }(this))["finally"](function(e) {
                return function() {
                    return e.send("hideLoading")
                }
            }(this))
        }
    }), e["default"] = n
}), define("mobile-panel/mixins/profile-controller", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.Mixin.create({
        viewingOwnProfile: Ember.computed(function() {
            return n(n(this, "activeUser"), "username") === n(this, "username")
        }).property("activeUser.username", "username")
    }), e["default"] = t
}), define("mobile-panel/mixins/restricted-access-route", ["exports"], function(e) {
    var t, n = (Ember.get, Ember.set);
    t = Ember.Mixin.create({
        sendToRegistrationFlowWithMessage: function(e) {
            return n(this.controllerFor("application"), "queuedGuestMessage", e), this.transitionTo("registration-flow")
        }
    }), e["default"] = t
}), define("mobile-panel/mixins/scroll-to-top", ["exports"], function(e) {
    var t;
    Ember.get, Ember.set;
    t = Ember.Mixin.create({
        scrollToTop: function() {
            return Ember.testing ? void 0 : $("body").scrollTop(0)
        }.on("didInsertElement")
    }), e["default"] = t
}), define("mobile-panel/mixins/show-modal", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.Mixin.create({
        displayModal: function(e) {
            var t, r, a, l;
            return t = e, a = t.name, l = t.model, l || (l = Ember.Object.create(arguments[0]), l.setProperties({
                name: null,
                model: null
            })), r = Ember.RSVP.defer(), Ember.run.next(function(e) {
                return function() {
                    return e.send("showModal", null != a ? a : "confirmation-modal", l, r)
                }
            }(this)), {
                promise: n(r, "promise")
            }
        }
    }), e["default"] = t
}), define("mobile-panel/mixins/toolbar-view", ["exports"], function(e) {
    var t, n = Ember.get,
        r = Ember.set;
    t = Ember.Mixin.create({
        tagName: "div",
        elementId: "toolbar",
        classNames: ["modal_hidden"],
        classNameBindings: ["shouldShow:visible", ":toolbar"],
        shouldShow: !0,
        pastScrollTop: 0,
        attachScrollListeners: function() {
            var e;
            return e = $(document), e.on("scroll.toolbar", function(t) {
                return function(a) {
                    return Ember.run(function(t) {
                        return function() {
                            var a;
                            return a = e.scrollTop(), 3 > a || a > e.height() - $(window).height() - 3 || a < n(t, "pastScrollTop") ? r(t, "shouldShow", !0) : a > n(t, "pastScrollTop") + 1 && r(t, "shouldShow", !1), r(t, "pastScrollTop", a)
                        }
                    }(t))
                }
            }(this))
        }.on("didInsertElement"),
        detachScrollListeners: function() {
            return $(document).off("scroll.toolbar")
        }.on("willDestroyElement"),
        addToolbarPresentClass: function() {
            return $("body").addClass("w_toolbar")
        }.on("didInsertElement"),
        removeToolbarPresentclass: function() {
            return $("body").removeClass("w_toolbar")
        }.on("willDestroyElement")
    }), e["default"] = t
}), define("mobile-panel/mobile_panel.js", function() {
    var e, t = Ember.get;
    Ember.set;
    e = function(e) {
        var n;
        return n = new RegExp("^" + e + "/extensions/"), Ember.keys(t(requirejs, "_eak_seen")).forEach(function(e) {
            return n.test(e) ? require(e)["default"]() : void 0
        })
    }, e(t(MobilePanel, "modulePrefix")), require("ember/load-initializers")["default"](MobilePanel, t(MobilePanel, "modulePrefix"))
}), define("mobile-panel/models/active-user", ["exports", "mobile-panel/support/resettable-object-proxy"], function(e, t) {
    var n, r = Ember.get,
        a = Ember.set;
    n = t["default"].extend(Ember.Evented, {
        chatInfo: {
            authentication: {}
        },
        init: function() {
            return void 0 === r(this, "preferenceService").get("showInGameNames") && r(this, "preferenceService").set("showInGameNames", !0), r(this, "device").on("player-age", this, "updateUnderage")
        },
        isAuthenticated: Ember.computed(function() {
            return r(this, "id") > 0
        }).property("id"),
        isGuest: Ember.computed(function() {
            return !r(this, "isAuthenticated")
        }).property("isAuthenticated"),
        hasGuild: Ember.computed(function() {
            return null != r(this, "guild") || r(this, "hasGuildChat") || r(this, "characterGenerationEnabled")
        }).property("guild", "hasGuildChat", "characterGenerationEnabled"),
        hasGuildChat: Ember.computed(function() {
            return null != r(this, "chatInfoGuildId")
        }).property("chatInfoGuildId"),
        chatInfoGuildId: Ember.computed(function() {
            return null != r(this, "chatInfo") && null != r(r(this, "chatInfo"), "authentication") ? r(r(r(this, "chatInfo"), "authentication"), "guildId") : void 0
        }).property("chatInfo.authentication.guildId"),
        chatInfoChatSize: Ember.computed(function() {
            return null != r(this, "chatInfo") && null != r(r(this, "chatInfo"), "authentication") ? r(r(r(this, "chatInfo"), "authentication"), "chatSize") : void 0
        }).property("chatInfo.authentication.chatSize"),
        underage: Ember.computed(function() {
            return r(this, "isGuest") ? !(!r(this, "kongUnderage") && !r(this, "gameUnderage")) : !1
        }).property("isGuest", "kongUnderage", "gameUnderage"),
        emailMfaEnabled: Ember.computed(function() {
            return "email" === r(this, "mfaMethod") && r(this, "mfaEnabled")
        }).property("mfaMethod", "mfaEnabled"),
        mfaConfirmationRequired: Ember.computed(function() {
            return r(this, "mfaMethod") && !r(this, "mfaEnabled")
        }).property("mfaMethod", "mfaEnabled"),
        registrationOptIn: function() {
            return "unchecked_checkbox" !== r(this, "splitTreatments")["158398427UncheckedOptInCheckbox"]
        },
        usingValidCharacterToken: function() {
            return r(this, "hasGuildChat") && (null != r(this, "characterTokenService") ? r(r(this, "characterTokenService"), "hasValidCharacterToken") : void 0) ? r(r(r(this, "characterTokenService"), "characterToken"), "characterIdentifier") === (null != r(this, "chatInfo") && null != r(r(this, "chatInfo"), "authentication") ? r(r(r(this, "chatInfo"), "authentication"), "characterIdentifier") : void 0) : !1
        },
        hasBadge: function(e) {
            return !!r(this, "completedBadges").find(function(t) {
                return t === e
            })
        },
        privacyPolicyRequired: Ember.computed(function() {
            return !r(this, "acceptedPrivacyPolicy")
        }).property("acceptedPrivacyPolicy"),
        acceptPrivacyPolicy: function() {
            return a(this, "acceptedPrivacyPolicy", !0)
        },
        parentalConsentRequired: Ember.computed(function() {
            return r(this, "inEuConsentCountry") && r(this, "age") < r(this, "ageOfConsent")
        }).property("inEuConsentCountry", "age", "ageOfConsent"),
        showInGameNames: Ember.computed("preferenceService.showInGameNames", {
            get: function() {
                return r(this, "preferenceService").get("showInGameNames")
            },
            set: function(e, t) {
                return r(this, "preferenceService").set("showInGameNames", t), t
            }
        }),
        change: function(e, t) {
            var n, l;
            return l = r(this, "id") !== r(e, "id"), n = r(this, "gameUnderage"), !l && this.usingValidCharacterToken() && a(e, "guild", r(this, "guild")), this.reset(e), a(this, "splitTreatments", t), a(this, "gameUnderage", n), l ? (r(this, "hasGuildChat") && this.resetChatInfo(), this.trigger("changed")) : void 0
        },
        updateChatInfo: function(e) {
            var t;
            return t = r(this, "chatInfoGuildId"), this.setProperties(e), this.trigger("chatInfoChanged"), r(this, "hasGuildChat") && t === r(this, "chatInfoGuildId") ? void 0 : this.trigger("chatGuildChanged")
        },
        resetChatInfo: function() {
            return Ember.Logger.debug("Resetting chat info"), this.updateChatInfo({
                chatInfo: {
                    authentication: {}
                }
            })
        },
        kuid: Ember.computed(function() {
            return null != r(this, "chatInfo") && null != r(r(this, "chatInfo"), "authentication") ? r(r(r(this, "chatInfo"), "authentication"), "kuid") : void 0
        }).property("chatInfo.authentication.kuid"),
        updateUnderage: function(e) {
            return a(this, "gameUnderage", r(e, "value") < 13)
        },
        updateChatSize: function(e) {
            return a(r(r(this, "chatInfo"), "authentication"), "chatSize", e), this.trigger("chatSizeChanged")
        }
    }), e["default"] = n
}), define("mobile-panel/models/character-token", ["exports", "mobile-panel/support/normalize-json"], function(e, t) {
    var n, r = Ember.get;
    Ember.set;
    n = Ember.Object.extend({
        blank: Ember.computed(function() {
            return !(null != r(this, "token") ? r(r(this, "token"), "length") : void 0)
        }).property("token.length"),
        payload: Ember.computed(function() {
            return r(this, "blank") ? void 0 : this._parseToken()
        }).property("blank", ""),
        characterIdentifier: Ember.computed(function() {
            return null != r(this, "payload") ? r(r(this, "payload"), "characterIdentifier") : void 0
        }).property("payload.characterIdentifier"),
        guildIdentifier: Ember.computed(function() {
            return null != r(this, "payload") ? r(r(this, "payload"), "guildIdentifier") : void 0
        }).property("payload.guildIdentifier"),
        serverIdentifier: Ember.computed(function() {
            return null != r(this, "payload") ? r(r(this, "payload"), "serverIdentifier") : void 0
        }).property("payload.serverIdentifier"),
        expiration: Ember.computed(function() {
            return null != r(this, "payload") ? r(r(this, "payload"), "exp") : void 0
        }).property("payload.exp"),
        hasGuildInfo: Ember.computed(function() {
            return null != r(this, "guildIdentifier") && null != r(this, "serverIdentifier")
        }).property("guildIdentifier", "serverIdentifier"),
        valid: Ember.computed(function() {
            return null != r(this, "characterIdentifier")
        }).property("characterIdentifier"),
        equals: function(e) {
            return e ? r(this, "characterIdentifier") === r(e, "characterIdentifier") && r(this, "guildIdentifier") === r(e, "guildIdentifier") && r(this, "serverIdentifier") === r(e, "serverIdentifier") : !1
        },
        toString: function() {
            return "CharacterToken [valid=" + r(this, "valid") + " character=" + r(this, "characterIdentifier") + " server=" + r(this, "serverIdentifier") + " guild=" + r(this, "guildIdentifier") + "]"
        },
        _parseToken: function() {
            var e, n;
            try {
                if (e = b64utos(r(this, "token").split(".")[1]), !(e && r(e, "length") >= 2)) return;
                return t["default"](JSON.parse(e))
            } catch (a) {
                return n = a, Ember.Logger.error("Error parsing charcter token (" + r(this, "token") + "): " + n)
            }
        }
    }), e["default"] = n
}), define("mobile-panel/models/device", ["exports", "mobile-panel/support/underscore-json", "mobile-panel/support/normalize-json", "mobile-panel/support/clone-object", "mobile-panel/config/environment"], function(e, t, n, r, a) {
    function l(e, t) {
        for (var n = 0, r = t.length; r > n; ++n)
            if (n in t && t[n] === e) return !0;
        return !1
    }

    function i(e, t) {
        return {}.hasOwnProperty.call(e, t)
    }
    var o, c, s = Ember.get,
        u = Ember.set;
    c = function(e) {
        var t;
        return t = $(e).attr("type") || $(e).prop("tagName"), t.toLowerCase().match(/text|textarea|email|password|number|tel/)
    }, o = Ember.Object.extend(Ember.Evented, {
        userAgent: s(navigator, "userAgent"),
        apiVersion: Ember.computed(function() {
            return s(this, "apiCookie").split(":")[1]
        }).property("apiCookie"),
        inApp: Ember.computed(function() {
            return s(this, "androidApp") || s(this, "iosApp")
        }).property("androidApp", "iosApp"),
        animateTransitions: Ember.computed(function() {
            return !(Ember.testing || s(this, "androidApp") && 0 === (null != s(this, "osVersion") ? s(this, "osVersion").indexOf("2.") : void 0))
        }).property("androidApp", "osVersion"),
        scrollPolyFill: !1,
        sendToAppEnabled: !1,
        nativeTextEntryVisible: !1,
        hasVirtualMenuButton: Ember.computed(function() {
            return s(s(this, "config"), "nativeMenuButton") ? !1 : s(this, "apiVersion") ? s(this, "androidApp") ? !this.hasVersion("1.0.7.3") : !this.hasVersion("1.0.7.4") : !0
        }).property("config.nativeMenuButton", "apiVersion", "androidApp", ""),
        hasLocalStorage: Ember.computed(function() {
            try {
                return localStorage.setItem("kongPanel", "test"), localStorage.removeItem("kongPanel"), !0
            } catch (e) {
                return !1
            }
        }).property(),
        supportsSVG: function() {
            try {
                return !!s(document, "createElementNS") && !!s(document.createElementNS("http://www.w3.org/2000/svg", "svg"), "createSVGRect")
            } catch (e) {
                return !1
            }
        },
        analyticsEnabled: Ember.computed(function() {
            return s(this, "isCacheWarmer") ? !1 : s(this, "androidApp") && !s(this, "hasLocalStorage") ? !1 : !0
        }).property("isCacheWarmer", "androidApp", "hasLocalStorage"),
        init: function() {
            return u(this, "messageQueue", []), u(this, "config", {}), u(this, "analyticFields", {}), u(this, "apiCookie", $.cookie("kongregateMobileApi") || ""), u(this, "androidApp", /KongregateMobileApi/i.test(s(this, "userAgent"))), u(this, "iosApp", /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(s(this, "userAgent")) || "MacIntel" === s(navigator, "platform") && s(navigator, "maxTouchPoints") > 1), s(this, "apiCookie") && u(this, "osVersion", s(this, "apiCookie").split(":")[s(s(this, "apiCookie").split(":"), "length") - 1]), u(this, "androidLegacy", s(this, "androidApp") && !this.supportsSVG()), u(this, "isCacheWarmer", /KongregateCacheWarmer/i.test(s(this, "userAgent")) || s(this, "iosApp") && $(window).width() === $(window).height()), Ember.Logger.info("Device.isCacheWarmer: " + s(this, "isCacheWarmer") + ", osVersion: " + s(this, "osVersion") + ", androidLegacy: " + s(this, "androidLegacy")), this.setupEventListeners(), this.setupHacks()
        },
        hasVersion: function(e) {
            var t, n, r, a, l, i;
            for (i = s(this, "apiVersion").split("."), n = e.split("."), r = 0; 3 >= r; ++r) {
                if (a = r, l = parseInt(null != i[a] ? i[a] : "0", 10), t = parseInt(null != n[a] ? n[a] : "0", 10), l > t) return !0;
                if (t > l) return !1
            }
            return !0
        },
        canReload: Ember.computed(function() {
            return (null != s(this, "config") ? s(s(this, "config"), "reload") : void 0) || !s(this, "inApp")
        }).property("config.reload", "inApp"),
        reload: function() {
            return s(this, "inApp") ? this.sendToApp("reload", {}) : location.reload()
        },
        pushNotificationInfo: function(e) {
            return this.sendToApp("notification-info", {
                data: e
            })
        },
        pushAnalyticsEvent: function(e) {
            return this.sendToApp("panel-close-analytics-event", {
                data: e
            })
        },
        filterUserProperties: function(e) {
            var t, n, r, a;
            t = ["id", "username", "premium", "joinDate", "spentOnKreds", "notificationsCount", "acceptedPrivacyPolicy", "acceptedPrivacyPolicyVersion", "privacyPolicyAcceptedAt", "parentEmailRequired", "sessionToken"], r = {};
            for (n in e) i(e, n) && (a = e[n], l(n, t) && (r[n] = a));
            return r
        },
        pushInfo: function(e, t) {
            return this.sendToApp("load-info", {
                data: this.filterUserProperties(e),
                token: t
            })
        },
        loginUser: function(e, t) {
            return this.sendToApp("login", {
                data: this.filterUserProperties(e),
                token: t
            })
        },
        requestCharacterToken: function() {
            return this.sendToApp("request-character-token", {})
        },
        logoutUser: function() {
            return $.removeCookie("m_pass"), this.sendToApp("logout")
        },
        startFBConnect: function() {
            var e;
            return Ember.Logger.info("Starting FB Connect, config.fbConnect: " + s(s(this, "config"), "fbConnect")), s(s(this, "config"), "fbConnect") ? this.sendToApp("fbconnect") : (e = ["production", "kongregatestage"].indexOf(s(a["default"], "environment")) >= 0 ? "touch" : "popup", this.redirectTo("/auth/facebook?display=" + e))
        },
        sendMenuButtonState: function(e) {
            return this.sendToApp("menu-state", e)
        },
        checkPanelVersion: function(e) {
            var t;
            return t = MobilePanel.fingerprint(), Ember.Logger.info("Current fingerprint: " + t + ", latest: " + e), this.sendToApp("panel-version", {
                current: t,
                latest: e
            })
        },
        sendInitialized: function() {
            return this.sendToApp("initialized")
        },
        goToGuild: function(e) {
            return this.sendToApp("api-event", {
                name: "GO_TO_GUILDS",
                data: {
                    guildId: e
                }
            })
        },
        sendLog: function() {
            var e, t, n, r;
            if (t = arguments.length > 0 ? [].slice.call(arguments, 0) : [], s(this, "iosApp")) try {
                r = "";
                for (var a = 0, l = t.length; l > a; ++a) e = t[a], 0 !== s(r, "length") && (r += " "), r += String(e);
                return this.sendToApp("ios-log", r)
            } catch (i) {
                return n = i, console.error("Error while sending ios-log", n)
            }
        },
        openExternalBrowser: function(e) {
            return s(this, "inApp") ? (0 === e.indexOf("/") && (e = "" + s(location, "protocol") + "//" + s(location, "host") + e), this.sendToApp("link", {
                url: e
            })) : window.open(e, "_blank")
        },
        redirectTo: function(e) {
            return window.location.href = e
        },
        setupEventListeners: function() {
            return this.on("resize", function(e) {
                return function(t) {
                    return s(t, "rotated") !== !1 ? e.resize(s(t, "width"), s(t, "height")) : void 0
                }
            }(this)), this.on("config", function(e) {
                return function(t) {
                    return u(e, "config", n["default"](t)), e.broadcastCharacterToken()
                }
            }(this)), this.on("analytic-fields", function(e) {
                return function(t) {
                    return u(e, "analyticFields", n["default"](t)), e.checkForAmazonBuild(), e.broadcastPlayerAge()
                }
            }(this))
        },
        broadcastPlayerAge: function() {
            return this.trigger("player-age", {
                value: s(s(this, "analyticFields"), "playerAge") || 13
            })
        },
        checkForAmazonBuild: function() {
            var e, t;
            if (s(this, "androidApp")) return t = s(s(this, "analyticFields"), "pkgSrc"), e = s(s(this, "analyticFields"), "bundleId"), Ember.Logger.log("Checking for Amazon build, pkgSrc=" + t + ", bundleId: " + e), /^com\.amazon\./.test(t) || /\.(amazon$|underground)$/.test(e) ? (Ember.Logger.log("Amazon build detected"), this.addAmazonClassToHtml()) : Ember.Logger.log("Amazon build not detected")
        },
        addAmazonClassToHtml: function() {
            return $("html").addClass("amazon")
        },
        broadcastCharacterToken: function() {
            return this.trigger("character-token", {
                value: s(s(this, "config"), "characterToken") || ""
            })
        },
        setupHacks: function() {
            return s(this, "androidApp") && 0 !== (null != s(this, "osVersion") ? s(this, "osVersion").indexOf("3.") : void 0) && u(this, "scrollPolyFill", !0), s(this, "iosApp") ? $(document).on("touchend click", "input,textarea", function(e) {
                return c(this) ? (e.preventDefault(), $(this).focus()) : void 0
            }) : void 0
        },
        resize: function(e, t) {
            return s(this, "iosApp") ? ($(".scroller").css("-webkit-overflow-scrolling", "auto"), Ember.run.next(function() {
                return $(".scroller").css("-webkit-overflow-scrolling", "")
            })) : void 0
        },
        sendToApp: function(e, n) {
            var a, l;
            return null == n && (n = {}), s(this, "sendToAppEnabled") || "link" === e ? (e = e.dasherize(), "object" === Ember.typeOf(n) && (n = r["default"](n)), n = t["default"](n), "object" === Ember.typeOf(n) && (n = JSON.stringify(n)), s(this, "iosApp") ? (a = this.createIframe(), a.setAttribute("src", "" + e + ":##sendToApp##" + n), s(document, "documentElement").appendChild(a), s(a, "parentNode").removeChild(a)) : s(this, "androidApp") ? (l = "sendToKongregate://" + encodeURIComponent(e + ":##sendToApp##" + n), a = this.createIframe(), a.setAttribute("src", l), s(document, "documentElement").appendChild(a), s(a, "parentNode").removeChild(a)) : Ember.Logger.log("sendToApp: " + e + "=" + n)) : void s(this, "messageQueue").push({
                name: e,
                value: n
            })
        },
        startSending: function() {
            var e;
            u(this, "sendToAppEnabled", !0);
            for (var t = 0, n = s(this, "messageQueue").length; n > t; ++t) e = s(this, "messageQueue")[t], this.sendToApp(s(e, "name"), s(e, "value"));
            return u(this, "messageQueue", [])
        },
        createIframe: function() {
            return document.createElement("IFRAME")
        },
        enforceNonCacheWarmer: function() {
            if (s(this, "isCacheWarmer")) throw new Error("CacheWarmer")
        },
        hasNativeTextEntry: Ember.computed(function() {
            return s(this, "iosApp") && !!s(s(this, "config"), "nativeTextEntry")
        }).property("iosApp", "config.nativeTextEntry"),
        hasGuildChat: Ember.computed(function() {
            return !(s(this, "inApp") && !s(s(this, "config"), "guildChat") && "1.2.1.1" !== s(this, "apiVersion"))
        }).property("inApp", "config.guildChat", "apiVersion")
    }), e["default"] = o
}), define("mobile-panel/models/forum", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = n(DS, "Model").extend({
        name: DS.attr("string"),
        description: DS.attr("string"),
        topicsCount: DS.attr("number"),
        postsCount: DS.attr("number"),
        latestPostBy: DS.attr("string"),
        latestPostAt: DS.attr("date"),
        isGuildForum: DS.attr("boolean"),
        parentForum: DS.belongsTo("forum", {
            inverse: "subforums",
            async: !1
        }),
        subforums: DS.hasMany("forum", {
            inverse: "parentForum",
            async: !1
        }),
        hasSubforums: Ember.computed.notEmpty("subforums.[]"),
        topics: function(e) {
            return null == e && (e = 1), n(this, "store").query("topic", {
                forum_id: n(this, "id"),
                page: e
            })
        }
    }), e["default"] = t
}), define("mobile-panel/models/game", ["exports", "mobile-panel/support/resettable-object-proxy"], function(e, t) {
    var n, r, a = Ember.get;
    Ember.set;
    r = [179960, 180048], n = t["default"].extend({
        defaultStatisticId: Ember.computed(function() {
            return a(a(this, "highScoreStatistics")[0], "id")
        }).property("highScoreStatistics.id"),
        url: Ember.computed(function() {
            return "/games_redirect/" + a(this, "id")
        }).property("id"),
        isUnsigned: !1,
        grandfatheredUnsignedGame: Ember.computed(function() {
            return r.contains(a(this, "id"))
        }).property("id"),
        showUnsignedWarning: Ember.computed(function() {
            return a(this, "isUnsigned") && !a(this, "grandfatheredUnsignedGame")
        }).property("isUnsigned", "grandfatheredUnsignedGame"),
        badgeIds: Ember.computed(function() {
            return a(this, "badges").map(function(e) {
                return a(e, "id")
            })
        }).property("badges.@each"),
        getBadge: function(e) {
            return a(this, "badges").find(function(t) {
                return a(t, "id") === e
            })
        },
        getBadges: function(e) {
            return e.map(function(e) {
                return function(t) {
                    return e.getBadge(t)
                }
            }(this))
        },
        hasForum: Ember.computed(function() {
            return !!a(this, "gameForumId")
        }).property("gameForumId"),
        hasBadges: Ember.computed(function() {
            return null != a(this, "badges") && a(a(this, "badges"), "length") > 0
        }).property("badges", "badges.length")
    }), e["default"] = n
}), define("mobile-panel/models/message", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = n(DS, "Model").extend({
        content: DS.attr("string"),
        createdAt: DS.attr("date"),
        sender: DS.belongsTo("user", {
            async: !1
        }),
        unread: DS.attr("boolean")
    }), e["default"] = t
}), define("mobile-panel/models/post", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = n(DS, "Model").extend({
        postedAt: DS.attr("date"),
        user: DS.belongsTo("user", {
            async: !1
        }),
        topic: DS.belongsTo("topic", {
            async: !1
        }),
        body: DS.attr("string"),
        flagged: DS.attr("boolean"),
        hidden: DS.attr("boolean"),
        pageNumber: DS.attr("number"),
        bodyHtml: Ember.computed(function() {
            return marked.setOptions({
                sanitize: !0
            }), marked(n(this, "body"))
        }).property("body")
    }), e["default"] = t
}), define("mobile-panel/models/topic", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = n(DS, "Model").extend({
        title: DS.attr("string"),
        body: DS.attr("string"),
        hits: DS.attr("number"),
        postsCount: DS.attr("number"),
        locked: DS.attr("boolean"),
        sticky: DS.attr("boolean"),
        sink: DS.attr("boolean"),
        latestPostBy: DS.attr("string"),
        latestPostAt: DS.attr("date"),
        latestPostByCharacterName: DS.attr("string"),
        forum: DS.belongsTo("forum", {
            async: !1
        }),
        posts: function(e) {
            return null == e && (e = 1), n(this, "store").query("post", {
                topic_id: n(this, "id"),
                page: e
            })
        }
    }), e["default"] = t
}), define("mobile-panel/models/user", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = n(DS, "Model").extend({
        username: DS.attr("string"),
        avatarUrl: DS.attr("string"),
        characterName: DS.attr("string")
    }), e["default"] = t
}), define("mobile-panel/router", ["exports"], function(e) {
    var t;
    Ember.get, Ember.set;
    t = Ember.Router.extend({
        rootURL: "/mobile_api/",
        location: Ember.testing ? "none" : "hash"
    }), t.map(function() {
        return this.route("sleep"), this.route("wake"), this.route("login"), this.route("logout"), this.route("edit-profile", {
            path: "edit_profile"
        }), this.route("edit-avatar", {
            path: "edit_avatar"
        }), this.route("forgot-password", {
            path: "forgot_password"
        }), this.resource("registration-flow", {
            path: "registration_flow"
        }, function() {
            return this.route("email-address", {
                path: "email_address"
            }), this.route("password"), this.route("birthdate"), this.route("username"), this.route("underage")
        }), this.resource("game", function() {
            return this.route("badges"), this.route("scores", {
                path: "scores/:statisticId"
            }), this.route("faq"), this.route("support"), this.route("maintenance")
        }), this.resource("facebook", function() {
            return this.route("create"), this.route("login"), this.route("finalize"), this.route("callback"), this.route("matched")
        }), this.resource("apple", function() {
            return this.route("callback"), this.route("finalize")
        }), this.route("forums"), this.route("forum", {
            path: "forum/:forum_id"
        }), this.route("topic", {
            path: "topic/:topic_id"
        }), this.route("forum-search", {
            path: "forum_search"
        }), this.route("pages", {
            path: "pages/:page_id"
        }), this.route("more-games", {
            path: "more_games"
        }), this.route("redirect"), this.route("profile.show", {
            path: "profile/:username"
        }), this.route("profile.games", {
            path: "profile/:username/games"
        }), this.route("profile.posts", {
            path: "profile/:username/posts"
        }), this.route("profile.badges", {
            path: "profile/:username/badges"
        }), this.route("messages"), this.route("profile.befriendings", {
            path: "profile/:username/befriendings"
        }), this.route("profile.friends", {
            path: "profile/:username/befriendings/friends"
        }), this.route("profile.fans", {
            path: "profile/:username/befriendings/fans"
        }), this.route("profile.messages", {
            path: "profile/:username/messages"
        }), this.resource("game-forums", {
            path: "game_forums"
        }), this.route("chat"), this.route("privacy-policy-required")
    }), e["default"] = t
}), define("mobile-panel/routes/apple/callback", ["exports", "mobile-panel/support/normalize-json"], function(e, t) {
    var n, r = Ember.get;
    Ember.set;
    n = Ember.Route.extend({
        locationHistory: Ember.inject.service("location-history"),
        model: function(e, n) {
            var a;
            if (a = r(e, "matchInfo")) {
                if (a = t["default"]($.parseJSON(a)), "user_created" === r(a, "result") || "user_logged_in" === r(a, "result") || "connection_exists" === r(a, "result") || "missing_email" === r(a, "result")) return "missing_email" === r(a, "result") ? (r(this, "analyticsService").trackEvent("Apple Connect", "missing email"), void this.transitionTo("apple.finalize")) : ("user_created" === r(a, "result") ? r(this, "analyticsService").trackEvent("Apple Connect", "registration success") : r(this, "analyticsService").trackEvent("Apple Connect", "sign in success"), n.send("goBackOrDefault", "index"));
                throw "Account creation failed"
            }
            return n.send("goBackOrDefault", "index")
        },
        retry: function() {
            return r(this, "locationHistory").goBackOrDefault("index")
        }
    }), e["default"] = n
}), define("mobile-panel/routes/apple/finalize", ["exports", "mobile-panel/routes/restricted-access"], function(e, t) {
    var n;
    Ember.get, Ember.set;
    n = t["default"].extend({
        beforeFilters: ["authenticatedOnly"],
        setupController: function(e) {
            return e.clearForm()
        }
    }), e["default"] = n
}), define("mobile-panel/routes/application", ["exports", "mobile-panel/support/normalize-json", "mobile-panel/mixins/restricted-access-route", "mobile-panel/mixins/application-data", "ic-ajax"], function(e, t, n, r, a) {
    var l, i, o = Ember.get,
        c = Ember.set;
    l = ["/sleep", "/wake"], i = Ember.Route.extend(n["default"], r["default"], {
        locationHistory: Ember.inject.service("location-history"),
        i18n: Ember.inject.service(),
        urlChanged: Ember.observer(function() {
            return this.setLoading(!1), this.controllerFor("menu").send("close"), o(this, "device").sendToApp("url-changed", {
                hasHistory: o(o(this, "locationHistory"), "canGoBack")
            }), Ember.run.next(function(e) {
                return function() {
                    return Ember.Logger.log("URL changed: " + o(o(e, "router"), "url")), l.contains(o(o(e, "router"), "url")) ? void 0 : o(e, "analyticsService").trackPageView(o(o(e, "router"), "url"))
                }
            }(this))
        }, "router.url"),
        beforeModel: function(e) {
            return "function" == typeof kongUpdateProgress && kongUpdateProgress("ApplicationRoute.beforeModel"), o(this, "device").enforceNonCacheWarmer(), this.initializeApplicationData(e)
        },
        afterModel: function() {
            return "function" == typeof kongUpdateProgress && kongUpdateProgress("ApplicationRoute.afterModel"), o(o(this, "game"), "underMaintenance") && this.transitionTo("game.maintenance"), o(o(this, "activeUser"), "privacyPolicyRequired") && !o(o(this, "router"), "url").match(/facebook/) ? this.transitionTo("privacy-policy-required") : void 0
        },
        setLoading: function(e) {
            return c(this.controllerFor("application"), "loading", e)
        },
        addDeviceEventListeners: function() {
            return o(this, "device").on("kong-event-stats-sync", function(e) {
                return function() {
                    return e.loadUser()
                }
            }(this)), o(this, "device").on("fbconnect", function(e) {
                return function(t) {
                    return e.handleFBConnect(t)
                }
            }(this)), o(this, "device").on("back", function(e) {
                return function() {
                    return o(e, "locationHistory").goBackOrDefault()
                }
            }(this)), o(this, "device").on("app-foreground", function(e) {
                return function(t) {
                    return e.handleAppForeground(t)
                }
            }(this)), o(this, "device").on("invalid-session", function(e) {
                return function(t) {
                    return e.transitionToLogin({
                        username: o(t, "username"),
                        notice: "Please re-enter your login information"
                    })
                }
            }(this))
        }.on("init"),
        handleFBConnect: function(e) {
            var t;
            return (null != o(e, "token") ? o(o(e, "token"), "length") : void 0) > 0 ? (t = "/auth/facebook_access_token/callback?access_token=" + o(e, "token"), null != o(e, "expires_at") && (t += "&expires_at=" + o(e, "expires_at")), this.redirectToUrl(t)) : "no_system_account" === o(e, "result") || "unknown" === o(e, "result") ? this.redirectToUrl("/auth/facebook?display=popup") : this.transitionTo("index")
        },
        redirectToUrl: function(e) {
            return window.location.href = e
        },
        loadUser: function() {
            return a["default"]("/api/mobile_panel/v1/active_user.json").then(function(e) {
                return function(t) {
                    return e.processActiveUserData(t)
                }
            }(this))["catch"](function(e) {
                return Ember.Logger.error("Error loading user info: " + e.toString())
            })
        },
        handleAppForeground: function(e) {
            return t["default"](e), o(e, "userChanged") ? o(this, "device").reload() : void 0
        },
        transitionToLogin: function(e) {
            return this.transitionTo("login").then(function(t) {
                return function() {
                    return t.controllerFor("login").setProperties(e)
                }
            }(this))
        },
        actions: {
            willTransition: function(e) {
                return "logout" !== o(e, "targetName") && o(o(this, "activeUser"), "privacyPolicyRequired") && !o(o(this, "router"), "url").match(/facebook/) ? this.transitionTo("privacy-policy-required") : void 0
            },
            loading: function() {
                return this.setLoading(!0)
            },
            error: function(e, t) {
                return console.error(o(new Error, "stack")), console.error(e), this.setLoading(!1), c(this.controllerFor("application-error"), "transition", t), !0
            },
            showLoading: function() {
                return this.setLoading(!0)
            },
            hideLoading: function() {
                return this.setLoading(!1)
            },
            showModal: function(e, t, n) {
                return this.controllerFor("menu").send("close"), this.send("disableMenu"), c(this, "currentModalController", this.controllerFor(e)), o(this, "currentModalController").setup(t, n), this.render(e, {
                    into: "application",
                    outlet: "modal"
                }), Ember.run.schedule("afterRender", function(e) {
                    return function() {
                        return e.controllerFor("application").trigger("modal-opened")
                    }
                }(this))
            },
            closeModal: function() {
                return null != o(this, "currentModalController") && o(this, "currentModalController").send("close"), c(this, "currentModalController", null), this.send("enableMenu"), this.disconnectOutlet({
                    outlet: "modal",
                    parentView: "application"
                }), Ember.run.schedule("afterRender", function(e) {
                    return function() {
                        return e.controllerFor("application").trigger("modal-closed")
                    }
                }(this))
            },
            renderMenu: function() {
                return o(this, "menuRendered") ? void 0 : (c(this, "menuRendered", !0), this.render("menu", {
                    into: "application",
                    outlet: "menu"
                }))
            },
            externalLink: function(e, t, n) {
                var r;
                return null == t && (t = !1), t ? (Ember.Logger.log("Opening external link: " + e), o(this, "device").openExternalBrowser(e)) : (r = {
                    title: o(this, "i18n").t("externalLinkModal.title"),
                    message: o(this, "i18n").t("externalLinkModal.message"),
                    confirm: o(this, "i18n").t("externalLinkModal.open"),
                    cancel: o(this, "i18n").t("externalLinkModal.cancel")
                }, o(this.displayModal(r), "promise").then(function(t) {
                    return function() {
                        return Ember.Logger.log("Opening external link: " + e), o(t, "device").openExternalBrowser(e), null != n ? n.resolve() : void 0
                    }
                }(this), function() {
                    return null != n ? n.reject() : void 0
                }))
            },
            forumSearch: function(e) {
                return c(this.controllerFor("forum_search"), "query", e), this.transitionTo("forum-search")
            },
            swipeRight: function() {
                return o(o(this, "locationHistory"), "canGoBack") ? o(this, "locationHistory").goBackOrDefault() : this.controllerFor("menu").send("open")
            },
            swipeLeft: function() {
                return this.controllerFor("menu").send("close")
            },
            disableMenu: function() {
                return c(this.controllerFor("application"), "menuButtonDisabled", !0)
            },
            enableMenu: function() {
                return c(this.controllerFor("application"), "menuButtonDisabled", !1)
            },
            redirectToRegistrationFlowWithMessage: function(e) {
                return this.sendToRegistrationFlowWithMessage(e)
            },
            goBackOrDefault: function(e) {
                return null == e && (e = "index"), o(this, "locationHistory").goBackOrDefault(e)
            },
            scrollToTop: function() {
                return $(document).scrollTop(0)
            }
        }
    }), e["default"] = i
}), define("mobile-panel/routes/chat", ["exports", "mobile-panel/routes/restricted-access"], function(e, t) {
    var n, r = Ember.get,
        a = Ember.set;
    n = t["default"].extend({
        guildMotdService: Ember.inject.service("guild-motd"),
        beforeModel: function() {
            return r(r(this, "chatAuthenticationService"), "canAuthenticate") && r(r(this, "device"), "hasGuildChat") && !r(r(this, "game"), "darkLaunchMobileChat") ? r(this, "chatAuthenticationService").authenticate() : (Ember.Logger.warn("Trying to load chat route, but cannot authenticate. Redirecting to index."), this.transitionTo("index"))
        },
        afterModel: function() {
            return this.guildMemberOnly()
        },
        activate: function() {
            return a(r(this, "messageTrackingService"), "chatActive", !0), r(this, "chatService").announcePresence(), this.markMessagesAsViewed(), r(this, "chatService").on("message", this, r(this, "markMessagesAsViewed")), r(this, "chatService").on("motd", this, r(this, "markMotdAsRead")), r(this, "chatService").on("refresh", this, r(this, "refreshCurrentRoute")), r(this, "device").pushNotificationInfo({
                count: 0,
                type: "chat",
                params: {
                    category: "guild"
                }
            })
        },
        deactivate: function() {
            return a(r(this, "messageTrackingService"), "chatActive", !1), r(this, "chatService").stopAnnouncingPresence(), r(this, "chatService").off("message", this, r(this, "markMessagesAsViewed")), r(this, "chatService").off("motd", this, r(this, "markMotdAsRead")), r(this, "chatService").off("refresh", this, r(this, "refreshCurrentRoute"))
        },
        markMessagesAsViewed: function() {
            return r(this, "chatService").messagesViewed()
        },
        markMotdAsRead: function() {
            return r(this, "guildMotdService").markAsRead()
        },
        refreshCurrentRoute: function() {
            return r(this, "refresh")
        }
    }), e["default"] = n
}), define("mobile-panel/routes/edit-profile", ["exports", "mobile-panel/mixins/restricted-access-route"], function(e, t) {
    var n, r = Ember.get;
    Ember.set;
    n = Ember.Route.extend(t["default"], {
        activate: function() {
            return r(this, "analyticsService").pushSDKEvent("settings_views")
        },
        beforeModel: function() {
            return r(r(this, "activeUser"), "isAuthenticated") ? void 0 : (this.sendToRegistrationFlowWithMessage("You must sign-in to update settings"), !1)
        },
        model: function() {
            return Ember.Object.create(r(this, "activeUser").getProperties("emailAddress", "optIn", "about", "location", "private"))
        }
    }), e["default"] = n
}), define("mobile-panel/routes/facebook/callback", ["exports", "mobile-panel/support/normalize-json"], function(e, t) {
    var n, r = Ember.get,
        a = Ember.set;
    n = Ember.Route.extend({
        locationHistory: Ember.inject.service("location-history"),
        model: function(e, n) {
            var l;
            if (l = r(e, "matchInfo")) {
                if (l = t["default"]($.parseJSON(l)), "user_created" === r(l, "result") || "user_logged_in" === r(l, "result") || "connection_exists" === r(l, "result") || "missing_email" === r(l, "result")) return "missing_email" === r(l, "result") ? (r(this, "analyticsService").trackEvent("Facebook Connect", "missing email"), void this.transitionTo("facebook.finalize")) : ("user_created" === r(l, "result") ? r(this, "analyticsService").trackEvent("Facebook Connect", "registration success") : r(this, "analyticsService").trackEvent("Facebook Connect", "sign in success"), n.send("goBackOrDefault", "index"));
                if (r(l, "matchedOn")) return a(this.controllerFor("facebook.matched"), "matchInfo", l), this.transitionTo("facebook.matched");
                throw "Account creation failed"
            }
            return n.send("goBackOrDefault", "index")
        },
        retry: function() {
            return r(this, "locationHistory").goBackOrDefault("index")
        }
    }), e["default"] = n
}), define("mobile-panel/routes/facebook/finalize", ["exports", "mobile-panel/routes/restricted-access"], function(e, t) {
    var n;
    Ember.get, Ember.set;
    n = t["default"].extend({
        beforeFilters: ["authenticatedOnly"],
        setupController: function(e) {
            return e.clearForm()
        }
    }), e["default"] = n
}), define("mobile-panel/routes/facebook/login", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.Route.extend({
        stateCookieName: "facebook_state_params",
        setFBStateCookie: function(e) {
            return $.cookie(n(this, "stateCookieName"), JSON.stringify(e), {
                path: "/"
            })
        },
        beforeModel: function() {
            return n(this, "analyticsService").trackEvent("Facebook Connect", "begin"), this.setFBStateCookie({
                game_id: n(n(this, "game"), "id"),
                remember_me: !0
            }), n(this, "device").startFBConnect(n(this, "game"))
        },
        setupController: function() {
            return this.send("showLoading")
        }
    }), e["default"] = t
}), define("mobile-panel/routes/facebook/matched", ["exports", "mobile-panel/routes/restricted-access"], function(e, t) {
    var n, r = Ember.get;
    Ember.set;
    n = t["default"].extend({
        beforeFilters: ["guestOnly"],
        model: function() {
            return r(this.controllerFor("facebook.matched"), "matchInfo") ? void 0 : this.transitionTo("index")
        },
        setupController: function(e) {
            return e.clearForm()
        }
    }), e["default"] = n
}), define("mobile-panel/routes/forgot-password", ["exports"], function(e) {
    var t;
    Ember.get, Ember.set;
    t = Ember.Route.extend({
        setupController: function(e) {
            return e.clearForm()
        }
    }), e["default"] = t
}), define("mobile-panel/routes/forum-search", ["exports"], function(e) {
    var t;
    Ember.get, Ember.set;
    t = Ember.Route.extend({
        renderTemplate: function(e, t) {
            return this._super(e, t), this.render("search-toolbar", {
                outlet: "toolbar",
                controller: this.controllerFor("forumToolbar")
            })
        }
    }), e["default"] = t
}), define("mobile-panel/routes/forum", ["exports", "mobile-panel/mixins/pagination-route", "mobile-panel/mixins/forums-route"], function(e, t, n) {
    var r, a = Ember.get,
        l = Ember.set;
    r = Ember.Route.extend(t["default"], n["default"], {
        setupController: function(e, t) {
            return this._super(e, t), a(t, "hasSubforums") ? void 0 : (a(a(this, "controller"), "currentPage") && l(this, "requestedPage", a(a(this, "controller"), "currentPage")), e.send("initializeForum", a(this, "requestedPage")))
        },
        renderTemplate: function(e, t) {
            var n;
            return n = this.controllerFor("forumToolbar"), this._super(e, t), this.render("forum-toolbar", {
                outlet: "toolbar",
                controller: n
            })
        },
        beforeModel: function(e) {
            return this._super(e), a(a(this, "activeUser"), "underage") ? this.transitionTo("registration-flow.underage") : void 0
        }
    }), e["default"] = r
}), define("mobile-panel/routes/game/badges", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.Route.extend({
        activate: function() {
            return n(this, "analyticsService").pushSDKEvent("badges_views")
        }
    }), e["default"] = t
}), define("mobile-panel/routes/game/faq", ["exports", "mobile-panel/support/normalize-json", "ic-ajax"], function(e, t, n) {
    var r, a = Ember.get,
        l = Ember.set;
    r = Ember.Route.extend({
        beforeModel: function(e) {
            return a(a(this, "game"), "hasFaq") ? void 0 : this.transitionTo("game.support")
        },
        model: function() {
            return a(a(this, "game"), "hasFaq") ? this.loadFaq() : void 0
        },
        loadFaq: function() {
            return n["default"]("/mobile_panel/game_faq.json").then(function(e) {
                return t["default"](e)
            }, function(e) {
                return a(Ember.RSVP, "Promise").resolve({
                    error: !0
                })
            })
        },
        actions: {
            reload: function() {
                return this.prettyPromise(this.loadFaq()).then(function(e) {
                    return function(t) {
                        return l(a(e, "controller"), "model", t)
                    }
                }(this))
            }
        }
    }), e["default"] = r
}), define("mobile-panel/routes/game/scores", ["exports", "mobile-panel/support/normalize-json", "mobile-panel/support/underscore-json", "mobile-panel/support/clone-object", "ic-ajax"], function(e, t, n, r, a) {
    var l, i = Ember.get,
        o = Ember.set;
    l = Ember.Route.extend({
        activate: function() {
            return i(this, "analyticsService").pushSDKEvent("high_scores_views")
        },
        model: function(e) {
            return o(this, "statisticId", parseInt(i(e, "statisticId"), 10)), this.requestScores()
        },
        setupController: function(e, t) {
            return e.resetCurrentPages(), e.setProperties({
                model: t,
                chosenTab: null,
                defaultTab: null,
                statisticId: i(this, "statisticId")
            })
        },
        requestScores: function(e) {
            var l;
            return null == e && (e = {}), l = r["default"](e), n["default"](l), a["default"]("/high_scores.json", {
                method: "GET",
                data: $.extend(!0, {
                    game_id: i(i(this, "game"), "id"),
                    statistic_id: i(this, "statisticId")
                }, l)
            }).then(function(e) {
                return t["default"](e)
            }, function() {
                return i(Ember.RSVP, "Promise").resolve({
                    error: !0
                })
            })
        },
        actions: {
            showStatistic: function(e) {
                return i(this, "statisticId") !== e ? this.transitionTo("game.scores", e) : void 0
            },
            loadScores: function(e) {
                return this.prettyPromise(this.requestScores(e).then(function(t) {
                    return function(n) {
                        return i(t, "controller").setProperties({
                            model: n,
                            currentPages: e
                        })
                    }
                }(this)))
            }
        }
    }), e["default"] = l
}), define("mobile-panel/routes/game/support", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.Route.extend({
        activate: function() {
            return n(this, "analyticsService").pushSDKEvent("support_views")
        },
        setupController: function(e) {
            return e.clearForm()
        }
    }), e["default"] = t
}), define("mobile-panel/routes/game-forums", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.Route.extend({
        model: function() {
            return !n(n(this, "activeUser"), "optedOutOfGuilds") && (null != n(n(this, "activeUser"), "guild") ? n(n(n(this, "activeUser"), "guild"), "forumId") : void 0) ? Ember.RSVP.hash({
                guildForum: n(this, "store").findRecord("forum", n(n(n(this, "activeUser"), "guild"), "forumId")),
                gameForum: n(this, "store").findRecord("forum", n(n(this, "game"), "gameForumId"))
            }).then(function(e) {
                var t, r, a, l;
                return t = e, l = t.guildForum, r = t.gameForum, a = n(r, "hasSubforums") ? n(r, "subforums").toArray() : [r], [l].concat(a)
            }) : this.transitionTo("forum", n(n(this, "game"), "gameForumId"))
        },
        beforeModel: function() {
            return n(n(this, "activeUser"), "underage") ? this.transitionTo("registration-flow.underage") : void 0
        }
    }), e["default"] = t
}), define("mobile-panel/routes/index", ["exports", "mobile-panel/support/normalize-json", "ic-ajax"], function(e, t, n) {
    var r, a = Ember.get,
        l = Ember.set;
    r = Ember.Route.extend({
        _nonAnimatedRoutes: ["logout", "sleep", "wake"],
        model: function() {
            return a(this, "landingPageService").fetch()
        },
        afterModel: function(e, r) {
            return a(a(this, "activeUser"), "isAuthenticated") && n["default"]("/mobile_panel/messages/unread_count").then(function(e) {
                return function(n) {
                    return t["default"](n), l(a(e, "activeUser"), "unreadMessageCount", a(n, "unreadMessageCount"))
                }
            }(this)), null
        },
        actions: {
            willTransition: function(e) {
                return a(a(this, "controller"), "delayed") || !a(a(this, "device"), "animateTransitions") || a(this, "_nonAnimatedRoutes").contains(a(e, "targetName")) ? (l(a(this, "controller"), "delayed", !1), !0) : (l(a(this, "controller"), "firstLoad", !1), l(a(this, "controller"), "delayed", !0), $(".home-expander").addClass("flip-out"), Ember.run.later(function() {
                    return e.retry()
                }, 400), e.abort())
            }
        }
    }), e["default"] = r
}), define("mobile-panel/routes/login", ["exports", "mobile-panel/routes/restricted-access"], function(e, t) {
    var n, r = Ember.get,
        a = Ember.set;
    n = t["default"].extend({
        beforeFilters: ["guestOnly"],
        activate: function() {
            return r(this, "analyticsService").trackEvent("Sign In", "begin")
        },
        beforeModel: function() {
            return r(r(this, "activeUser"), "underage") ? this.transitionTo("registration-flow.underage") : void 0
        },
        model: function(e) {
            return {}
        },
        setupController: function(e, t) {
            return e.reset(), r(e, "emailAddress") ? (e.setProperties({
                username: r(e, "emailAddress")
            }), a(e, "emailAddress", void 0)) : void 0
        },
        resetController: function(e, t) {
            return t ? a(e, "emailAddress", void 0) : void 0
        }
    }), e["default"] = n
}), define("mobile-panel/routes/logout", ["exports", "mobile-panel/support/normalize-json", "ic-ajax"], function(e, t, n) {
    var r, a = Ember.get;
    Ember.set;
    r = Ember.Route.extend({
        beforeModel: function() {
            return a(a(this, "device"), "inApp") ? a(this, "device").logoutUser() : n["default"]("/session.json", {
                method: "post",
                data: {
                    _method: "DELETE",
                    game_id: a(a(this, "game"), "id")
                }
            }).then(function(e) {
                return function(n) {
                    a(e, "device").pushNotificationInfo({
                        count: 0,
                        type: "summary"
                    }), t["default"](n), a(e, "activeUser").change(a(n, "user"), a(n, "splitTreatments"), a(n, "chatInfo")), e.replaceWith("index")
                }
            }(this))["catch"](function(e) {
                return function(t) {
                    return e.displayModal({
                        title: a(e, "i18n").t("errors.error"),
                        message: a(e, "i18n").t("logout.thereWasAnError")
                    })
                }
            }(this))
        }
    }), e["default"] = r
}), define("mobile-panel/routes/messages", ["exports", "ic-ajax"], function(e, t) {
    var n, r = Ember.get;
    Ember.set;
    n = Ember.Route.extend({
        model: function() {
            return r(this, "store").query("message", {}).then(function(e) {
                return {
                    model: e.toArray(),
                    nextSrid: r(r(e, "meta"), "next_srid"),
                    unreadCount: r(r(e, "meta"), "unread_count")
                }
            }, function(e) {
                return function() {
                    return e.displayModal({
                        title: r(e, "i18n").t("errors.error"),
                        message: r(e, "i18n").t("errors.thereWasAnErrorCompletingYourRequestPleaseTryAgain")
                    })
                }
            }(this))
        },
        afterModel: function(e, n) {
            return r(r(this, "activeUser"), "isAuthenticated") && t["default"]("/mobile_panel/notifications/summary").then(function(e) {
                return function(t) {
                    return r(e, "device").pushNotificationInfo(t)
                }
            }(this)), null
        },
        setupController: function(e, t) {
            return e.setProperties(t)
        },
        actions: {
            willTransition: function(e) {
                return r(this, "store").unloadAll("message"), r(this, "store").unloadAll("user")
            }
        }
    }), e["default"] = n
}), define("mobile-panel/routes/more-games", ["exports", "ic-ajax"], function(e, t) {
    var n, r = Ember.get;
    Ember.set;
    n = Ember.Route.extend({
        model: function() {
            return this.requestGameContent()
        },
        activate: function() {
            return r(this, "analyticsService").pushSDKEvent("more_games_views")
        },
        setupController: function(e, t) {
            return e.setProperties({
                model: t
            })
        },
        requestGameContent: function() {
            return t["default"]("/mobile_panel/games_content", {
                method: "GET"
            }).then(function(e) {
                return e
            }, function() {
                return r(Ember.RSVP, "Promise").resolve({
                    error: !0
                })
            })
        }
    }), e["default"] = n
}), define("mobile-panel/routes/pages", ["exports", "ic-ajax"], function(e, t) {
    var n, r = Ember.get,
        a = Ember.set;
    n = Ember.Route.extend({
        model: function(e) {
            return a(this, "permalink", r(e, "page_id")), this.requestPageText()
        },
        setupController: function(e, t) {
            return e.setProperties({
                model: t
            })
        },
        requestPageText: function() {
            return t["default"]("/pages/" + r(this, "permalink") + ".text", {
                method: "GET"
            }).then(function(e) {
                return e
            }, function() {
                return r(Ember.RSVP, "Promise").resolve({
                    error: !0
                })
            })
        }
    }), e["default"] = n
}), define("mobile-panel/routes/privacy-policy-required", ["exports", "ic-ajax"], function(e, t) {
    var n, r = Ember.get;
    Ember.set;
    n = Ember.Route.extend({
        beforeModel: function() {
            return r(r(this, "activeUser"), "privacyPolicyRequired") ? void 0 : this.transitionTo("index")
        }
    }), e["default"] = n
}), define("mobile-panel/routes/profile/badges", ["exports", "mobile-panel/support/normalize-json", "ic-ajax"], function(e, t, n) {
    var r, a = Ember.get;
    Ember.set;
    r = Ember.Route.extend({
        model: function(e) {
            return n["default"]("/mobile_panel/profile/" + a(e, "username") + "/badges").then(function(e) {
                return t["default"](e)
            })
        }
    }), e["default"] = r
}), define("mobile-panel/routes/profile/befriendings", ["exports", "mobile-panel/support/normalize-json", "ic-ajax"], function(e, t, n) {
    var r, a = Ember.get;
    Ember.set;
    r = Ember.Route.extend({
        model: function(e, r) {
            return n["default"]("/mobile_panel/profile/" + a(e, "username") + "/befriendings", {
                method: "GET"
            })["catch"](function(t) {
                return function(n) {
                    return r.abort(), t.transitionTo("profile.show", a(e, "username"))
                }
            }(this)).then(function(e) {
                return t["default"](e)
            })
        }
    }), e["default"] = r
}), define("mobile-panel/routes/profile/fans", ["exports", "mobile-panel/mixins/pagination-route"], function(e, t) {
    var n, r = Ember.get,
        a = Ember.set;
    n = Ember.Route.extend(t["default"], {
        model: function(e) {
            return a(this, "username", r(e, "username"))
        },
        setupController: function(e) {
            return a(e, "username", r(this, "username")), Ember.run.next(function(t) {
                return function() {
                    return e.send("initializeFans", r(t, "requestedPage"))
                }
            }(this))
        }
    }), e["default"] = n
}), define("mobile-panel/routes/profile/friends", ["exports", "mobile-panel/mixins/pagination-route"], function(e, t) {
    var n, r = Ember.get,
        a = Ember.set;
    n = Ember.Route.extend(t["default"], {
        model: function(e) {
            return a(this, "username", r(e, "username"))
        },
        setupController: function(e) {
            return a(e, "username", r(this, "username")), Ember.run.next(function(t) {
                return function() {
                    return e.send("initializeFriends", r(t, "requestedPage"))
                }
            }(this))
        }
    }), e["default"] = n
}), define("mobile-panel/routes/profile/games", ["exports", "mobile-panel/support/normalize-json", "ic-ajax"], function(e, t, n) {
    var r, a = Ember.get;
    Ember.set;
    r = Ember.Route.extend({
        model: function(e, r) {
            return n["default"]("/mobile_panel/profile/" + a(e, "username") + "/games", {
                method: "GET",
                data: {
                    game_id: a(a(this, "game"), "id")
                }
            })["catch"](function(t) {
                return function(n) {
                    return r.abort(), t.transitionTo("profile.show", a(e, "username"))
                }
            }(this)).then(function(e) {
                return t["default"](e)
            })
        }
    }), e["default"] = r
}), define("mobile-panel/routes/profile/posts", ["exports", "mobile-panel/mixins/pagination-route", "mobile-panel/mixins/forums-route"], function(e, t, n) {
    var r, a = Ember.get,
        l = Ember.set;
    r = Ember.Route.extend(t["default"], n["default"], {
        model: function(e) {
            return l(this, "username", a(e, "username"))
        },
        setupController: function(e) {
            return l(e, "username", a(this, "username")), Ember.run.next(function(t) {
                return function() {
                    return e.send("initializeTopic", a(t, "requestedPage"))
                }
            }(this))
        },
        beforeModel: function(e) {
            return this._super(e), a(a(this, "activeUser"), "underage") ? this.transitionTo("registration-flow.underage") : void 0
        }
    }), e["default"] = r
}), define("mobile-panel/routes/profile/show", ["exports", "mobile-panel/support/normalize-json", "ic-ajax"], function(e, t, n) {
    var r, a = Ember.get;
    Ember.set;
    r = Ember.Route.extend({
        activate: function() {
            return a(this, "analyticsService").pushSDKEvent("profiles_views")
        },
        model: function(e) {
            return n["default"]("/mobile_panel/profile/" + a(e, "username")).then(function(e) {
                return t["default"](e)
            })
        }
    }), e["default"] = r
}), define("mobile-panel/routes/redirect", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.Route.extend({
        beforeModel: function(e) {
            var t, r, a;
            switch (r = null != n(e, "queryParams") ? n(n(e, "queryParams"), "target") : void 0, a = null != n(e, "queryParams") ? n(n(e, "queryParams"), "target_id") : void 0, t = [], r) {
                case "forums":
                    t = ["forum", n(n(this, "game"), "gameForumId")];
                    break;
                case "topics":
                    t = ["topic", a];
                    break;
                case "more_games":
                    t = ["more-games"];
                    break;
                case "high_scores":
                    t = ["game.scores", n(n(this, "game"), "defaultStatisticId")];
                    break;
                case "support":
                    t = ["game.faq"];
                    break;
                case "sleep":
                    t = ["sleep"];
                    break;
                case "guild_chat":
                    t = ["chat"];
                    break;
                case "registration":
                    t = ["registration-flow"];
                    break;
                case "terms":
                    t = ["pages", "terms"];
                    break;
                case "privacy":
                    t = ["pages", "privacy"];
                    break;
                case "messages":
                    t = ["messages"];
                    break;
                default:
                    t = ["index"]
            }
            return n(this, "transitionTo").apply(this, [].slice.call(t))
        }
    }), e["default"] = t
}), define("mobile-panel/routes/registration-flow/email-address", ["exports", "mobile-panel/routes/restricted-access"], function(e, t) {
    var n, r = Ember.get,
        a = Ember.set;
    n = t["default"].extend({
        beforeFilters: ["guestOnly"],
        setupController: function(e) {
            var t, n;
            return t = this.controllerFor("application"), n = this.controllerFor("registrationFlow"), a(n, "message", r(t, "queuedGuestMessage")), a(t, "queuedGuestMessage", null)
        }
    }), e["default"] = n
}), define("mobile-panel/routes/registration-flow/index", ["exports", "mobile-panel/routes/restricted-access"], function(e, t) {
    var n, r = Ember.get;
    Ember.set;
    n = t["default"].extend({
        beforeFilters: ["guestOnly"],
        beforeModel: function() {
            return r(r(this, "activeUser"), "underage") ? this.transitionTo("registration-flow.underage") : this.transitionTo("registration-flow.email-address")
        }
    }), e["default"] = n
}), define("mobile-panel/routes/registration-flow/username", ["exports", "ic-ajax"], function(e, t) {
    var n, r = Ember.get,
        a = Ember.set;
    n = Ember.Route.extend({
        model: function() {
            var e;
            return e = r(this.controllerFor("registrationFlow.emailAddress"), "emailAddress"), t["default"]("/accounts/suggest_username", {
                method: "GET",
                data: {
                    email: e
                }
            }).then(function(e) {
                return r(e, "suggestion")
            })
        },
        setupController: function(e, t) {
            return a(e, "username", t), a(e, "errors", null)
        }
    }), e["default"] = n
}), define("mobile-panel/routes/restricted-access", ["exports"], function(e) {
    var t, n, r, a = Ember.get;
    Ember.set;
    t = "index", r = "registration-flow", n = Ember.Route.extend({
        beforeFilters: [],
        authenticatedOnly: function() {
            return a(a(this, "activeUser"), "isAuthenticated") ? !0 : (this.transitionTo(r), !1)
        },
        guestOnly: function() {
            return a(a(this, "activeUser"), "isGuest") ? !0 : (this.transitionTo(t), !1)
        },
        guildMemberOnly: function() {
            return a(a(this, "activeUser"), "hasGuildChat") ? !0 : (this.transitionTo(t), !1)
        },
        processBeforeFilters: function() {
            var e, t;
            e = arguments.length > 0 ? [].slice.call(arguments, 0) : [];
            for (var n = 0, r = a(this, "beforeFilters").length; r > n; ++n)
                if (t = a(this, "beforeFilters")[n], (t = this[t]) && !t.apply(this, e)) return !1;
            return !0
        },
        beforeModel: function() {
            var e;
            return e = arguments.length > 0 ? [].slice.call(arguments, 0) : [], a(this, "processBeforeFilters").apply(this, [].slice.call(e))
        }
    }), e["default"] = n
}), define("mobile-panel/routes/sleep", ["exports"], function(e) {
    var t;
    Ember.get, Ember.set;
    t = Ember.Route.extend({
        activate: function() {
            return this.send("closeModal")
        }
    }), e["default"] = t
}), define("mobile-panel/routes/topic", ["exports", "mobile-panel/mixins/pagination-route", "mobile-panel/mixins/forums-route"], function(e, t, n) {
    var r, a = Ember.get,
        l = Ember.set;
    r = Ember.Route.extend(t["default"], n["default"], {
        beforeModel: function(e) {
            return l(this, "anchor", null != a(e, "queryParams") ? a(a(e, "queryParams"), "anchor") : void 0), this._super(e)
        },
        setupController: function(e, t) {
            return this._super(e, t), Ember.run.next(function(t) {
                return function() {
                    return e.send("initializeTopic", a(t, "requestedPage"), a(t, "anchor"))
                }
            }(this))
        },
        renderTemplate: function(e, t) {
            var n;
            return n = this.controllerFor("topicToolbar"), this._super(e, t), this.render("topic-toolbar", {
                outlet: "toolbar",
                controller: n
            })
        }
    }), e["default"] = r
}), define("mobile-panel/routes/wake", ["exports", "mobile-panel/mixins/application-data"], function(e, t) {
    var n, r = Ember.get,
        a = Ember.set;
    n = Ember.Route.extend(t["default"], {
        beforeModel: function(e) {
            var t, n;
            return this.initializeApplicationData(e), t = null != r(e, "queryParams") ? r(r(e, "queryParams"), "target") : void 0, n = null != r(e, "queryParams") ? r(r(e, "queryParams"), "target_id") : void 0, t ? this.transitionTo("redirect", {
                queryParams: {
                    target: t,
                    target_id: n
                }
            }) : (r(this, "landingPageService").clearCache(), a(this.controllerFor("index"), "firstLoad", !0), this.transitionTo("index"))
        }
    }), e["default"] = n
}), define("mobile-panel/services/analytics", ["exports", "ic-ajax"], function(e, t) {
    var n, r = Ember.get;
    Ember.set;
    n = Ember.Service.extend({
        trackPageView: function(e) {
            var t, n;
            if (r(r(this, "device"), "analyticsEnabled")) {
                e = "" === e ? "/" : e, this.incrementPageviewCounter(e);
                try {
                    if (n = "/" === e ? "splash" : "", e = e.replace(/^\//, "/mobile_api/" + r(r(this, "game"), "uploadedBy") + "/" + r(r(this, "game"), "permalink") + "#" + n), r(window, "metricTracker")) return metricTracker.setCustomVariable(1, "Registered", String(r(r(this, "activeUser"), "isAuthenticated")), 2), metricTracker.setCustomVariable(2, "API Version", String(r(r(this, "device"), "apiVersion")), 2), metricTracker.trackPageView(e)
                } catch (a) {
                    return t = a, Ember.Logger.error("Error tracking pageView: " + t)
                }
            }
        },
        trackEvent: function(e, t, n) {
            return r(r(this, "device"), "analyticsEnabled") && r(window, "metricTracker") ? metricTracker.trackEvent(e, t, n) : void 0
        },
        incrementPageviewCounter: function(e) {
            var n;
            if (r(r(this, "device"), "analyticsEnabled")) return n = r(this, "routeToPageviewComponentMapper").convert(e, r(r(this, "activeUser"), "username")), t["default"]("/mobile_panel/record_mobile_panel_pageview", {
                method: "POST",
                data: {
                    component: n
                }
            })
        },
        pushSDKEvent: function(e, t, n) {
            return null == t && (t = 1), null == n && (n = "add"), r(this, "device").pushAnalyticsEvent({
                event: e,
                value: t,
                type: n
            })
        }
    }), e["default"] = n
}), define("mobile-panel/services/character-token", ["exports", "mobile-panel/models/character-token"], function(e, t) {
    var n, r, a = Ember.get,
        l = Ember.set;
    r = function(e) {
        return a(e, "expiration") < Date.now() / 1e3 + 3600
    }, n = Ember.Service.extend(Ember.Evented, {
        characterToken: null,
        updatedCharacterToken: null,
        hasValidCharacterToken: Ember.computed(function() {
            return (null != a(this, "characterToken") ? a(a(this, "characterToken"), "valid") : void 0) && (null != a(this, "characterToken") ? a(a(this, "characterToken"), "hasGuildInfo") : void 0)
        }).property("characterToken.valid", "characterToken.hasGuildInfo"),
        needsTokenRenewal: Ember.computed(function() {
            return !a(this, "updatedCharacterToken") && r(a(this, "characterToken")) || a(this, "updatedCharacterToken") && r(a(this, "updatedCharacterToken"))
        }).property()["volatile"](),
        init: function() {
            return this._super(), a(this, "device").on("character-token", this, "updateCharacterToken")
        },
        getToken: function() {
            return a(this, "needsTokenRenewal") && (Ember.Logger.debug("Token is near expiration, requesting new token"), a(this, "device").requestCharacterToken()), a(this, "hasValidCharacterToken") ? a(a(this, "characterToken"), "token") : void 0
        },
        updateCharacterToken: function(e) {
            var n, r;
            return r = a(e, "value"), Ember.Logger.info("Character token received"), r !== (null != a(this, "characterToken") ? a(a(this, "characterToken"), "token") : void 0) ? (n = t["default"].create({
                token: r
            }), a(n, "valid") ? (a(a(this, "activeUser"), "isAuthenticated") || a(n, "hasGuildInfo") || (Ember.Logger.debug("Updated character token has no guild info, resetting chat info"), a(this, "activeUser").resetChatInfo()), (null != a(this, "characterToken") ? a(this, "characterToken").equals(n) : void 0) ? (Ember.Logger.debug("Setting updated character token: " + n.toString()), l(this, "updatedCharacterToken", n)) : (Ember.Logger.debug("Setting character token: " + n.toString()), l(this, "characterToken", n), this.trigger("tokenInfoChanged"))) : void Ember.Logger.error("Invalid character token: " + n.toString())) : void 0
        },
        invalidateToken: function() {
            return l(this, "characterToken", a(this, "updatedCharacterToken")), l(this, "updatedCharacterToken", null), a(this, "characterToken") ? Ember.Logger.debug("Character token was invalid, using pending token") : (Ember.Logger.debug("Character token was invalid, requesting new token"), a(this, "activeUser").resetChatInfo(), a(this, "device").requestCharacterToken())
        }
    }), e["default"] = n
}), define("mobile-panel/services/chat-authentication", ["exports", "mobile-panel/support/normalize-json", "ic-ajax"], function(e, t, n) {
    var r, a = Ember.get,
        l = Ember.set;
    r = Ember.Service.extend({
        characterTokenValidationDelay: 0,
        canAuthenticate: Ember.computed(function() {
            return a(a(this, "activeUser"), "isAuthenticated") || a(a(this, "activeUser"), "characterGenerationEnabled") || a(a(this, "characterTokenService"), "hasValidCharacterToken")
        }).property("activeUser.isAuthenticated", "activeUser.characterGenerationEnabled", "characterTokenService.hasValidCharacterToken"),
        init: function() {
            return this._super(), a(this, "activeUser").on("chatInfoChanged", function(e) {
                return function() {
                    return a(a(a(a(e, "activeUser"), "chatInfo"), "authentication"), "token") ? e.scheduleAuthTokenRenewal() : e.cancelPendingAuthTokenRenewal()
                }
            }(this)), a(this, "activeUser").on("changed", function(e) {
                return function() {
                    return a(a(e, "activeUser"), "hasGuild") ? e.reauthenticate() : void 0
                }
            }(this)), a(this, "characterTokenService").on("tokenInfoChanged", function(e) {
                return function() {
                    return e.validateCharacterToken()
                }
            }(this))
        },
        authenticate: function() {
            return a(a(this, "activeUser"), "hasGuildChat") ? void 0 : a(this, "authenticationDeferred") ? a(a(this, "authenticationDeferred"), "promise") : this.reauthenticate()
        },
        reauthenticate: function(e) {
            var t;
            return null == e && (e = 1e4), Ember.Logger.debug("Chat authentication service - reauthenticating"), null != a(this, "authenticationDeferred") && a(this, "authenticationDeferred").reject(), t = Ember.RSVP.defer(), l(this, "invalidCharacterCount", 0), this.requestToken(t, e), l(this, "authenticationDeferred", t), a(t, "promise")["finally"](function(e) {
                return function() {
                    return l(e, "authenticationDeferred", null)
                }
            }(this))
        },
        requestToken: function(e, r) {
            return a(this, "canAuthenticate") ? n["default"]("/api/mobile_panel/v1/chat_info.json", {
                data: {
                    character_token: a(this, "characterTokenService").getToken()
                }
            }).then(function(n) {
                return function(r) {
                    return Ember.Logger.debug("Chat info received"), a(n, "activeUser").updateChatInfo(t["default"](r)), l(n, "characterTokenValidationDelay", 0), e.resolve()
                }
            }(this), function(t) {
                return function(n) {
                    var l, i;
                    return l = n.jqXHR, i = null != l ? a(l, "status") : void 0, Ember.Logger.debug("Chat info error, status: " + i), 403 === i ? e.reject() : 422 === i ? t.handleInvalidCharacterToken(e, r) : 424 === i ? t.handleInvalidCharacter(e, r) : Ember.run.later(t, "requestToken", e, Math.min(2 * r, 3e5), r)
                }
            }(this)) : (Ember.Logger.warn("Cannot perform chat authentication, no character token"), e.reject(), e)
        },
        scheduleAuthTokenRenewal: function() {
            var e;
            return this.cancelPendingAuthTokenRenewal(), e = 1e3 * (a(a(a(a(this, "activeUser"), "chatInfo"), "authentication"), "expiresIn") - 300), a(this, "schedulingService").schedule(this, "reauthenticate", e)
        },
        cancelPendingAuthTokenRenewal: function() {
            return a(this, "schedulingService").unschedule(this, "reauthenticate")
        },
        handleInvalidCharacterToken: function(e, t) {
            return a(a(this, "activeUser"), "characterGenerationEnabled") && (Ember.Logger.warn("Server reports that character generation is now disabled"), l(a(this, "activeUser"), "characterGenerationEnabled", !1)), l(this, "invalidCharacterCount", 0), a(this, "characterTokenService").invalidateToken(), this.requestToken(e, t)
        },
        handleInvalidCharacter: function(e, t) {
            return a(this, "invalidCharacterCount") < 2 ? (this.invalidCharacterCount += 1, Ember.Logger.debug("Character was invalid, will retry in " + t + " (attempt #" + a(this, "invalidCharacterCount") + ")"), Ember.run.later(this, "requestToken", e, t, t)) : this.handleInvalidCharacterToken(e, t)
        },
        validateCharacterToken: function(e) {
            return null == e && (e = 5e3), a(this, "pendingCharacterTokenValidation") ? void Ember.Logger.debug("Not validating character token since there is a validation pending") : (Ember.Logger.debug("Validating character token in: " + a(this, "characterTokenValidationDelay")), l(this, "pendingCharacterTokenValidation", Ember.run.later(function(e) {
                return function() {
                    return l(e, "pendingCharacterTokenValidation", null), e.reauthenticate()
                }
            }(this), a(this, "characterTokenValidationDelay"))), l(this, "characterTokenValidationDelay", Math.min(a(this, "characterTokenValidationDelay") + e, 6e4)))
        }
    }), e["default"] = r
}), define("mobile-panel/services/chat-history", ["exports", "mobile-panel/support/normalize-json", "mobile-panel/support/faye-message-transformer", "mobile-panel/config/environment", "ic-ajax"], function(e, t, n, r, a) {
    var l, i = Ember.get,
        o = Ember.set;
    l = Ember.Service.extend({
        fetch: function(e, t) {
            var n, r, a;
            return null == t && (t = {}), n = t, r = n.maxTime, a = n.minTime, this._makeRequest(e, {
                maxTime: r,
                minTime: a
            })
        },
        fetchMissingMessages: function(e, t) {
            return "pending" === (null != i(this, "missedMessagesRequest") ? i(this, "missedMessagesRequest").state() : void 0) && i(this, "missedMessagesRequest").abort(), this._makeRequest(e, {
                minTime: t,
                beforeSend: function(e) {
                    return function(t) {
                        return Ember.run(function(e) {
                            return function() {
                                return o(e, "missedMessagesRequest", t), !0
                            }
                        }(e))
                    }
                }(this),
                complete: function(e) {
                    return function(t) {
                        return Ember.run(function(e) {
                            return function() {
                                return i(e, "missedMessagesRequest") === t ? o(e, "missedMessagesRequest", null) : void 0
                            }
                        }(e))
                    }
                }(this)
            })
        },
        hasPendingMissedMessagesRequest: Ember.computed(function() {
            return null != i(this, "missedMessagesRequest")
        }).property("missedMessagesRequest"),
        _makeRequest: function(e, l) {
            var c, s, u, d, m;
            return s = l, d = s.maxTime, m = s.minTime, c = s.beforeSend, u = s.complete, e ? a["default"]("" + i(i(i(r["default"], "APP"), "chat"), "backendUrl") + "/rooms" + e + "/history.json", {
                method: "POST",
                headers: {
                    "X-KWAK-AUTH-TOKEN": i(i(i(i(this, "activeUser"), "chatInfo"), "authentication"), "token")
                },
                data: {
                    max_time: d,
                    min_time: m
                },
                beforeSend: c,
                complete: u
            }).then(function(e) {
                return o(e, "history", i(e, "history").map(function(e) {
                    return n["default"](e)
                })), t["default"](i(e, "history"))
            }) : i(Ember.RSVP, "Promise").reject({
                error: "invalid_params"
            })
        }
    }), e["default"] = l
}), define("mobile-panel/services/chat-profile", ["exports", "mobile-panel/support/normalize-json", "ic-ajax"], function(e, t, n) {
    var r;
    Ember.get, Ember.set;
    r = Ember.Service.extend({
        fetch: function(e) {
            return n["default"]("/mobile_panel/profile/" + e + "/mini").then(function(e) {
                return t["default"](e)
            })
        }
    }), e["default"] = r
}), define("mobile-panel/services/chat", ["exports", "ic-ajax"], function(e, t) {
    var n, r = Ember.get,
        a = Ember.set;
    n = Ember.Service.extend(Ember.Evented, {
        messages: null,
        unviewedMessages: 0,
        totalMessageLimit: 200,
        rateLimited: !1,
        rateLimitWindow: 2e4,
        guildMotdService: Ember.inject.service("guild-motd"),
        isConnected: Ember.computed(function() {
            return r(r(this, "fayeService"), "isConnected")
        }).property("fayeService.isConnected"),
        atMessageLimit: Ember.computed(function() {
            return r(r(this, "messages"), "length") >= r(this, "totalMessageLimit")
        }).property("messages.length", "totalMessageLimit"),
        init: function() {
            return this._super(), this.clearMessages(), r(this, "activeUser").on("chatGuildChanged", function(e) {
                return function() {
                    return Ember.Logger.info("chatGuildChanged"), r(e, "fayeService").renew(), e.clearMessages(), e.forceReconnect()
                }
            }(this)), r(this, "activeUser").on("chatSizeChanged", function(e) {
                return function() {
                    return e.updateChatSize(r(r(e, "activeUser"), "chatInfoChatSize"))
                }
            }(this)), r(this, "fayeService").on("message", this, r(this, "handleNewMessage")), r(this, "fayeService").on("reconnect", this, r(this, "requestMissedMessages")), r(this, "fayeService").on("reauthenticate", function(e) {
                return function() {
                    return r(e, "chatAuthenticationService").reauthenticate().then(function(e) {
                        return function() {
                            return e.forceReconnect()
                        }
                    }(e))
                }
            }(this))
        },
        clearMessages: function() {
            return a(this, "messages", []), a(this, "pendingMessages", []), a(this, "queuedMessages", [])
        },
        blockMessage: function(e) {
            return r(this, "muteService").isMuted(r(e, "kuid"))
        },
        handleNewMessage: function(e) {
            return "motd" === r(e, "type") && (r(this, "guildMotdService").updateTimestamp(1e3 * r(e, "timestamp")), this.trigger("motd")), r(r(this, "chatHistoryService"), "hasPendingMissedMessagesRequest") ? r(this, "queuedMessages").pushObject(e) : (this.addMessage(e), this.trackLastMessage())
        },
        addMessage: function(e, t) {
            var n, a, l, i;
            return null == t && (t = {}), n = t, i = n.silent, l = n.prepend, this.blockMessage(e) || r(this, "messages").isAny("uuid", r(e, "uuid")) || (r(e, "kuid") === r(r(this, "activeUser"), "kuid") && (a = r(this, "pendingMessages").findBy("guid", r(e, "guid")), null != a && this.removePendingMessage(a)), l ? r(this, "messages").unshiftObject(e) : r(this, "messages").pushObject(e), i || this.trigger("message", e), this.maintainMessageLimit(), r(this, "atMessageLimit") && l) ? void 0 : this.trackMessagesReceived(1)
        },
        maintainMessageLimit: function() {
            return r(r(this, "messages"), "length") > r(this, "totalMessageLimit") ? r(this, "messages").shiftObject() : void 0
        },
        joinGuildChat: function() {
            return r(r(this, "activeUser"), "hasGuildChat") ? r(this, "fayeService").subscribe(r(this, "guildRoom")).then(function(e) {
                return function() {
                    return e.trigger("joinedGuildChat")
                }
            }(this)) : void 0
        },
        forceReconnect: function() {
            return r(this, "fayeService").disconnect(), this.joinGuildChat()
        },
        guildRoom: Ember.computed(function() {
            return r(r(this, "activeUser"), "hasGuildChat") ? "/guilds/" + r(r(r(r(this, "activeUser"), "chatInfo"), "authentication"), "guildId") + "/rooms/1" : void 0
        }).property("activeUser.hasGuildChat", "activeUser.chatInfo.authentication.guildId"),
        sendMessageToFaye: function(e) {
            var t, n, l;
            return t = r(this, "fayeService").publish(r(this, "guildRoom"), {
                text: r(e, "text")
            }), n = t.guid, l = t.promise, a(e, "guid", n), l["catch"](function(t) {
                return function(n) {
                    return n && r(n, "rateLimited") ? (a(e, "rateLimited", !0), t.activateRateLimiting(), t.trigger("rateLimited")) : a(e, "error", !0)
                }
            }(this))
        },
        publishGuildMessage: function(e) {
            var t;
            if (r(r(this, "activeUser"), "hasGuildChat")) return r(this, "analyticsService").pushSDKEvent("guild_chat_messages_post_count"), t = {
                text: e,
                characterName: r(r(r(r(this, "activeUser"), "chatInfo"), "authentication"), "characterName"),
                pending: !0,
                kuid: r(r(this, "activeUser"), "kuid")
            }, r(r(this, "activeUser"), "isAuthenticated") && (a(t, "userId", r(r(this, "activeUser"), "id")), a(t, "username", r(r(this, "activeUser"), "username")), a(t, "level", r(r(this, "activeUser"), "level"))), r(this, "pendingMessages").pushObject(t), this.trigger("message"), e.match(/^\/(w|msg)(\s|$)/) ? (a(t, "unsupportedPrivateMessage", !0), Ember.RSVP.reject(t)) : this.sendMessageToFaye(t)
        },
        retryGuildMessage: function(e) {
            return r(r(this, "activeUser"), "hasGuildChat") ? (a(e, "error", !1), a(e, "rateLimited", !1), this.sendMessageToFaye(e)) : void 0
        },
        removePendingMessage: function(e) {
            return r(this, "pendingMessages").removeObject(e)
        },
        fetchHistory: function() {
            var e;
            return e = r(this, "guildRoom"), r(this, "chatHistoryService").fetch(e, {
                maxTime: r(this, "firstMessageTimestamp")
            }).then(function(t) {
                return function(n) {
                    return r(t, "guildRoom") === e && r(n, "length") > 0 ? (n.reverse().forEach(function(e) {
                        return function(t) {
                            return e.addMessage(t, {
                                silent: !0,
                                prepend: !0
                            })
                        }
                    }(t)), t.trackLastMessage()) : void 0
                }
            }(this))
        },
        trackLastMessage: function() {
            return r(r(this, "activeUser"), "hasGuildChat") && r(r(this, "messages"), "lastObject") ? r(this, "messageTrackingService").trackMessage(r(this, "guildRoom"), r(r(this, "messages"), "lastObject")) : void 0
        },
        trackMessagesReceived: function(e) {
            return null == e && (e = 1), this.unviewedMessages += e
        },
        messagesViewed: function() {
            return this.trackLastMessage(), r(this, "analyticsService").pushSDKEvent("guild_chat_messages_view_count", r(this, "unviewedMessages")), a(this, "unviewedMessages", 0)
        },
        firstMessageTimestamp: Ember.computed(function() {
            return null != r(r(this, "messages"), "firstObject") ? r(r(r(this, "messages"), "firstObject"), "timestamp") : void 0
        }).property("messages.firstObject.timestamp"),
        lastMessageTimestamp: Ember.computed(function() {
            return null != r(r(this, "messages"), "lastObject") ? r(r(r(this, "messages"), "lastObject"), "timestamp") : void 0
        }).property("messages.lastObject.timestamp"),
        announcePresence: function() {
            return r(this, "fayeService").setPresence({
                room: r(this, "guildRoom"),
                present: !0
            })
        },
        stopAnnouncingPresence: function() {
            return r(this, "fayeService").setPresence({
                room: r(this, "guildRoom"),
                present: !1
            })
        },
        activateRateLimiting: function() {
            return a(this, "rateLimited", !0), r(this, "schedulingService").schedule(this, "deactivateRateLimiting", r(this, "rateLimitWindow"))
        },
        deactivateRateLimiting: function() {
            return a(this, "rateLimited", !1)
        },
        requestMissedMessages: function() {
            var e;
            return e = r(this, "guildRoom"), r(this, "queuedMessages").clear(), r(this, "chatHistoryService").fetchMissingMessages(e, r(this, "lastMessageTimestamp")).then(function(t) {
                return function(n) {
                    return r(t, "guildRoom") === e ? (r(n, "length") >= 20 && r(t, "messages").clear(), n.forEach(r(t, "addMessage"), t), r(t, "queuedMessages").forEach(r(t, "addMessage"), t), t.trackLastMessage()) : void 0
                }
            }(this))
        },
        updateChatSize: function(e) {
            return t["default"]("/mobile_panel/character/" + (null != r(r(this, "activeUser"), "chatInfo") && null != r(r(r(this, "activeUser"), "chatInfo"), "authentication") ? r(r(r(r(this, "activeUser"), "chatInfo"), "authentication"), "characterIdentifier") : void 0) + "/chat_size", {
                method: "POST",
                data: {
                    chat_size: e
                }
            }), this.trigger("refresh")
        }
    }), e["default"] = n
}), define("mobile-panel/services/date-formatting", ["exports"], function(e) {
    var t, n, r, a, l = Ember.get,
        i = Ember.set;
    a = function(e, t, n) {
        var l, i, o;
        return (i = t.lookupFactory("locale:" + e + "/config")) && n(i), (l = t.lookupFactory("ember-i18n@config:" + e)) && n(l), (o = r(e)) ? a(o, t, n) : void 0
    }, r = function(e) {
        var t;
        return (t = e.lastIndexOf("-")) > 0 ? e.substr(0, t) : void 0
    }, n = function(e, t) {
        try {
            return "[object Date]" !== l(l(Object, "prototype"), "toString").call(e) && (e = new Date(e)), e.format(t)
        } catch (n) {
            return ""
        }
    }, t = Ember.Service.extend({
        i18n: Ember.inject.service(),
        locale: Ember.computed.oneWay("i18n.locale"),
        setDateFormatI18nConfig: Ember.observer(function() {
            return window.origI18n || (window.origI18n = l(l(window, "dateFormat"), "i18n")), i(l(window, "dateFormat"), "i18n", {
                dayNames: l(l(window, "origI18n"), "dayNames"),
                monthNames: l(l(window, "origI18n"), "monthNames").map(function(e) {
                    return function(t, n) {
                        var r;
                        return r = 12 > n ? "months.abbr." : "months.", l(e, "i18n").t("" + r + t.toLowerCase())
                    }
                }(this))
            })
        }.on("init"), "i18n.locale"),
        config: Ember.computed(function() {
            var e;
            return e = null, a(l(this, "locale"), l(this, "container"), function(t) {
                return e ? void 0 : e = t
            }), e
        }).property("locale", "container"),
        mediumDateFormat: Ember.computed(function() {
            return (null != l(this, "config") ? l(l(this, "config"), "mediumDateFormat") : void 0) || "mmm. d, yyyy"
        }).property("config.mediumDateFormat"),
        mediumFormatDate: function(e) {
            return n(e, l(this, "mediumDateFormat"))
        },
        mediumDateTimeFormat: Ember.computed(function() {
            return (null != l(this, "config") ? l(l(this, "config"), "mediumDateTimeFormat") : void 0) || "mmm. d, yyyy hh:MMtt"
        }).property("config.mediumDateTimeFormat"),
        mediumFormatDateTime: function(e) {
            return n(e, l(this, "mediumDateTimeFormat"))
        }
    }), e["default"] = t
}), define("mobile-panel/services/faye", ["exports", "mobile-panel/support/normalize-json", "mobile-panel/support/faye-scheduler", "mobile-panel/support/faye-message-transformer", "mobile-panel/config/environment"], function(e, t, n, r, a) {
    var l, i, o = Ember.get,
        c = Ember.set;
    l = Ember.testing ? 0 : 2e4, i = Ember.Service.extend(Ember.Evented, {
        newConnection: null,
        init: function() {
            return this.renew()
        },
        reauthenticateBackOffPeriod: 500,
        _errorDetectionExtension: function(e, t) {
            var n;
            return null != o(e, "error") ? (n = o(Faye, "Error").parse(o(e, "error")), 403 === o(n, "code") && (delete e.advice, Ember.run.later(function(e) {
                return function() {
                    return e.disconnect(), e.trigger("reauthenticate")
                }
            }(this), Math.min(o(this, "reauthenticateBackOffPeriod"), 3e5)), c(this, "reauthenticateBackOffPeriod", 2 * o(this, "reauthenticateBackOffPeriod")))) : c(this, "reauthenticateBackOffPeriod", 500), t(e)
        },
        _outgoingExtension: function(e, t) {
            return e.ext || (e.ext = {}), c(o(e, "ext"), "auth_token", o(o(o(o(this, "activeUser"), "chatInfo"), "authentication"), "token")), "/meta/connect" === o(e, "channel") && o(this, "activeRoom") && c(o(e, "ext"), "active_room", o(this, "activeRoom")), t(e)
        },
        _roomHistoryExtension: function(e, n) {
            var a, l;
            if ("/meta/subscribe" === o(e, "channel") && o(e, "successful") && (a = o(e, "ext"), null != a ? o(a, "history") : void 0))
                for (var i = 0, c = o(a, "history").length; c > i; ++i) l = o(a, "history")[i], l = r["default"](l), l = t["default"](l), this.trigger("message", l);
            return n(e)
        },
        connect: function() {
            return this.destroyClient(), c(this, "client", new(o(Faye, "Client"))("" + o(o(o(a["default"], "APP"), "chat"), "serviceUrl") + "/faye", {
                scheduler: n["default"](this)
            })), c(this, "connectionMonitor", new FayeConnectionMonitor({
                client: o(this, "client"),
                timeout: l
            })), o(this, "client").addExtension({
                incoming: Ember.run.bind(this, o(this, "_errorDetectionExtension")),
                outgoing: Ember.run.bind(this, o(this, "_outgoingExtension"))
            }), o(this, "client").addExtension({
                incoming: Ember.run.bind(this, o(this, "_roomHistoryExtension"))
            }), o(this, "connectionMonitor").on("disconnect", function(e) {
                return function() {
                    return Ember.run(function(e) {
                        return function() {
                            return Ember.Logger.warn("Disconnected from chat"), c(e, "isConnected", !1)
                        }
                    }(e))
                }
            }(this)), o(this, "connectionMonitor").on("connect", function(e) {
                return function() {
                    return Ember.run(function(e) {
                        return function() {
                            return Ember.Logger.info("Connected to chat"), c(e, "isConnected", !0), o(e, "newConnection") ? c(e, "newConnection", !1) : e.trigger("reconnect")
                        }
                    }(e))
                }
            }(this))
        },
        renew: function() {
            return c(this, "newConnection", !0)
        },
        disconnect: function() {
            return this.destroyClient(), c(this, "isConnected", !1)
        },
        destroyClient: function() {
            return o(this, "client") ? (o(this, "connectionMonitor").destroy(), c(o(this, "client"), "_state", o(o(this, "client"), "DISCONNECTED")), o(o(this, "client"), "_dispatcher").close(), c(this, "client", null), c(this, "connectionMonitor", null)) : void 0
        },
        subscribe: function(e) {
            return null == o(this, "client") && this.connect(), new(o(Ember.RSVP, "Promise"))(function(n) {
                return function(a, l) {
                    return o(n, "client").subscribe(e, function(e) {
                        return function(n) {
                            return n = r["default"](n), n = t["default"](n), Ember.run(e, "trigger", "message", n)
                        }
                    }(n)).then(Ember.run.bind(null, a), Ember.run.bind(null, l))
                }
            }(this))
        },
        abort: function(e) {
            var t;
            if (o(o(e, "data"), "guid")) return t = o(this, "deferreds")[o(o(e, "data"), "guid")], t ? t.reject("abort") : void 0
        },
        publish: function(e, t) {
            var n;
            return n = Ember.RSVP.defer(), c(t, "guid", Date.now()), this.deferreds || (this.deferreds = {}), o(this, "deferreds")[o(t, "guid")] = n, o(this, "client").publish(e, t, {
                deadline: l / 1e3
            }).then(Ember.run.bind(n, "resolve"), function(e) {
                return Ember.run(function() {
                    return n.reject({
                        rateLimited: 429 === o(e, "code")
                    })
                })
            }), {
                guid: o(t, "guid"),
                promise: o(n, "promise")["finally"](function(e) {
                    return function() {
                        return delete o(e, "deferreds")[o(t, "guid")]
                    }
                }(this))
            }
        },
        setPresence: function(e) {
            var t, n, r;
            return t = e, r = t.room, n = t.present, n ? c(this, "activeRoom", r) : r === o(this, "activeRoom") ? c(this, "activeRoom", null) : void 0
        }
    }), e["default"] = i
}), define("mobile-panel/services/forum-view-tracking", ["exports"], function(e) {
    var t, n, r, a = Ember.get,
        l = Ember.set;
    t = function(e) {
        var t;
        return t = (null != a(e, "parentForum") ? a(a(e, "parentForum"), "id") : void 0) || a(e, "id"), "kongregateMobileAPI_f" + t + "_lastForumView"
    }, n = function(e) {
        var t;
        return t = new Date, t.setDate(t.getDate() - e), t
    }, r = Ember.Service.extend({
        init: function() {
            return l(this, "_initialForumLastViewedAtDates", {}), l(this, "_forumLastViewedAtDates", {}), l(this, "_topicLastViewedAtDates", {})
        },
        trackForumView: function(e) {
            var t;
            if (this._isTrackableForum(e)) return t = new Date, a(this, "_forumLastViewedAtDates")[a(e, "id")] = t, this._writeForumCookie(e, t.getTime())
        },
        forumLastViewedAt: function(e) {
            return this._isGuildForum(e) ? a(this, "_forumLastViewedAtDates")[a(e, "id")] || (a(this, "_forumLastViewedAtDates")[a(e, "id")] = this._initialForumLastViewedAt(e)) : void 0
        },
        hasRecentForumActivity: function(e) {
            var t;
            return t = this.forumLastViewedAt(e), null != t && a(e, "latestPostAt") > t
        },
        trackTopicView: function(e) {
            var t;
            return a(this, "analyticsService").pushSDKEvent("forum_threads_viewed"), t = this.topicLastViewedAt(a(e, "topic")), null != t && a(e, "postedAt") > t ? a(this, "_topicLastViewedAtDates")[a(a(e, "topic"), "id")] = a(e, "postedAt") : void 0
        },
        topicLastViewedAt: function(e) {
            return this._isGuildForum(a(e, "forum")) ? a(this, "_topicLastViewedAtDates")[a(e, "id")] || (a(this, "_topicLastViewedAtDates")[a(e, "id")] = this._initialForumLastViewedAt(a(e, "forum"))) : void 0
        },
        hasRecentTopicActivity: function(e) {
            var t;
            return t = this.topicLastViewedAt(e), null != t && a(e, "latestPostAt") > t
        },
        isNewPost: function(e) {
            var t;
            return t = this.topicLastViewedAt(a(e, "topic")), null != t && a(e, "postedAt") > t
        },
        _isTrackableForum: function(e) {
            return this._isGameForum(e) || this._isGuildForum(e)
        },
        _isGameForum: function(e) {
            var t;
            return null == a(a(this, "game"), "gameForumId") ? !1 : (t = [a(e, "id"), null != a(e, "parentForum") ? a(a(e, "parentForum"), "id") : void 0].compact().map(function(e) {
                return parseInt(e)
            }), t.contains(a(a(this, "game"), "gameForumId")))
        },
        _isGuildForum: function(e) {
            return (null != a(a(this, "activeUser"), "guild") ? a(a(a(this, "activeUser"), "guild"), "forumId") : void 0) === parseInt(a(e, "id"))
        },
        _initialForumLastViewedAt: function(e) {
            return a(this, "_initialForumLastViewedAtDates")[e] || (a(this, "_initialForumLastViewedAtDates")[e] = this._readForumCookie(e))
        },
        _writeForumCookie: function(e, n) {
            return this._initialForumLastViewedAt(e), $.cookie(t(e), n)
        },
        _readForumCookie: function(e) {
            var r;
            return r = parseInt($.cookie(t(e))), isNaN(r) ? n(7) : new Date(parseInt($.cookie(t(e))))
        }
    }), e["default"] = r
}), define("mobile-panel/services/friend", ["exports", "ic-ajax"], function(e, t) {
    var n;
    Ember.get, Ember.set;
    n = Ember.Service.extend({
        befriend: function(e) {
            return t["default"]("/mobile_panel/profile/" + e + "/befriend", {
                method: "POST"
            })
        },
        unfriend: function(e) {
            return t["default"]("/mobile_panel/profile/" + e + "/unfriend", {
                method: "POST"
            })
        }
    }), e["default"] = n
}), define("mobile-panel/services/guild-motd", ["exports", "mobile-panel/support/normalize-json", "ic-ajax"], function(e, t, n) {
    var r, a = Ember.get,
        l = Ember.set;
    r = Ember.Service.extend({
        cookieName: "message-of-the-day",
        timestamp: 0,
        lastSeenAt: 0,
        init: function() {
            var e;
            return this._super(), e = this.parseCookie(), l(this, "timestamp", e.timestamp), l(this, "lastSeenAt", e.lastSeenAt)
        },
        fetch: function(e) {
            return n["default"]("/api/internal/v1/guilds/" + e + "/motd").then(function(e) {
                return function(n) {
                    var r;
                    return r = t["default"](n), null != a(r, "updatedAt") && e.updateTimestamp(a(r, "updatedAt")), r
                }
            }(this))
        },
        isUnread: Ember.computed(function() {
            return a(this, "timestamp") > a(this, "lastSeenAt")
        }).property("timestamp", "lastSeenAt"),
        updateTimestamp: function(e) {
            var t;
            return l(this, "timestamp", e), t = this.parseCookie(), l(t, "timestamp", a(this, "timestamp")), $.cookie(a(this, "cookieName"), JSON.stringify(t))
        },
        markAsRead: function() {
            var e;
            return l(this, "lastSeenAt", (new Date).getTime()), e = this.parseCookie(), l(e, "lastSeenAt", a(this, "lastSeenAt")), $.cookie(a(this, "cookieName"), JSON.stringify(e))
        },
        parseCookie: function() {
            var e;
            return e = $.cookie("message-of-the-day"), null == e && (e = JSON.stringify({
                timestamp: 0,
                lastSeenAt: 0
            }), $.cookie("message-of-the-day", e)), JSON.parse(e)
        }
    }), e["default"] = r
}), define("mobile-panel/services/i18n", ["exports", "ember-i18n/services/i18n"], function(e, t) {
    e["default"] = t["default"]
}), define("mobile-panel/services/landing-page", ["exports", "mobile-panel/support/normalize-json", "ic-ajax"], function(e, t, n) {
    var r, a = Ember.get,
        l = Ember.set;
    r = Ember.Service.extend({
        _cachedFor: null,
        _cachedData: null,
        fetch: function() {
            return a(this, "_cachedFor") === a(a(this, "activeUser"), "id") ? Ember.RSVP.resolve(a(a(this, "_cachedData"), "landingPage")) : n["default"]("/api/mobile_panel/v1/landing_page.json").then(function(e) {
                return function(n) {
                    return l(e, "_cachedFor", a(a(e, "activeUser"), "id")), l(e, "_cachedData", t["default"](n)), a(a(e, "_cachedData"), "couponInfo") && a(e, "activeUser").setProperties(a(a(e, "_cachedData"), "couponInfo")), a(a(e, "_cachedData"), "landingPage")
                }
            }(this))
        },
        clearCache: function() {
            return this.setProperties({
                _cachedFor: null,
                _cachedData: null
            })
        }
    }), e["default"] = r
}), define("mobile-panel/services/local-storage-factory", ["exports", "mobile-panel/support/local-storage-adapter"], function(e, t) {
    var n;
    Ember.get, Ember.set;
    n = Ember.Service.extend({
        adapterFor: function(e) {
            return t["default"].create({
                storageKey: e
            })
        }
    }), e["default"] = n
}), define("mobile-panel/services/location-history", ["exports"], function(e) {
    var t, n, r, a = Ember.get,
        l = Ember.set;
    t = ["/login", "/forgot_password", "/facebook/login", "/facebook/create", "/facebook/finalize", "/facebook/callback", "/facebook/matched", "/apple/callback", "/apple/finalize", "/registration_flow", "/registration_flow/email_address", "/registration_flow/password", "/registration_flow/birthdate", "/registration_flow/username", "/registration_flow/underage"], r = ["/sleep", "/wake"], n = Ember.Service.extend({
        init: function() {
            return null != this.hasSessionStorage ? this.hasSessionStorage : this.hasSessionStorage = function() {
                try {
                    return !!a(window, "sessionStorage")
                } catch (e) {
                    return !1
                }
            }.call(this), l(this, "_stack", a(this, "hasSessionStorage") ? JSON.parse(sessionStorage.locationHistory || "[]") : []), (null != a(a(this, "router"), "url") ? a(a(this, "router"), "url").match(/^\/(facebook|apple)\/callback/) : void 0) ? void 0 : this._resetStack()
        },
        stack: Ember.computed.alias("_stack").readOnly(),
        ignoreGuestOnlyUrls: Ember.computed.alias("activeUser.isAuthenticated"),
        _persistStack: function() {
            return a(this, "hasSessionStorage") ? l(sessionStorage, "locationHistory", JSON.stringify(a(this, "_stack"))) : void 0
        },
        push: function(e) {
            return a(this, "_stack").pushObject(e) > 10 && a(this, "_stack").shiftObject(), this._persistStack(), null
        },
        pop: function() {
            var e;
            return e = a(this, "_stack").popObject(), this._persistStack(), e
        },
        _recordUrl: Ember.beforeObserver("router.url", function() {
            return a(this, "goingBack") ? l(this, "goingBack", !1) : r.contains(a(a(this, "router"), "url")) ? this._resetStack() : this.push(a(a(this, "router"), "url") || "/")
        }),
        _resetStack: function() {
            return l(this, "_stack", []), this._persistStack()
        },
        goBackOrDefault: function(e) {
            for (var n;;)
                if (n = this.pop(), !(a(this, "ignoreGuestOnlyUrls") && n && t.contains(n))) break;
            return n || e ? (l(this, "goingBack", !!n), a(a(this, "router").transitionTo(n || e), "promise")["catch"](function(e) {
                return function() {
                    return l(e, "goingBack", !1)
                }
            }(this))) : void 0
        },
        canGoBack: Ember.computed(function() {
            return !!a(this, "_stack").find(function(e) {
                return function(n) {
                    return !a(e, "ignoreGuestOnlyUrls") || !t.contains(n)
                }
            }(this))
        }).property("_stack.@each", "ignoreGuestOnlyUrls")
    }), e["default"] = n
}), define("mobile-panel/services/message-tracking", ["exports"], function(e) {
    var t, n = Ember.get,
        r = Ember.set;
    t = Ember.Service.extend({
        storageAdapter: null,
        chatActive: !1,
        sendPushNotifications: Ember.computed(function() {
            return !n(this, "chatActive")
        }).property("chatActive"),
        init: function() {
            return this._super(), r(this, "storageAdapter", n(this, "localStorageFactory").adapterFor("messageTracking"))
        },
        trackMessage: function(e, t) {
            var r, a, l;
            return a = "lastViewed:" + e, r = n(this, "storageAdapter").get(a), l = null != r ? r : 0, n(t, "timestamp") > l ? (n(this, "chatActive") && n(this, "storageAdapter").set(a, n(t, "timestamp")), this._pushNotificationInfo(e, t)) : void 0
        },
        _pushNotificationInfo: function(e, t) {
            return n(this, "sendPushNotifications") ? n(this, "device").pushNotificationInfo({
                count: 1,
                type: "chat",
                params: {
                    category: "guild",
                    room: e,
                    message: t
                }
            }) : void 0
        }
    }), e["default"] = t
}), define("mobile-panel/services/mute", ["exports"], function(e) {
    var t, n = Ember.get,
        r = Ember.set;
    t = Ember.Service.extend({
        storageAdapter: null,
        init: function() {
            return this._super(), r(this, "storageAdapter", n(this, "localStorageFactory").adapterFor("panelMutings"))
        },
        mute: function(e) {
            return n(this, "storageAdapter").set(e, !0)
        },
        unmute: function(e) {
            return n(this, "storageAdapter").remove(e)
        },
        isMuted: function(e) {
            return null != n(this, "storageAdapter").get(e)
        }
    }), e["default"] = t
}), define("mobile-panel/services/preference-storage", ["exports"], function(e) {
    var t, n = Ember.get,
        r = Ember.set;
    t = Ember.Service.extend({
        storageAdapter: null,
        init: function() {
            return this._super(), r(this, "storageAdapter", n(this, "localStorageFactory").adapterFor("activeUserPreferences"))
        },
        get: function(e) {
            return n(this, "storageAdapter").get(e)
        },
        set: function(e, t) {
            return n(this, "storageAdapter").set(e, t)
        },
        clear: function() {
            return n(this, "storageAdapter").clear()
        }
    }), e["default"] = t
}), define("mobile-panel/services/room-list", ["exports", "mobile-panel/support/normalize-json", "mobile-panel/config/environment", "ic-ajax"], function(e, t, n, r) {
    var a, l = Ember.get;
    Ember.set;
    a = Ember.Service.extend({
        fetch: function(e) {
            return e ? r["default"]("" + l(l(l(n["default"], "APP"), "chat"), "backendUrl") + "/rooms" + e + "/characters.json", {
                method: "POST",
                headers: {
                    "X-KWAK-AUTH-TOKEN": l(l(l(l(this, "activeUser"), "chatInfo"), "authentication"), "token")
                }
            }).then(function(e) {
                return t["default"](e)
            }) : l(Ember.RSVP, "Promise").reject({
                error: "invalid_params"
            })
        },
        charactersCount: function(e) {
            return e ? r["default"]("" + l(l(l(n["default"], "APP"), "chat"), "backendUrl") + "/rooms" + e + "/characters_count.json", {
                method: "POST",
                headers: {
                    "X-KWAK-AUTH-TOKEN": l(l(l(l(this, "activeUser"), "chatInfo"), "authentication"), "token")
                }
            }).then(function(e) {
                return t["default"](e)
            }) : l(Ember.RSVP, "Promise").reject({
                error: "invalid_params"
            })
        }
    }), e["default"] = a
}), define("mobile-panel/services/route-to-pageview-component-mapper", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.Service.extend({
        gameBaseRegEx: /^\/game\/(\w*)$/,
        gameFAQRegEx: /^\/game\/faq\/(\w*)$/,
        gameScoresEx: /^\/game\/(scores)\/\w*$/,
        map_route_to_component: {
            edit_profile: "settings",
            faq: "support",
            topic: "forum"
        },
        convert: function(e, t) {
            var r, a, l;
            if ("/" === e) return "landing_page";
            try {
                e = e.replace(/\/+$/, ""), r = this.checkForProfileRoute(e, t), null === r && (l = e.match(n(this, "gameBaseRegEx")) || e.match(n(this, "gameScoresEx")) || e.match(n(this, "gameFAQRegEx")) || e.split("/"), r = n(l, "length") > 1 ? l[1] : "undefined_component"), r in n(this, "map_route_to_component") && (r = n(this, "map_route_to_component")[r])
            } catch (i) {
                a = i, Ember.Logger.error("Error incrementing pageview counter: " + a)
            }
            return r
        },
        checkForProfileRoute: function(e, t) {
            var n, r, a, l;
            return a = "^/profile/(" + t + ")$", r = /^\/profile\/(\w*)$/, l = /^\/profile\/\w*\/(\w*)$/, n = null, e.match(a) ? n = "my_profile" : e.match(r) ? n = "other_profile" : e.match(l) && (n = "profile:" + e.match(l)[1]), n
        }
    }), e["default"] = t
}), define("mobile-panel/services/scheduling", ["exports"], function(e) {
    var t, n = Ember.get,
        r = Ember.set;
    t = Ember.Service.extend({
        init: function() {
            return r(this, "timeouts", {})
        },
        schedule: function(e, t, r) {
            var a;
            return a = Date.now(), this.unschedule(e, t), n(this, "timeouts")[e + t] = setTimeout(function() {
                return Ember.run(e, t, {
                    scheduledAt: a
                })
            }, r)
        },
        unschedule: function(e, t) {
            var r;
            return r = e + t, n(this, "timeouts")[r] ? (clearTimeout(n(this, "timeouts")[r]), delete n(this, "timeouts")[r]) : void 0
        },
        shutdown: function() {
            return Ember.keys(n(this, "timeouts")).forEach(function(e) {
                return function(t) {
                    return clearTimeout(n(e, "timeouts")[t])
                }
            }(this)), r(this, "timeouts", {})
        }
    }), e["default"] = t
}), define("mobile-panel/support/clone-object", ["exports"], function(e) {
    var t, n, r, a, l = Ember.get,
        i = Ember.set;
    a = function(e) {
        var t;
        return t = function() {
            return i(t, "prototype", e), new t
        }
    }, r = l(Object, "create") || a, n = function(e, t) {
        var a, i, o, c, s, a;
        if (null === e || "object" != typeof e) return e;
        if (void 0 === t) t = [];
        else
            for (a = void 0, o = l(t, "length"), a = 0; o > a;) {
                if (e === t[a]) return e;
                a++
            }
        if (t.push(e), "function" == typeof l(e, "clone")) return e.clone(!0);
        if ("[object Array]" === Object.prototype.toString.call(e)) {
            for (s = e.slice(), a = l(s, "length"); a--;) s[a] = n(s[a], t);
            return s
        }
        if (e instanceof Date) return new Date(e.getTime());
        if (e instanceof RegExp) return new RegExp(e);
        if (l(e, "nodeType") && "function" == typeof l(e, "cloneNode")) return e.cloneNode(!0);
        c = l(Object, "getPrototypeOf") ? Object.getPrototypeOf(e) : l(e, "__proto__"), c || (c = l(l(e, "constructor"), "prototype")), s = r(c);
        for (i in e) s[i] = n(e[i], t);
        return s
    }, t = n, e["default"] = t
}), define("mobile-panel/support/describe-errors", ["exports"], function(e) {
    function t(e, t) {
        return {}.hasOwnProperty.call(e, t)
    }
    var n, r = Ember.get;
    Ember.set;
    n = function(e) {
        var n, a, l, i;
        if (!e || e instanceof Array) return e;
        a = [], r(e, "server") && (a.push("Server error - please try again later"), delete e.server);
        for (l in e)
            if (t(e, l) && (i = e[l], l.indexOf("_hash") <= 0)) {
                if (l = l.underscore().replace(/_/g, " "), i = i instanceof Array ? i[0] : i, !i) continue;
                "base" === l || 0 === (null != i && null != (n = i.toLowerCase()) ? n.indexOf(null != l ? l.toLowerCase() : void 0) : void 0) ? a.push(i.capitalize()) : a.push("" + l.capitalize() + " " + i)
            } return a
    }, e["default"] = n
}), define("mobile-panel/support/faye-message-transformer", ["exports"], function(e) {
    Ember.get, Ember.set;
    e["default"] = FayeMessageTransformer.transform
}), define("mobile-panel/support/faye-scheduler", ["exports"], function(e) {
    var t, n = Ember.get,
        r = Ember.set;
    t = function(e) {
        var t;
        return t = function() {
            return r(this, "service", e), FayeBackoffScheduler.apply(this, arguments)
        }, r(t, "prototype", Object.create(n(FayeBackoffScheduler, "prototype"))), r(n(t, "prototype"), "abort", function() {
            return n(n(FayeBackoffScheduler, "prototype"), "abort").apply(this, arguments), n(this, "service").abort(n(this, "message"))
        }), t
    }, e["default"] = t
}), define("mobile-panel/support/gesture-manager", ["exports"], function(e) {
    var t, n = Ember.get,
        r = Ember.set;
    t = Ember.Object.extend(Ember.Evented, {
        scrollEvents: "touchstart.gesture touchmove.gesture",
        swipeEvents: "swipeleft.gesture swiperight.gesture dragleft.gesture dragright.gesture dragup.gesture dragdown.gesture dragend.gesture",
        delta: 0,
        velocity: 0,
        amplitude: 0,
        scrollTarget: 0,
        init: function() {
            var e;
            return Ember.Logger.log("Scroll polyfill: " + n(n(this, "device"), "scrollPolyFill")), e = {
                transform: !1,
                drag: !0,
                dragLockToAxis: !0,
                dragBlockHorizontal: !0,
                dragMinDistance: 3,
                swipeVelocityX: .2
            }, r(this, "gestureEvents", n(n(this, "device"), "scrollPolyFill") ? "" + n(this, "scrollEvents") + " " + n(this, "swipeEvents") : n(this, "swipeEvents")), $(document).hammer(e).on(n(this, "gestureEvents"), function(e) {
                return function(t) {
                    return e.processGesture(t)
                }
            }(this))
        },
        processGesture: function(e) {
            return n(n(this, "device"), "scrollPolyFill") && this.processDragEvent(e), n(n(this, "device"), "iosApp") && this.disableRubberBand(e), 0 === n(e, "type").indexOf("swipe") ? this.trigger("swipe", n(n(e, "gesture"), "direction")) : void 0
        },
        willDestroy: function() {
            return $(document).hammer().off(n(this, "gestureEvents"))
        },
        processDragEvent: function(e) {
            return "touchstart" === n(e, "type") ? this.touchStart(e) : "dragend" === n(e, "type") ? this.dragEnd(e) : ("dragup" === n(e, "type") || "dragdown" === n(e, "type")) && this.drag(e), (null != n(this, "element") ? n(n(this, "element"), "length") : void 0) && "touchstart" !== n(e, "type") ? (null != n(e, "gesture") && n(e, "gesture").preventDefault(), e.preventDefault()) : void 0
        },
        touchStart: function(e) {
            return r(this, "velocity", r(this, "amplitude", r(this, "delta", 0))), r(this, "timestamp", Date.now()), r(this, "element", $(n(e, "target")).closest(".scroller")), Ember.run.cancel(n(this, "later"))
        },
        dragEnd: function(e) {
            return (null != n(this, "element") ? n(n(this, "element"), "length") : void 0) && Math.abs(n(this, "velocity")) > 10 ? (r(this, "amplitude", .8 * n(this, "velocity")), r(this, "scrollTarget", Math.round(n(this, "element").scrollTop() + n(this, "amplitude"))), r(this, "timestamp", Date.now()), r(this, "later", Ember.run.later(function(e) {
                return function() {
                    return e.autoScroll(n(e, "element"))
                }
            }(this), 10))) : void 0
        },
        drag: function(e) {
            var t, a, l;
            if (null != n(this, "element") ? n(n(this, "element"), "length") : void 0) return a = Date.now(), t = a - n(this, "timestamp"), r(this, "timestamp", a), this.delta -= n(n(e, "gesture"), "deltaY"), n(this, "element").scrollTop(n(this, "element").scrollTop() + n(this, "delta")), l = 500 * n(this, "delta") / (1 + t), r(this, "velocity", .8 * l + .2 * n(this, "velocity")), r(this, "delta", n(n(e, "gesture"), "deltaY"))
        },
        autoScroll: function(e) {
            var t, a;
            return 0 !== n(this, "amplitude") ? (a = Date.now() - n(this, "timestamp"), t = -n(this, "amplitude") * Math.exp(-a / 250), Math.abs(t) > .5 ? (e.scrollTop(n(this, "scrollTarget") + t), r(this, "later", Ember.run.later(function(t) {
                return function() {
                    return t.autoScroll(e)
                }
            }(this), 10))) : e.scrollTop(n(this, "scrollTarget"))) : void 0
        },
        disableRubberBand: function(e) {
            var t, r;
            return r = $(n(n(e, "gesture"), "target")).closest(".scroller"), n(r, "length") || (r = $("body")), t = r[0] === n(document, "body") ? $(window).height() : $(r).height(), "dragdown" === n(e, "type") && r.scrollTop() <= 1 ? n(e, "gesture").preventDefault() : "dragup" === n(e, "type") && r.scrollTop() >= r.prop("scrollHeight") - t ? n(e, "gesture").preventDefault() : void 0
        }
    }), e["default"] = t
}), define("mobile-panel/support/kong-link", ["exports"], function(e) {
    var t, n, r, a, l, i, o, c = Ember.get,
        s = Ember.set;
    i = /^\/forums\/[0-9]+(-.+)?\/topics\/[0-9]+.*/, o = "Topic", t = /^\/forums\/[0-9]+(-.+)?/, n = "Forum", a = /^\/pages\//, l = "Pages", r = Ember.Object.extend({
        url: null,
        appUrl: c(window, "location"),
        validTopicLink: Ember.computed(function() {
            return null != c(this, "forumId") && null != c(this, "topicId") && c(this, "type") === o
        }).property("forumId", "topicId", "type"),
        validForumLink: Ember.computed(function() {
            return null != c(this, "forumId") && c(this, "type") === n
        }).property("forumId", "type"),
        validPagesLink: Ember.computed(function() {
            return null != c(this, "pagePermalink") && c(this, "type") === l
        }).property("pagePermalink", "type"),
        forceExternal: Ember.computed(function() {
            return c(this, "$url").attr("query").split("&").contains("external-link=true")
        }).property("$url.@each"),
        $url: Ember.computed(function() {
            return $.url(c(this, "url"))
        }).property("url"),
        $appUrl: Ember.computed(function() {
            return $.url(c(this, "appUrl"))
        }).property("appUrl"),
        type: null,
        bypassModal: !1,
        sameDomain: Ember.computed(function() {
            var e, t;
            return c(this, "$url").attr("host") ? (e = c(this, "$appUrl").attr("host").split(".").slice(-2).join("."), t = c(this, "$url").attr("host").split(".").slice(-2).join("."), e === t) : !0
        }).property("$url", "$appUrl"),
        init: function() {
            var e;
            try {
                if (i.test(c(this, "$url").attr("path"))) return s(this, "forumId", parseInt(c(this, "$url").segment(2).split("-")[0], 10)), s(this, "topicId", parseInt(c(this, "$url").segment(-1).split("-")[0], 10)), s(this, "page", parseInt(c(this, "$url").param("page") || "1", 10)), s(this, "type", o);
                if (t.test(c(this, "$url").attr("path"))) return s(this, "forumId", parseInt(c(this, "$url").segment(2).split("-")[0], 10)), s(this, "page", parseInt(c(this, "$url").param("page") || "1", 10)), s(this, "type", n);
                if (a.test(c(this, "$url").attr("path"))) return s(this, "pagePermalink", c(this, "$url").segment(2)), s(this, "type", l)
            } catch (r) {
                return e = r, Ember.Logger.warn("Error parsing kong link: " + e + ", url was: " + c(this, "url"))
            }
        },
        follow: function(e) {
            return Ember.Logger.info("Following kong link - " + this.toString()),
                c(this, "forceExternal") ? e.send("externalLink", c(this, "url"), c(this, "bypassModal")) : c(this, "validTopicLink") ? c(c(e, "game"), "viewableForumIds").contains(c(this, "forumId")) && c(this, "sameDomain") ? c(c(e, "target"), "url") === "/topic/" + c(this, "topicId") ? e.send("loadPage", c(this, "page")) : e.transitionToRoute("topic", c(this, "topicId"), {
                    queryParams: {
                        page: c(this, "page")
                    }
                }) : MobilePanel.isProduction() ? e.send("externalLink", c(this, "url")) : c(e.displayModal({
                    title: "Topic link",
                    message: this.toString(),
                    confirm: "View",
                    cancel: "Close"
                }), "promise").then(function(t) {
                    return function() {
                        return e.send("externalLink", c(t, "url"))
                    }
                }(this)) : c(this, "validForumLink") ? c(c(e, "game"), "viewableForumIds").contains(c(this, "forumId")) && c(this, "sameDomain") ? c(c(e, "target"), "url") === "/forum/" + c(this, "forumId") ? e.send("loadPage", c(this, "page")) : e.transitionToRoute("forum", c(this, "forumId"), {
                    queryParams: {
                        page: c(this, "page")
                    }
                }) : MobilePanel.isProduction() ? e.send("externalLink", c(this, "url"), c(this, "bypassModal")) : c(e.displayModal({
                    title: "Forum link",
                    message: this.toString(),
                    confirm: "View",
                    cancel: "Close"
                }), "promise").then(function(t) {
                    return function() {
                        return e.send("externalLink", c(t, "url"), c(t, "bypassModal"))
                    }
                }(this)) : c(this, "validPagesLink") ? e.transitionToRoute("pages", c(this, "pagePermalink")) : e.send("externalLink", c(this, "url"), c(this, "bypassModal"))
        },
        toString: function() {
            switch (c(this, "type")) {
                case o:
                    return "KongLink Type: " + c(this, "type") + " - Valid: " + c(this, "validForumLink") + ", ForumID: " + c(this, "forumId") + ", TopicID: " + c(this, "topicId") + ", Page: " + c(this, "page") + ", URL: " + c(this, "url") + ", Same Domain: " + c(this, "sameDomain");
                case n:
                    return "KongLink Type: " + c(this, "type") + " - Valid: " + c(this, "validForumLink") + ", ForumID: " + c(this, "forumId") + ", Page: " + c(this, "page") + ", URL: " + c(this, "url") + ", Same Domain: " + c(this, "sameDomain");
                case l:
                    return "KongLink Type: " + c(this, "type") + " - Valid: " + c(this, "validPageLink") + ", Permalink: " + c(this, "pagePermalink") + ", URL: " + c(this, "url") + ", Same Domain: " + c(this, "sameDomain")
            }
        }
    }), e["default"] = r
}), define("mobile-panel/support/loading-spinner", ["exports"], function(e) {
    var t, n = Ember.get,
        r = Ember.set;
    t = Ember.Object.extend({
        selector: ".ember-application",
        spinner: $(".spinner"),
        onLoadingChange: Ember.observer(function(e) {
            return n(n(this, "controller"), "loading") ? this.start() : this.stop()
        }, "controller.loading"),
        init: function() {
            return this.start()
        },
        start: function() {
            return $(function(e) {
                return function() {
                    return (null != n(e, "spinner") ? n(n(e, "spinner"), "length") : void 0) ? void 0 : (r(e, "spinner", $('<div class="spinner"></div>')), $(n(e, "selector")).append(n(e, "spinner")), $("form .btn").attr("disabled", "disabled"), $("input[type=submit]").attr("disabled", "disabled"))
                }
            }(this))
        },
        stop: function() {
            return n(this, "spinner") ? (n(this, "spinner").remove(), r(this, "spinner", null), $("form .btn").removeAttr("disabled"), $("input[type=submit]").removeAttr("disabled")) : void 0
        }
    }), e["default"] = t
}), define("mobile-panel/support/local-storage-adapter", ["exports"], function(e) {
    var t, n = Ember.get,
        r = Ember.set;
    t = Ember.Object.extend({
        storageKey: "kongregate",
        _internalStorage: {},
        _localStorageAvailable: Ember.computed(function() {
            var e, t;
            e = !0;
            try {
                localStorage.getItem("test")
            } catch (n) {
                t = n, e = !1
            }
            return e
        }).property(),
        _getStoredValues: function() {
            return n(this, "_localStorageAvailable") ? JSON.parse(localStorage.getItem(n(this, "storageKey"))) : n(this, "_internalStorage")
        },
        _storeValues: function(e) {
            return n(this, "_localStorageAvailable") ? localStorage.setItem(n(this, "storageKey"), JSON.stringify(e)) : r(this, "_internalStorage", e)
        },
        init: function() {
            return this._super(), n(this, "_localStorageAvailable") && Ember.isEmpty(localStorage.getItem(n(this, "storageKey"))) ? localStorage.setItem(n(this, "storageKey"), JSON.stringify({})) : void 0
        },
        set: function(e, t) {
            var n;
            return n = this._getStoredValues(), n[e] = t, this._storeValues(n)
        },
        get: function(e) {
            return this._getStoredValues()[e]
        },
        remove: function(e) {
            var t;
            return t = this._getStoredValues(), delete t[e], this._storeValues(t)
        },
        clear: function() {
            return n(this, "_localStorageAvailable") ? localStorage.setItem(n(this, "storageKey"), JSON.stringify({})) : r(this, "_internalStorage", {})
        }
    }), e["default"] = t
}), define("mobile-panel/support/logger", ["exports"], function(e) {
    var t, n, r = Ember.get;
    Ember.set;
    t = function() {
        return r(Ember.Logger, "device")
    }, n = Ember.Object.extend({
        debug: function() {
            var e, n;
            return e = arguments.length > 0 ? [].slice.call(arguments, 0) : [], r(console, "debug").apply(console, [].slice.call(e)), r(n = t(), "sendLog").apply(n, [].slice.call(e))
        },
        log: function() {
            var e, n;
            return e = arguments.length > 0 ? [].slice.call(arguments, 0) : [], r(console, "log").apply(console, [].slice.call(e)), r(n = t(), "sendLog").apply(n, [].slice.call(e))
        },
        info: function() {
            var e, n;
            return e = arguments.length > 0 ? [].slice.call(arguments, 0) : [], r(console, "info").apply(console, [].slice.call(e)), r(n = t(), "sendLog").apply(n, [].slice.call(e))
        },
        warn: function() {
            var e, n;
            return e = arguments.length > 0 ? [].slice.call(arguments, 0) : [], r(console, "warn").apply(console, [].slice.call(e)), r(n = t(), "sendLog").apply(n, [].slice.call(e))
        },
        error: function() {
            var e, n;
            return e = arguments.length > 0 ? [].slice.call(arguments, 0) : [], r(console, "error").apply(console, [].slice.call(e)), r(n = t(), "sendLog").apply(n, [].slice.call(e))
        },
        assert: function(e) {
            var n, a;
            return n = arguments.length > 1 ? [].slice.call(arguments, 1) : [], r(console, "assert").apply(console, [e].concat([].slice.call(n))), e === !1 ? r(a = t(), "sendLog").apply(a, [].slice.call(n)) : void 0
        }
    }), e["default"] = n
}), define("mobile-panel/support/normalize-json", ["exports"], function(e) {
    var t;
    Ember.get, Ember.set;
    t = function(e) {
        switch (Ember.typeOf(e)) {
            case "object":
                Ember.keys(e).forEach(function(n) {
                    var r;
                    return r = n.camelize(), e[r] = t(e[n]), n !== r ? delete e[n] : void 0
                });
                break;
            case "array":
                e.forEach(function(e) {
                    return t(e)
                })
        }
        return e
    }, e["default"] = t
}), define("mobile-panel/support/resettable-object-proxy", ["exports", "mobile-panel/support/clone-object"], function(e, t) {
    var n, r = (Ember.get, Ember.set);
    n = Ember.ObjectProxy.extend({
        reset: function(e) {
            return null == e && (e = {}), r(this, "content", t["default"](e))
        }
    }), n.reopenClass({
        create: function(e) {
            return null == e && (e = {}), this._super({
                content: t["default"](e)
            })
        }
    }), e["default"] = n
}), define("mobile-panel/support/tag-generator", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = function(e, t, r) {
        var a, l, i;
        return t = n(Ember.Handlebars, "Utils").escapeExpression(t), a = function(e) {
            for (l in r) i = r[l], e.push(" " + l + '="' + i + '"');
            return e
        }.call(this, []), a = a.join(""), "<" + e + a + ">" + t + "</" + e + ">"
    }, e["default"] = t
}), define("mobile-panel/support/underscore-json", ["exports"], function(e) {
    var t;
    Ember.get, Ember.set;
    t = function(e) {
        switch (Ember.typeOf(e)) {
            case "object":
                Ember.keys(e).forEach(function(n) {
                    var r;
                    return r = n.underscore(), e[r] = t(e[n]), n !== r ? delete e[n] : void 0
                });
                break;
            case "array":
                e.forEach(function(e) {
                    return t(e)
                })
        }
        return e
    }, e["default"] = t
}), define("mobile-panel/templates/-pagination", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 1107
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("ul");
                e.setAttribute(n, "class", "paginate-thread");
                var r = e.createElement("li");
                e.setAttribute(r, "class", "first-page");
                var a = e.createElement("a");
                e.setAttribute(a, "href", "#");
                var l = e.createElement("span");
                e.setAttribute(l, "class", "ico back");
                var i = e.createTextNode("{");
                e.appendChild(l, i), e.appendChild(a, l);
                var l = e.createElement("span");
                e.setAttribute(l, "class", "txt");
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createElement("li");
                e.setAttribute(r, "class", "prev-page");
                var a = e.createElement("a");
                e.setAttribute(a, "href", "#");
                var l = e.createElement("span");
                e.setAttribute(l, "class", "ico back");
                var i = e.createTextNode("<");
                e.appendChild(l, i), e.appendChild(a, l);
                var l = e.createElement("span");
                e.setAttribute(l, "class", "txt");
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createElement("li");
                e.setAttribute(r, "class", "cur-page");
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createElement("span"),
                    l = e.createTextNode("/ ");
                e.appendChild(a, l);
                var l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createElement("li");
                e.setAttribute(r, "class", "next-page");
                var a = e.createElement("a");
                e.setAttribute(a, "href", "#");
                var l = e.createElement("span");
                e.setAttribute(l, "class", "txt");
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l);
                var l = e.createElement("span");
                e.setAttribute(l, "class", "ico back");
                var i = e.createTextNode(">");
                e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createElement("li");
                e.setAttribute(r, "class", "last-page");
                var a = e.createElement("a");
                e.setAttribute(a, "href", "#");
                var l = e.createElement("span");
                e.setAttribute(l, "class", "txt");
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l);
                var l = e.createElement("span");
                e.setAttribute(l, "class", "ico back");
                var i = e.createTextNode("}");
                return e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = e.childAt(r, [0, 0]),
                    l = e.childAt(r, [1, 0]),
                    i = e.childAt(r, [2]),
                    o = e.childAt(r, [3, 0]),
                    c = e.childAt(r, [4, 0]),
                    s = new Array(14);
                return s[0] = e.createAttrMorph(a, "class"), s[1] = e.createElementMorph(a), s[2] = e.createMorphAt(e.childAt(a, [1]), 0, 0), s[3] = e.createAttrMorph(l, "class"), s[4] = e.createElementMorph(l), s[5] = e.createMorphAt(e.childAt(l, [1]), 0, 0), s[6] = e.createMorphAt(i, 0, 0), s[7] = e.createMorphAt(e.childAt(i, [1]), 1, 1), s[8] = e.createAttrMorph(o, "class"), s[9] = e.createElementMorph(o), s[10] = e.createMorphAt(e.childAt(o, [0]), 0, 0), s[11] = e.createAttrMorph(c, "class"), s[12] = e.createElementMorph(c), s[13] = e.createMorphAt(e.childAt(c, [0]), 0, 0), s
            },
            statements: [
                ["attribute", "class", ["concat", ["forum-btn paginate-first ", ["subexpr", "if", [
                        ["get", "hasPreviousPage", ["loc", [null, [1, 138],
                            [1, 153]
                        ]]], "", "disabled"
                    ],
                    [],
                    ["loc", [null, [1, 133],
                        [1, 169]
                    ]]
                ]]]],
                ["element", "action", ["loadFirstPage"],
                    ["on", "click"],
                    ["loc", [null, [1, 63],
                        [1, 100]
                    ]]
                ],
                ["inline", "t", ["pagination.first"],
                    [],
                    ["loc", [null, [1, 220],
                        [1, 244]
                    ]]
                ],
                ["attribute", "class", ["concat", ["forum-btn paginate-prev ", ["subexpr", "if", [
                        ["get", "hasPreviousPage", ["loc", [null, [1, 371],
                            [1, 386]
                        ]]], "", "disabled"
                    ],
                    [],
                    ["loc", [null, [1, 366],
                        [1, 402]
                    ]]
                ]]]],
                ["element", "action", ["loadPreviousPage"],
                    ["on", "click"],
                    ["loc", [null, [1, 294],
                        [1, 334]
                    ]]
                ],
                ["inline", "t", ["pagination.prev"],
                    [],
                    ["loc", [null, [1, 456],
                        [1, 479]
                    ]]
                ],
                ["inline", "input", [],
                    ["value", ["subexpr", "@mut", [
                            ["get", "paginationInput", ["loc", [null, [1, 530],
                                [1, 545]
                            ]]]
                        ],
                        [],
                        []
                    ], "focus-out", "requestPage", "type", "number", "pattern", "\\d*", "class", "paginate-cur"],
                    ["loc", [null, [1, 516],
                        [1, 620]
                    ]]
                ],
                ["content", "maxPage", ["loc", [null, [1, 628],
                    [1, 639]
                ]]],
                ["attribute", "class", ["concat", ["forum-btn paginate-next ", ["subexpr", "if", [
                        ["get", "hasNextPage", ["loc", [null, [1, 758],
                            [1, 769]
                        ]]], "", "disabled"
                    ],
                    [],
                    ["loc", [null, [1, 753],
                        [1, 785]
                    ]]
                ]]]],
                ["element", "action", ["loadNextPage"],
                    ["on", "click"],
                    ["loc", [null, [1, 685],
                        [1, 721]
                    ]]
                ],
                ["inline", "t", ["pagination.next"],
                    [],
                    ["loc", [null, [1, 805],
                        [1, 828]
                    ]]
                ],
                ["attribute", "class", ["concat", ["forum-btn paginate-last ", ["subexpr", "if", [
                        ["get", "hasNextPage", ["loc", [null, [1, 985],
                            [1, 996]
                        ]]], "", "disabled"
                    ],
                    [],
                    ["loc", [null, [1, 980],
                        [1, 1012]
                    ]]
                ]]]],
                ["element", "action", ["loadLastPage"],
                    ["on", "click"],
                    ["loc", [null, [1, 912],
                        [1, 948]
                    ]]
                ],
                ["inline", "t", ["pagination.last"],
                    [],
                    ["loc", [null, [1, 1032],
                        [1, 1055]
                    ]]
                ]
            ],
            locals: [],
            templates: []
        }
    }())
}), define("mobile-panel/templates/accomplishment-task", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 2,
                                column: 0
                            },
                            end: {
                                line: 2,
                                column: 52
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createTextNode("â€“ ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["content", "task.description", ["loc", [null, [2, 32],
                            [2, 52]
                        ]]]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 2,
                                        column: 94
                                    },
                                    end: {
                                        line: 3,
                                        column: 92
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createTextNode("You need\n");
                                e.appendChild(t, n);
                                var n = e.createElement("span");
                                e.setAttribute(n, "class", "progress_amount");
                                var r = e.createComment("");
                                e.appendChild(n, r), e.appendChild(t, n);
                                var n = e.createTextNode("Â more");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(e.childAt(t, [1]), 0, 0), r
                            },
                            statements: [
                                ["inline", "number-with-delimiter", [
                                        ["get", "view.quotaRemaining", ["loc", [null, [3, 54],
                                            [3, 73]
                                        ]]]
                                    ],
                                    [],
                                    ["loc", [null, [3, 30],
                                        [3, 75]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }(),
                    t = function() {
                        var e = function() {
                                return {
                                    meta: {
                                        revision: "Ember@1.13.12",
                                        loc: {
                                            source: null,
                                            start: {
                                                line: 3,
                                                column: 100
                                            },
                                            end: {
                                                line: 4,
                                                column: 83
                                            }
                                        }
                                    },
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function(e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createTextNode("Currently:\n");
                                        e.appendChild(t, n);
                                        var n = e.createElement("span");
                                        e.setAttribute(n, "class", "progress_amount");
                                        var r = e.createComment("");
                                        return e.appendChild(n, r), e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function(e, t, n) {
                                        var r = new Array(1);
                                        return r[0] = e.createMorphAt(e.childAt(t, [1]), 0, 0), r
                                    },
                                    statements: [
                                        ["inline", "number-with-delimiter", [
                                                ["get", "view.currentProgress", ["loc", [null, [4, 54],
                                                    [4, 74]
                                                ]]]
                                            ],
                                            [],
                                            ["loc", [null, [4, 30],
                                                [4, 76]
                                            ]]
                                        ]
                                    ],
                                    locals: [],
                                    templates: []
                                }
                            }(),
                            t = function() {
                                return {
                                    meta: {
                                        revision: "Ember@1.13.12",
                                        loc: {
                                            source: null,
                                            start: {
                                                line: 4,
                                                column: 83
                                            },
                                            end: {
                                                line: 5,
                                                column: 83
                                            }
                                        }
                                    },
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function(e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createTextNode("Best so far:\n");
                                        e.appendChild(t, n);
                                        var n = e.createElement("span");
                                        e.setAttribute(n, "class", "progress_amount");
                                        var r = e.createComment("");
                                        return e.appendChild(n, r), e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function(e, t, n) {
                                        var r = new Array(1);
                                        return r[0] = e.createMorphAt(e.childAt(t, [1]), 0, 0), r
                                    },
                                    statements: [
                                        ["inline", "number-with-delimiter", [
                                                ["get", "view.currentProgress", ["loc", [null, [5, 54],
                                                    [5, 74]
                                                ]]]
                                            ],
                                            [],
                                            ["loc", [null, [5, 30],
                                                [5, 76]
                                            ]]
                                        ]
                                    ],
                                    locals: [],
                                    templates: []
                                }
                            }();
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 3,
                                        column: 92
                                    },
                                    end: {
                                        line: 5,
                                        column: 90
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["block", "if", [
                                        ["get", "typeReplace", ["loc", [null, [3, 106],
                                            [3, 117]
                                        ]]]
                                    ],
                                    [], 0, 1, ["loc", [null, [3, 100],
                                        [5, 90]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: [e, t]
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 2,
                                column: 68
                            },
                            end: {
                                line: 5,
                                column: 97
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["block", "if", [
                                ["get", "typeAdd", ["loc", [null, [2, 100],
                                    [2, 107]
                                ]]]
                            ],
                            [], 0, 1, ["loc", [null, [2, 94],
                                [5, 97]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t]
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 5,
                        column: 108
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("span");
                e.setAttribute(n, "class", "msprite ico"), e.appendChild(t, n);
                var n = e.createElement("strong"),
                    r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [1]),
                    a = new Array(3);
                return a[0] = e.createMorphAt(r, 0, 0), a[1] = e.createMorphAt(r, 2, 2), a[2] = e.createMorphAt(t, 2, 2, n), e.insertBoundary(t, null), a
            },
            statements: [
                ["content", "task.name", ["loc", [null, [1, 41],
                    [1, 54]
                ]]],
                ["block", "if", [
                        ["get", "task.description", ["loc", [null, [2, 6],
                            [2, 22]
                        ]]]
                    ],
                    [], 0, null, ["loc", [null, [2, 0],
                        [2, 59]
                    ]]
                ],
                ["block", "unless", [
                        ["get", "view.completed", ["loc", [null, [2, 78],
                            [2, 92]
                        ]]]
                    ],
                    [], 1, null, ["loc", [null, [2, 68],
                        [5, 108]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("mobile-panel/templates/apple/finalize", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 48
                            },
                            end: {
                                line: 1,
                                column: 199
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("span");
                        e.setAttribute(n, "class", "mfb_linked_email");
                        var r = e.createElement("span");
                        e.setAttribute(r, "class", "msprite ico"), e.appendChild(n, r);
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 1, 1), r
                    },
                    statements: [
                        ["inline", "t", ["facebook.connectedWith"],
                            ["email", ["subexpr", "@mut", [
                                    ["get", "emailAddress", ["loc", [null, [1, 178],
                                        [1, 190]
                                    ]]]
                                ],
                                [],
                                []
                            ]],
                            ["loc", [null, [1, 143],
                                [1, 192]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 463
                                },
                                end: {
                                    line: 1,
                                    column: 527
                                }
                            }
                        },
                        arity: 1,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("li"),
                                r = e.createComment("");
                            return e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                        },
                        statements: [
                            ["inline", "t-error", [
                                    ["get", "error", ["loc", [null, [1, 515],
                                        [1, 520]
                                    ]]]
                                ],
                                [],
                                ["loc", [null, [1, 505],
                                    [1, 522]
                                ]]
                            ]
                        ],
                        locals: ["error"],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 333
                            },
                            end: {
                                line: 1,
                                column: 551
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "class", "error_block");
                        var r = e.createElement("p"),
                            a = e.createElement("strong"),
                            l = e.createComment("");
                        e.appendChild(a, l);
                        var l = e.createTextNode(":");
                        e.appendChild(a, l), e.appendChild(r, a);
                        var a = e.createElement("ul");
                        e.setAttribute(a, "class", "error_list");
                        var l = e.createComment("");
                        return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0, 0]),
                            a = new Array(2);
                        return a[0] = e.createMorphAt(e.childAt(r, [0]), 0, 0), a[1] = e.createMorphAt(e.childAt(r, [1]), 0, 0), a
                    },
                    statements: [
                        ["inline", "t", ["facebook.finalize.couldNotCreateAccount"],
                            [],
                            ["loc", [null, [1, 383],
                                [1, 430]
                            ]]
                        ],
                        ["block", "each", [
                                ["get", "errorDescriptions", ["loc", [null, [1, 471],
                                    [1, 488]
                                ]]]
                            ],
                            [], 0, null, ["loc", [null, [1, 463],
                                [1, 536]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e]
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 1792
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "mfbnew_page");
                var r = e.createElement("h1");
                e.setAttribute(r, "class", "mpagetitle");
                var a = e.createComment("");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createElement("form");
                e.setAttribute(r, "autocapitalize", "off"), e.setAttribute(r, "autocorrect", "off"), e.setAttribute(r, "autocomplete", "off"), e.setAttribute(r, "class", "mform default");
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createElement("p");
                e.setAttribute(a, "class", "mgroup");
                var l = e.createElement("label");
                e.setAttribute(l, "for", "username");
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l);
                var l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createElement("p");
                e.setAttribute(a, "class", "mgroup");
                var l = e.createElement("label");
                e.setAttribute(l, "for", "password");
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l);
                var l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createElement("p");
                e.setAttribute(a, "class", "mgroup");
                var l = e.createElement("label");
                e.setAttribute(l, "for", "emailAddress");
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l);
                var l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createElement("p");
                e.setAttribute(a, "class", "mgroup");
                var l = e.createElement("label"),
                    i = e.createComment("");
                e.appendChild(l, i);
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createElement("p");
                e.setAttribute(a, "class", "mgroup actions");
                var l = e.createElement("input");
                return e.setAttribute(l, "type", "submit"), e.setAttribute(l, "class", "mbtn cta_btn"), e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = e.childAt(r, [1]),
                    l = e.childAt(a, [1]),
                    i = e.childAt(l, [0]),
                    o = e.childAt(a, [2]),
                    c = e.childAt(o, [0]),
                    s = e.childAt(a, [3]),
                    u = e.childAt(s, [0]),
                    d = e.childAt(a, [4, 0]),
                    m = e.childAt(a, [5, 0]),
                    p = new Array(15);
                return p[0] = e.createMorphAt(e.childAt(r, [0]), 0, 0), p[1] = e.createElementMorph(a), p[2] = e.createMorphAt(a, 0, 0), p[3] = e.createAttrMorph(i, "class"), p[4] = e.createMorphAt(i, 0, 0), p[5] = e.createMorphAt(l, 1, 1), p[6] = e.createAttrMorph(c, "class"), p[7] = e.createMorphAt(c, 0, 0), p[8] = e.createMorphAt(o, 1, 1), p[9] = e.createAttrMorph(u, "class"), p[10] = e.createMorphAt(u, 0, 0), p[11] = e.createMorphAt(s, 1, 1), p[12] = e.createMorphAt(d, 0, 0), p[13] = e.createMorphAt(d, 1, 1), p[14] = e.createAttrMorph(m, "value"), p
            },
            statements: [
                ["block", "unless", [
                        ["get", "invalidEmailAddress", ["loc", [null, [1, 58],
                            [1, 77]
                        ]]]
                    ],
                    [], 0, null, ["loc", [null, [1, 48],
                        [1, 210]
                    ]]
                ],
                ["element", "action", ["submit"],
                    ["on", "submit"],
                    ["loc", [null, [1, 279],
                        [1, 310]
                    ]]
                ],
                ["block", "if", [
                        ["get", "errors", ["loc", [null, [1, 339],
                            [1, 345]
                        ]]]
                    ],
                    [], 1, null, ["loc", [null, [1, 333],
                        [1, 558]
                    ]]
                ],
                ["attribute", "class", ["concat", ["mlabel ", ["subexpr", "if", [
                        ["get", "errors.username", ["loc", [null, [1, 617],
                            [1, 632]
                        ]]], "error"
                    ],
                    [],
                    ["loc", [null, [1, 612],
                        [1, 642]
                    ]]
                ]]]],
                ["inline", "t", ["facebook.finalize.username"],
                    [],
                    ["loc", [null, [1, 644],
                        [1, 678]
                    ]]
                ],
                ["inline", "input", [],
                    ["type", "text", "value", ["subexpr", "@mut", [
                            ["get", "username", ["loc", [null, [1, 712],
                                [1, 720]
                            ]]]
                        ],
                        [],
                        []
                    ], "name", "username", "placeholder", ["subexpr", "t", ["facebook.finalize.chooseUsername"],
                        [],
                        ["loc", [null, [1, 749],
                            [1, 787]
                        ]]
                    ], "class", "mfield"],
                    ["loc", [null, [1, 686],
                        [1, 804]
                    ]]
                ],
                ["attribute", "class", ["concat", ["mlabel ", ["subexpr", "if", [
                        ["get", "errors.password", ["loc", [null, [1, 867],
                            [1, 882]
                        ]]], "error"
                    ],
                    [],
                    ["loc", [null, [1, 862],
                        [1, 892]
                    ]]
                ]]]],
                ["inline", "t", ["facebook.finalize.password"],
                    [],
                    ["loc", [null, [1, 894],
                        [1, 928]
                    ]]
                ],
                ["inline", "input", [],
                    ["type", "password", "value", ["subexpr", "@mut", [
                            ["get", "password", ["loc", [null, [1, 966],
                                [1, 974]
                            ]]]
                        ],
                        [],
                        []
                    ], "name", "password", "placeholder", ["subexpr", "t", ["facebook.finalize.choosePassword"],
                        [],
                        ["loc", [null, [1, 1003],
                            [1, 1041]
                        ]]
                    ], "class", "mfield"],
                    ["loc", [null, [1, 936],
                        [1, 1058]
                    ]]
                ],
                ["attribute", "class", ["concat", ["mlabel ", ["subexpr", "if", [
                        ["get", "errors.email", ["loc", [null, [1, 1125],
                            [1, 1137]
                        ]]], "error"
                    ],
                    [],
                    ["loc", [null, [1, 1120],
                        [1, 1147]
                    ]]
                ]]]],
                ["inline", "t", ["facebook.finalize.setEmailAddress"],
                    [],
                    ["loc", [null, [1, 1149],
                        [1, 1190]
                    ]]
                ],
                ["inline", "input", [],
                    ["type", "text", "value", ["subexpr", "@mut", [
                            ["get", "emailAddress", ["loc", [null, [1, 1224],
                                [1, 1236]
                            ]]]
                        ],
                        [],
                        []
                    ], "name", "emailAddress", "placeholder", ["subexpr", "t", ["facebook.finalize.setEmailAddress"],
                        [],
                        ["loc", [null, [1, 1269],
                            [1, 1308]
                        ]]
                    ], "class", "mfield"],
                    ["loc", [null, [1, 1198],
                        [1, 1325]
                    ]]
                ],
                ["inline", "input", [],
                    ["type", "checkbox", "id", "privacy_policy", "checked", ["subexpr", "@mut", [
                            ["get", "privacyPolicyConsent", ["loc", [null, [1, 1406],
                                [1, 1426]
                            ]]]
                        ],
                        [],
                        []
                    ], "class", "mfield"],
                    ["loc", [null, [1, 1354],
                        [1, 1443]
                    ]]
                ],
                ["inline", "t", ["registrationFlow.username.privacyPolicy"],
                    ["ppLink", ["subexpr", "tag-decorator", ["a"],
                        ["class", "pp-link", "href", "#"],
                        ["loc", [null, [1, 1496],
                            [1, 1540]
                        ]]
                    ], "tosLink", ["subexpr", "tag-decorator", ["a"],
                        ["class", "tos-link", "href", "#"],
                        ["loc", [null, [1, 1549],
                            [1, 1594]
                        ]]
                    ], "cookieLink", ["subexpr", "tag-decorator", ["a"],
                        ["class", "cookie-link", "href", "#"],
                        ["loc", [null, [1, 1606],
                            [1, 1654]
                        ]]
                    ]],
                    ["loc", [null, [1, 1443],
                        [1, 1656]
                    ]]
                ],
                ["attribute", "value", ["subexpr", "t", ["facebook.finalize.finish"],
                    [],
                    ["loc", [null, [1, 1721],
                        [1, 1753]
                    ]]
                ]]
            ],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("mobile-panel/templates/application-error", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 0
                            },
                            end: {
                                line: 1,
                                column: 55
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("h1"),
                            r = e.createTextNode("ERROR: cacheWarmer");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function() {
                        return []
                    },
                    statements: [],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 55
                            },
                            end: {
                                line: 1,
                                column: 380
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "class", "load-error");
                        var r = e.createElement("h1");
                        e.setAttribute(r, "class", "page-title");
                        var a = e.createTextNode("Your request could not be completed at this time.");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("a");
                        e.setAttribute(r, "href", "#"), e.setAttribute(r, "class", "retry mbtn cta_btn");
                        var a = e.createTextNode("Try Again?");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("p"),
                            a = e.createTextNode("If this problem persists please email Kongregate support at ");
                        e.appendChild(r, a);
                        var a = e.createElement("a");
                        e.setAttribute(a, "href", "#");
                        var l = e.createTextNode("support@kongregate.com");
                        e.appendChild(a, l), e.appendChild(r, a);
                        var a = e.createTextNode(".");
                        return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = e.childAt(r, [1]),
                            l = e.childAt(r, [2, 1]),
                            i = new Array(2);
                        return i[0] = e.createElementMorph(a), i[1] = e.createElementMorph(l), i
                    },
                    statements: [
                        ["element", "action", ["retry"],
                            ["on", "click"],
                            ["loc", [null, [1, 176],
                                [1, 205]
                            ]]
                        ],
                        ["element", "action", ["support"],
                            [],
                            ["loc", [null, [1, 313],
                                [1, 333]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 387
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [
                ["block", "if", [
                        ["get", "device.isCacheWarmer", ["loc", [null, [1, 6],
                            [1, 26]
                        ]]]
                    ],
                    [], 0, 1, ["loc", [null, [1, 0],
                        [1, 387]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("mobile-panel/templates/application", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 19
                            },
                            end: {
                                line: 1,
                                column: 155
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "class", "mmenu_btn");
                        var r = e.createElement("span");
                        e.setAttribute(r, "class", "mico"), e.appendChild(n, r);
                        var r = e.createTextNode("MENU");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = new Array(1);
                        return a[0] = e.createElementMorph(r), a
                    },
                    statements: [
                        ["element", "action", ["toggleMenuVisibility"],
                            ["on", "click"],
                            ["loc", [null, [1, 56],
                                [1, 100]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 201
                            },
                            end: {
                                line: 1,
                                column: 338
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("p");
                        e.setAttribute(n, "id", "warn_unsigned"), e.setAttribute(n, "class", "warning");
                        var r = e.createElement("strong"),
                            a = e.createTextNode("Warning:");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createTextNode(" This App was not signed by Kongregate");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function() {
                        return []
                    },
                    statements: [],
                    locals: [],
                    templates: []
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 405
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createElement("div");
                e.setAttribute(n, "id", "content"), e.setAttribute(n, "class", "modal_hidden");
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [2]),
                    a = new Array(6);
                return a[0] = e.createUnsafeMorphAt(t, 0, 0, n), a[1] = e.createMorphAt(t, 1, 1, n), a[2] = e.createMorphAt(r, 0, 0), a[3] = e.createUnsafeMorphAt(r, 1, 1), a[4] = e.createUnsafeMorphAt(t, 3, 3, n), a[5] = e.createUnsafeMorphAt(t, 4, 4, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), a
            },
            statements: [
                ["inline", "outlet", ["menu"],
                    [],
                    ["loc", [null, [1, 0],
                        [1, 19]
                    ]]
                ],
                ["block", "if", [
                        ["get", "virtualMenuButtonVisible", ["loc", [null, [1, 25],
                            [1, 49]
                        ]]]
                    ],
                    [], 0, null, ["loc", [null, [1, 19],
                        [1, 162]
                    ]]
                ],
                ["block", "if", [
                        ["get", "game.showUnsignedWarning", ["loc", [null, [1, 207],
                            [1, 231]
                        ]]]
                    ],
                    [], 1, null, ["loc", [null, [1, 201],
                        [1, 345]
                    ]]
                ],
                ["content", "outlet", ["loc", [null, [1, 345],
                    [1, 357]
                ]]],
                ["inline", "outlet", ["toolbar"],
                    [],
                    ["loc", [null, [1, 363],
                        [1, 385]
                    ]]
                ],
                ["inline", "outlet", ["modal"],
                    [],
                    ["loc", [null, [1, 385],
                        [1, 405]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("mobile-panel/templates/asset-preloader", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 48
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("ul");
                return e.setAttribute(n, "style", "display:none"), e.setAttribute(n, "class", "preloader"), e.appendChild(t, n), t
            },
            buildRenderNodes: function() {
                return []
            },
            statements: [],
            locals: [],
            templates: []
        }
    }())
}), define("mobile-panel/templates/back-button", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
            return {
                meta: {
                    revision: "Ember@1.13.12",
                    loc: {
                        source: null,
                        start: {
                            line: 1,
                            column: 0
                        },
                        end: {
                            line: 1,
                            column: 144
                        }
                    }
                },
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function(e) {
                    var t = e.createDocumentFragment(),
                        n = e.createElement("a"),
                        r = e.createElement("span");
                    e.appendChild(n, r);
                    var r = e.createComment("");
                    return e.appendChild(n, r), e.appendChild(t, n), t
                },
                buildRenderNodes: function(e, t, n) {
                    var r = e.childAt(t, [0]),
                        a = new Array(3);
                    return a[0] = e.createAttrMorph(r, "class"), a[1] = e.createElementMorph(r), a[2] = e.createMorphAt(r, 1, 1), a
                },
                statements: [
                    ["attribute", "class", ["concat", ["mbackbtn ", ["get", "view.additionalClasses", ["loc", [null, [1, 78],
                        [1, 100]
                    ]]]]]],
                    ["element", "action", ["goBackOrDefault"],
                        ["on", "click"],
                        ["loc", [null, [1, 20],
                            [1, 59]
                        ]]
                    ],
                    ["inline", "t", ["backButton.back"],
                        [],
                        ["loc", [null, [1, 117],
                            [1, 140]
                        ]]
                    ]
                ],
                locals: [],
                templates: []
            }
        }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 151
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [
                ["block", "if", [
                        ["get", "canGoBack", ["loc", [null, [1, 6],
                            [1, 15]
                        ]]]
                    ],
                    [], 0, null, ["loc", [null, [1, 0],
                        [1, 151]
                    ]]
                ]
            ],
            locals: [],
            templates: [e]
        }
    }())
}), define("mobile-panel/templates/change-email", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
            var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 137
                                },
                                end: {
                                    line: 1,
                                    column: 224
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("p");
                            e.setAttribute(n, "class", "mnotice");
                            var r = e.createComment("");
                            return e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                        },
                        statements: [
                            ["inline", "t", ["changeEmail.mfaWarning"],
                                [],
                                ["loc", [null, [1, 190],
                                    [1, 220]
                                ]]
                            ]
                        ],
                        locals: [],
                        templates: []
                    }
                }(),
                t = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 2,
                                    column: 285
                                },
                                end: {
                                    line: 2,
                                    column: 457
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("label");
                            e.setAttribute(n, "class", "mcheckbox msmallprint");
                            var r = e.createComment("");
                            e.appendChild(n, r);
                            var r = e.createComment("");
                            return e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = e.childAt(t, [0]),
                                a = new Array(2);
                            return a[0] = e.createMorphAt(r, 0, 0), a[1] = e.createMorphAt(r, 1, 1), a
                        },
                        statements: [
                            ["inline", "input", [],
                                ["type", "checkbox", "id", "opt_in", "checked", ["subexpr", "@mut", [
                                        ["get", "optIn", ["loc", [null, [2, 394],
                                            [2, 399]
                                        ]]]
                                    ],
                                    [],
                                    []
                                ], "class", "mfield"],
                                ["loc", [null, [2, 350],
                                    [2, 416]
                                ]]
                            ],
                            ["inline", "t", ["changeEmail.sendMeUpdates"],
                                [],
                                ["loc", [null, [2, 416],
                                    [2, 449]
                                ]]
                            ]
                        ],
                        locals: [],
                        templates: []
                    }
                }();
            return {
                meta: {
                    revision: "Ember@1.13.12",
                    loc: {
                        source: null,
                        start: {
                            line: 1,
                            column: 0
                        },
                        end: {
                            line: 2,
                            column: 542
                        }
                    }
                },
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function(e) {
                    var t = e.createDocumentFragment(),
                        n = e.createElement("form");
                    e.setAttribute(n, "autocapitalize", "off"), e.setAttribute(n, "autocorrect", "off"), e.setAttribute(n, "class", "mchange_email");
                    var r = e.createComment("");
                    e.appendChild(n, r);
                    var r = e.createElement("p");
                    e.setAttribute(r, "class", "mlabel truncate");
                    var a = e.createComment("");
                    e.appendChild(r, a);
                    var a = e.createTextNode(":\n");
                    e.appendChild(r, a);
                    var a = e.createElement("strong"),
                        l = e.createComment("");
                    e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                    var r = e.createElement("p");
                    e.setAttribute(r, "class", "mgroup");
                    var a = e.createComment("");
                    e.appendChild(r, a);
                    var a = e.createComment("");
                    e.appendChild(r, a);
                    var a = e.createComment("");
                    e.appendChild(r, a);
                    var a = e.createElement("input");
                    return e.setAttribute(a, "type", "submit"), e.setAttribute(a, "class", "mbtn cta_btn"), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                },
                buildRenderNodes: function(e, t, n) {
                    var r = e.childAt(t, [0]),
                        a = e.childAt(r, [1]),
                        l = e.childAt(r, [2]),
                        i = e.childAt(l, [3]),
                        o = new Array(8);
                    return o[0] = e.createElementMorph(r), o[1] = e.createMorphAt(r, 0, 0), o[2] = e.createMorphAt(a, 0, 0), o[3] = e.createMorphAt(e.childAt(a, [2]), 0, 0), o[4] = e.createMorphAt(l, 0, 0), o[5] = e.createMorphAt(l, 1, 1), o[6] = e.createMorphAt(l, 2, 2), o[7] = e.createAttrMorph(i, "value"), o
                },
                statements: [
                    ["element", "action", ["submit"],
                        ["on", "submit"],
                        ["loc", [null, [1, 83],
                            [1, 114]
                        ]]
                    ],
                    ["block", "if", [
                            ["get", "activeUser.emailMfaEnabled", ["loc", [null, [1, 143],
                                [1, 169]
                            ]]]
                        ],
                        [], 0, null, ["loc", [null, [1, 137],
                            [1, 231]
                        ]]
                    ],
                    ["inline", "t", ["changeEmail.currentAddress"],
                        [],
                        ["loc", [null, [1, 258],
                            [1, 292]
                        ]]
                    ],
                    ["content", "activeUser.emailAddress", ["loc", [null, [2, 8],
                        [2, 35]
                    ]]],
                    ["inline", "input", [],
                        ["value", ["subexpr", "@mut", [
                                ["get", "emailAddress", ["loc", [null, [2, 80],
                                    [2, 92]
                                ]]]
                            ],
                            [],
                            []
                        ], "type", "email", "id", "email_address", "placeholder", ["subexpr", "t", ["changeEmail.email"],
                            [],
                            ["loc", [null, [2, 137],
                                [2, 160]
                            ]]
                        ], "class", "mfield"],
                        ["loc", [null, [2, 66],
                            [2, 177]
                        ]]
                    ],
                    ["inline", "input", [],
                        ["value", ["subexpr", "@mut", [
                                ["get", "password", ["loc", [null, [2, 191],
                                    [2, 199]
                                ]]]
                            ],
                            [],
                            []
                        ], "type", "password", "id", "password", "placeholder", ["subexpr", "t", ["changeEmail.password"],
                            [],
                            ["loc", [null, [2, 242],
                                [2, 268]
                            ]]
                        ], "class", "mfield"],
                        ["loc", [null, [2, 177],
                            [2, 285]
                        ]]
                    ],
                    ["block", "unless", [
                            ["get", "activeUser.optIn", ["loc", [null, [2, 295],
                                [2, 311]
                            ]]]
                        ],
                        [], 1, null, ["loc", [null, [2, 285],
                            [2, 468]
                        ]]
                    ],
                    ["attribute", "value", ["get", "submitText", ["loc", [null, [2, 497],
                        [2, 507]
                    ]]]]
                ],
                locals: [],
                templates: [e, t]
            }
        }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 2,
                        column: 551
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [
                ["block", "view", ["modal"],
                    ["modalController", ["subexpr", "@mut", [
                            ["get", "this", ["loc", [null, [1, 32],
                                [1, 36]
                            ]]]
                        ],
                        [],
                        []
                    ]], 0, null, ["loc", [null, [1, 0],
                        [2, 551]
                    ]]
                ]
            ],
            locals: [],
            templates: [e]
        }
    }())
}), define("mobile-panel/templates/change-password", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
            return {
                meta: {
                    revision: "Ember@1.13.12",
                    loc: {
                        source: null,
                        start: {
                            line: 1,
                            column: 0
                        },
                        end: {
                            line: 1,
                            column: 927
                        }
                    }
                },
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function(e) {
                    var t = e.createDocumentFragment(),
                        n = e.createElement("form");
                    e.setAttribute(n, "autocapitalize", "off"), e.setAttribute(n, "autocorrect", "off"), e.setAttribute(n, "class", "mchange_password");
                    var r = e.createElement("p");
                    e.setAttribute(r, "class", "mgroup");
                    var a = e.createElement("label");
                    e.setAttribute(a, "for", "password"), e.setAttribute(a, "class", "mlabel");
                    var l = e.createComment("");
                    e.appendChild(a, l);
                    var l = e.createTextNode(":");
                    e.appendChild(a, l), e.appendChild(r, a);
                    var a = e.createComment("");
                    e.appendChild(r, a), e.appendChild(n, r);
                    var r = e.createElement("p");
                    e.setAttribute(r, "class", "mgroup");
                    var a = e.createElement("label");
                    e.setAttribute(a, "for", "new_password"), e.setAttribute(a, "class", "mlabel");
                    var l = e.createComment("");
                    e.appendChild(a, l);
                    var l = e.createTextNode(":");
                    e.appendChild(a, l), e.appendChild(r, a);
                    var a = e.createComment("");
                    e.appendChild(r, a), e.appendChild(n, r);
                    var r = e.createElement("p");
                    e.setAttribute(r, "class", "mgroup");
                    var a = e.createElement("label");
                    e.setAttribute(a, "for", "confirm_new_password"), e.setAttribute(a, "class", "mlabel");
                    var l = e.createComment("");
                    e.appendChild(a, l);
                    var l = e.createTextNode(":");
                    e.appendChild(a, l), e.appendChild(r, a);
                    var a = e.createComment("");
                    e.appendChild(r, a), e.appendChild(n, r);
                    var r = e.createElement("p");
                    e.setAttribute(r, "class", "mgroup");
                    var a = e.createElement("input");
                    e.setAttribute(a, "type", "submit"), e.setAttribute(a, "class", "mbtn cta_btn"), e.appendChild(r, a), e.appendChild(n, r);
                    var r = e.createElement("p");
                    e.setAttribute(r, "class", "mgroup msmalltext");
                    var a = e.createElement("a");
                    e.setAttribute(a, "href", "#");
                    var l = e.createComment("");
                    return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                },
                buildRenderNodes: function(e, t, n) {
                    var r = e.childAt(t, [0]),
                        a = e.childAt(r, [0]),
                        l = e.childAt(r, [1]),
                        i = e.childAt(r, [2]),
                        o = e.childAt(r, [3, 0]),
                        c = e.childAt(r, [4, 0]),
                        s = new Array(10);
                    return s[0] = e.createElementMorph(r), s[1] = e.createMorphAt(e.childAt(a, [0]), 0, 0), s[2] = e.createMorphAt(a, 1, 1), s[3] = e.createMorphAt(e.childAt(l, [0]), 0, 0), s[4] = e.createMorphAt(l, 1, 1), s[5] = e.createMorphAt(e.childAt(i, [0]), 0, 0), s[6] = e.createMorphAt(i, 1, 1), s[7] = e.createAttrMorph(o, "value"), s[8] = e.createElementMorph(c), s[9] = e.createMorphAt(c, 0, 0), s
                },
                statements: [
                    ["element", "action", ["submit"],
                        ["on", "submit"],
                        ["loc", [null, [1, 83],
                            [1, 114]
                        ]]
                    ],
                    ["inline", "t", ["changePassword.currentPassword"],
                        [],
                        ["loc", [null, [1, 195],
                            [1, 233]
                        ]]
                    ],
                    ["inline", "input", [],
                        ["value", ["subexpr", "@mut", [
                                ["get", "password", ["loc", [null, [1, 256],
                                    [1, 264]
                                ]]]
                            ],
                            [],
                            []
                        ], "type", "password", "id", "password", "class", "mfield"],
                        ["loc", [null, [1, 242],
                            [1, 311]
                        ]]
                    ],
                    ["inline", "t", ["changePassword.newPassword"],
                        [],
                        ["loc", [null, [1, 374],
                            [1, 408]
                        ]]
                    ],
                    ["inline", "input", [],
                        ["value", ["subexpr", "@mut", [
                                ["get", "newPassword", ["loc", [null, [1, 431],
                                    [1, 442]
                                ]]]
                            ],
                            [],
                            []
                        ], "type", "password", "id", "new_password", "class", "mfield"],
                        ["loc", [null, [1, 417],
                            [1, 493]
                        ]]
                    ],
                    ["inline", "t", ["changePassword.confirmPassword"],
                        [],
                        ["loc", [null, [1, 564],
                            [1, 602]
                        ]]
                    ],
                    ["inline", "input", [],
                        ["value", ["subexpr", "@mut", [
                                ["get", "confirmNewPassword", ["loc", [null, [1, 625],
                                    [1, 643]
                                ]]]
                            ],
                            [],
                            []
                        ], "type", "password", "id", "confirm_new_password", "class", "mfield"],
                        ["loc", [null, [1, 611],
                            [1, 702]
                        ]]
                    ],
                    ["attribute", "value", ["subexpr", "t", ["changePassword.submit"],
                        [],
                        ["loc", [null, [1, 751],
                            [1, 780]
                        ]]
                    ]],
                    ["element", "action", ["forgotPassword"],
                        [],
                        ["loc", [null, [1, 838],
                            [1, 865]
                        ]]
                    ],
                    ["inline", "t", ["changePassword.forgotPassword"],
                        [],
                        ["loc", [null, [1, 875],
                            [1, 912]
                        ]]
                    ]
                ],
                locals: [],
                templates: []
            }
        }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 936
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [
                ["block", "view", ["modal"],
                    ["modalController", ["subexpr", "@mut", [
                            ["get", "this", ["loc", [null, [1, 32],
                                [1, 36]
                            ]]]
                        ],
                        [],
                        []
                    ]], 0, null, ["loc", [null, [1, 0],
                        [1, 936]
                    ]]
                ]
            ],
            locals: [],
            templates: [e]
        }
    }())
}), define("mobile-panel/templates/chat/profile", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
            var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 43
                                },
                                end: {
                                    line: 1,
                                    column: 110
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("h1");
                            e.setAttribute(n, "class", "error");
                            var r = e.createComment("");
                            return e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                        },
                        statements: [
                            ["inline", "t-error", [
                                    ["get", "errorMessage", ["loc", [null, [1, 91],
                                        [1, 103]
                                    ]]]
                                ],
                                [],
                                ["loc", [null, [1, 81],
                                    [1, 105]
                                ]]
                            ]
                        ],
                        locals: [],
                        templates: []
                    }
                }(),
                t = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 117
                                },
                                end: {
                                    line: 1,
                                    column: 167
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("span");
                            return e.setAttribute(n, "class", "spinner"), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function() {
                            return []
                        },
                        statements: [],
                        locals: [],
                        templates: []
                    }
                }(),
                n = function() {
                    var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 607
                                    },
                                    end: {
                                        line: 1,
                                        column: 683
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("span");
                                e.setAttribute(n, "class", "friends");
                                var r = e.createElement("span");
                                e.setAttribute(r, "class", "ico");
                                var a = e.createTextNode("a");
                                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function() {
                                return []
                            },
                            statements: [],
                            locals: [],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 438
                                },
                                end: {
                                    line: 1,
                                    column: 694
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("p");
                            e.setAttribute(n, "class", "username");
                            var r = e.createElement("em"),
                                a = e.createComment("");
                            e.appendChild(r, a), e.appendChild(n, r);
                            var r = e.createComment("");
                            e.appendChild(n, r);
                            var r = e.createComment("");
                            return e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = e.childAt(t, [0]),
                                a = new Array(3);
                            return a[0] = e.createMorphAt(e.childAt(r, [0]), 0, 0), a[1] = e.createMorphAt(r, 1, 1), a[2] = e.createMorphAt(r, 2, 2), a
                        },
                        statements: [
                            ["inline", "t", ["chat.profile.onKongregateAs"],
                                ["user", ["subexpr", "tag", ["strong", ["get", "model.username", ["loc", [null, [1, 537],
                                        [1, 551]
                                    ]]]],
                                    ["class", "truncate"],
                                    ["loc", [null, [1, 523],
                                        [1, 569]
                                    ]]
                                ]],
                                ["loc", [null, [1, 484],
                                    [1, 571]
                                ]]
                            ],
                            ["inline", "level-bug", [],
                                ["level", ["subexpr", "@mut", [
                                        ["get", "model.level", ["loc", [null, [1, 594],
                                            [1, 605]
                                        ]]]
                                    ],
                                    [],
                                    []
                                ]],
                                ["loc", [null, [1, 576],
                                    [1, 607]
                                ]]
                            ],
                            ["block", "if", [
                                    ["get", "model.friends", ["loc", [null, [1, 613],
                                        [1, 626]
                                    ]]]
                                ],
                                [], 0, null, ["loc", [null, [1, 607],
                                    [1, 690]
                                ]]
                            ]
                        ],
                        locals: [],
                        templates: [e]
                    }
                }(),
                r = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 726
                                },
                                end: {
                                    line: 1,
                                    column: 920
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("li");
                            e.setAttribute(n, "class", "ctrl friend-ctrl");
                            var r = e.createElement("a");
                            e.setAttribute(r, "class", "unfriend");
                            var a = e.createElement("span");
                            e.setAttribute(a, "class", "ico");
                            var l = e.createTextNode("0");
                            e.appendChild(a, l), e.appendChild(r, a);
                            var a = e.createElement("span");
                            e.setAttribute(a, "class", "label");
                            var l = e.createComment("");
                            return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = e.childAt(t, [0, 0]),
                                a = new Array(2);
                            return a[0] = e.createElementMorph(r), a[1] = e.createMorphAt(e.childAt(r, [1]), 0, 0), a
                        },
                        statements: [
                            ["element", "action", ["unfriend"],
                                ["on", "click"],
                                ["loc", [null, [1, 779],
                                    [1, 811]
                                ]]
                            ],
                            ["inline", "t", ["chat.profile.unfriend"],
                                [],
                                ["loc", [null, [1, 875],
                                    [1, 904]
                                ]]
                            ]
                        ],
                        locals: [],
                        templates: []
                    }
                }(),
                a = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 920
                                },
                                end: {
                                    line: 1,
                                    column: 1138
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("li");
                            e.setAttribute(n, "class", "ctrl friend-ctrl");
                            var r = e.createElement("a"),
                                a = e.createElement("span");
                            e.setAttribute(a, "class", "ico");
                            var l = e.createTextNode("1");
                            e.appendChild(a, l), e.appendChild(r, a);
                            var a = e.createElement("span");
                            e.setAttribute(a, "class", "label");
                            var l = e.createComment("");
                            return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = e.childAt(t, [0, 0]),
                                a = new Array(3);
                            return a[0] = e.createAttrMorph(r, "class"), a[1] = e.createElementMorph(r), a[2] = e.createMorphAt(e.childAt(r, [1]), 0, 0), a
                        },
                        statements: [
                            ["attribute", "class", ["concat", ["befriend ", ["subexpr", "if", [
                                    ["get", "model.username", ["loc", [null, [1, 1014],
                                        [1, 1028]
                                    ]]], "", "disabled"
                                ],
                                [],
                                ["loc", [null, [1, 1009],
                                    [1, 1044]
                                ]]
                            ]]]],
                            ["element", "action", ["befriend"],
                                ["on", "click"],
                                ["loc", [null, [1, 960],
                                    [1, 992]
                                ]]
                            ],
                            ["inline", "t", ["chat.profile.addFriend"],
                                [],
                                ["loc", [null, [1, 1092],
                                    [1, 1122]
                                ]]
                            ]
                        ],
                        locals: [],
                        templates: []
                    }
                }(),
                l = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 1344
                                },
                                end: {
                                    line: 1,
                                    column: 1511
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("li");
                            e.setAttribute(n, "class", "ctrl mute-ctrl");
                            var r = e.createElement("a");
                            e.setAttribute(r, "class", "unmute");
                            var a = e.createElement("span");
                            e.setAttribute(a, "class", "ico");
                            var l = e.createTextNode("-");
                            e.appendChild(a, l), e.appendChild(r, a);
                            var a = e.createElement("span");
                            e.setAttribute(a, "class", "label");
                            var l = e.createComment("");
                            return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = e.childAt(t, [0, 0]),
                                a = new Array(2);
                            return a[0] = e.createElementMorph(r), a[1] = e.createMorphAt(e.childAt(r, [1]), 0, 0), a
                        },
                        statements: [
                            ["element", "action", ["unmute"],
                                [],
                                ["loc", [null, [1, 1387],
                                    [1, 1406]
                                ]]
                            ],
                            ["inline", "t", ["chat.profile.unmute"],
                                [],
                                ["loc", [null, [1, 1468],
                                    [1, 1495]
                                ]]
                            ]
                        ],
                        locals: [],
                        templates: []
                    }
                }(),
                i = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 1511
                                },
                                end: {
                                    line: 1,
                                    column: 1667
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("li");
                            e.setAttribute(n, "class", "ctrl mute-ctrl");
                            var r = e.createElement("a");
                            e.setAttribute(r, "class", "mute");
                            var a = e.createElement("span");
                            e.setAttribute(a, "class", "ico");
                            var l = e.createTextNode("-");
                            e.appendChild(a, l), e.appendChild(r, a);
                            var a = e.createElement("span");
                            e.setAttribute(a, "class", "label");
                            var l = e.createComment("");
                            return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = e.childAt(t, [0, 0]),
                                a = new Array(2);
                            return a[0] = e.createElementMorph(r), a[1] = e.createMorphAt(e.childAt(r, [1]), 0, 0), a
                        },
                        statements: [
                            ["element", "action", ["mute"],
                                [],
                                ["loc", [null, [1, 1549],
                                    [1, 1566]
                                ]]
                            ],
                            ["inline", "t", ["chat.profile.mute"],
                                [],
                                ["loc", [null, [1, 1626],
                                    [1, 1651]
                                ]]
                            ]
                        ],
                        locals: [],
                        templates: []
                    }
                }();
            return {
                meta: {
                    revision: "Ember@1.13.12",
                    loc: {
                        source: null,
                        start: {
                            line: 1,
                            column: 0
                        },
                        end: {
                            line: 1,
                            column: 1697
                        }
                    }
                },
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function(e) {
                    var t = e.createDocumentFragment(),
                        n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createElement("div");
                    e.setAttribute(n, "class", "chat-modal-dialog");
                    var r = e.createElement("div");
                    e.setAttribute(r, "class", "chat-user-profile-header");
                    var a = e.createElement("span");
                    e.setAttribute(a, "class", "avatar");
                    var l = e.createComment("");
                    e.appendChild(a, l), e.appendChild(r, a);
                    var a = e.createElement("div");
                    e.setAttribute(a, "class", "user-info");
                    var l = e.createElement("p");
                    e.setAttribute(l, "class", "character-name truncate");
                    var i = e.createComment("");
                    e.appendChild(l, i);
                    var i = e.createTextNode(" ");
                    e.appendChild(l, i), e.appendChild(a, l);
                    var l = e.createComment("");
                    e.appendChild(a, l);
                    var l = e.createElement("ul");
                    e.setAttribute(l, "class", "header-ctrls");
                    var i = e.createComment("");
                    e.appendChild(l, i);
                    var i = e.createElement("li");
                    e.setAttribute(i, "class", "ctrl profile-ctrl");
                    var o = e.createElement("a"),
                        c = e.createElement("span");
                    e.setAttribute(c, "class", "ico");
                    var s = e.createTextNode("#");
                    e.appendChild(c, s), e.appendChild(o, c);
                    var c = e.createElement("span");
                    e.setAttribute(c, "class", "label");
                    var s = e.createComment("");
                    e.appendChild(c, s), e.appendChild(o, c), e.appendChild(i, o), e.appendChild(l, i);
                    var i = e.createComment("");
                    return e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                },
                buildRenderNodes: function(e, t, n) {
                    var r = e.childAt(t, [2, 0]),
                        a = e.childAt(r, [1]),
                        l = e.childAt(a, [2]),
                        i = e.childAt(l, [1, 0]),
                        o = new Array(10);
                    return o[0] = e.createMorphAt(t, 0, 0, n), o[1] = e.createMorphAt(t, 1, 1, n), o[2] = e.createMorphAt(e.childAt(r, [0]), 0, 0), o[3] = e.createMorphAt(e.childAt(a, [0]), 0, 0), o[4] = e.createMorphAt(a, 1, 1), o[5] = e.createMorphAt(l, 0, 0), o[6] = e.createAttrMorph(i, "class"), o[7] = e.createElementMorph(i), o[8] = e.createMorphAt(e.childAt(i, [1]), 0, 0), o[9] = e.createMorphAt(l, 2, 2), e.insertBoundary(t, 0), o
                },
                statements: [
                    ["block", "if", [
                            ["get", "errorMessage", ["loc", [null, [1, 49],
                                [1, 61]
                            ]]]
                        ],
                        [], 0, null, ["loc", [null, [1, 43],
                            [1, 117]
                        ]]
                    ],
                    ["block", "if", [
                            ["get", "loadingInside", ["loc", [null, [1, 123],
                                [1, 136]
                            ]]]
                        ],
                        [], 1, null, ["loc", [null, [1, 117],
                            [1, 174]
                        ]]
                    ],
                    ["inline", "avatar-image", [],
                        ["username", ["subexpr", "@mut", [
                                ["get", "model.username", ["loc", [null, [1, 288],
                                    [1, 302]
                                ]]]
                            ],
                            [],
                            []
                        ], "kuid", ["subexpr", "@mut", [
                                ["get", "model.kuid", ["loc", [null, [1, 308],
                                    [1, 318]
                                ]]]
                            ],
                            [],
                            []
                        ], "height", "140", "width", "140"],
                        ["loc", [null, [1, 264],
                            [1, 345]
                        ]]
                    ],
                    ["content", "model.characterName", ["loc", [null, [1, 410],
                        [1, 433]
                    ]]],
                    ["block", "if", [
                            ["get", "model.username", ["loc", [null, [1, 444],
                                [1, 458]
                            ]]]
                        ],
                        [], 2, null, ["loc", [null, [1, 438],
                            [1, 701]
                        ]]
                    ],
                    ["block", "if", [
                            ["get", "model.friends", ["loc", [null, [1, 732],
                                [1, 745]
                            ]]]
                        ],
                        [], 3, 4, ["loc", [null, [1, 726],
                            [1, 1145]
                        ]]
                    ],
                    ["attribute", "class", ["concat", ["profile ", ["subexpr", "if", [
                            ["get", "model.username", ["loc", [null, [1, 1219],
                                [1, 1233]
                            ]]], "", "disabled"
                        ],
                        [],
                        ["loc", [null, [1, 1214],
                            [1, 1249]
                        ]]
                    ]]]],
                    ["element", "action", ["profile"],
                        [],
                        ["loc", [null, [1, 1178],
                            [1, 1198]
                        ]]
                    ],
                    ["inline", "t", ["chat.profile.seeProfile"],
                        [],
                        ["loc", [null, [1, 1297],
                            [1, 1328]
                        ]]
                    ],
                    ["block", "if", [
                            ["get", "muted", ["loc", [null, [1, 1350],
                                [1, 1355]
                            ]]]
                        ],
                        [], 5, 6, ["loc", [null, [1, 1344],
                            [1, 1674]
                        ]]
                    ]
                ],
                locals: [],
                templates: [e, t, n, r, a, l, i]
            }
        }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 1706
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [
                ["block", "view", ["chat-modal"],
                    ["modalController", ["subexpr", "@mut", [
                            ["get", "this", ["loc", [null, [1, 37],
                                [1, 41]
                            ]]]
                        ],
                        [],
                        []
                    ]], 0, null, ["loc", [null, [1, 0],
                        [1, 1706]
                    ]]
                ]
            ],
            locals: [],
            templates: [e]
        }
    }())
}), define("mobile-panel/templates/chat-modal", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 591
                            },
                            end: {
                                line: 1,
                                column: 642
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div"),
                            r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                    },
                    statements: [
                        ["inline", "t", ["chatModal.loading"],
                            [],
                            ["loc", [null, [1, 611],
                                [1, 636]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                var e = function() {
                        var e = function() {
                            return {
                                meta: {
                                    revision: "Ember@1.13.12",
                                    loc: {
                                        source: null,
                                        start: {
                                            line: 1,
                                            column: 776
                                        },
                                        end: {
                                            line: 1,
                                            column: 829
                                        }
                                    }
                                },
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function(e) {
                                    var t = e.createDocumentFragment(),
                                        n = e.createElement("li"),
                                        r = e.createComment("");
                                    return e.appendChild(n, r), e.appendChild(t, n), t
                                },
                                buildRenderNodes: function(e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                                },
                                statements: [
                                    ["inline", "t-error", [
                                            ["get", "error", ["loc", [null, [1, 817],
                                                [1, 822]
                                            ]]]
                                        ],
                                        [],
                                        ["loc", [null, [1, 807],
                                            [1, 824]
                                        ]]
                                    ]
                                ],
                                locals: ["error"],
                                templates: []
                            }
                        }();
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 650
                                    },
                                    end: {
                                        line: 1,
                                        column: 849
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("div");
                                e.setAttribute(n, "id", "modal-error-block"), e.setAttribute(n, "class", "error_block");
                                var r = e.createElement("p"),
                                    a = e.createComment("");
                                e.appendChild(r, a), e.appendChild(n, r);
                                var r = e.createElement("ul");
                                e.setAttribute(r, "class", "error_list");
                                var a = e.createComment("");
                                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = e.childAt(t, [0]),
                                    a = new Array(2);
                                return a[0] = e.createMorphAt(e.childAt(r, [0]), 0, 0), a[1] = e.createMorphAt(e.childAt(r, [1]), 0, 0), a
                            },
                            statements: [
                                ["inline", "t", ["chatModal.thereWasAProblem"],
                                    [],
                                    ["loc", [null, [1, 715],
                                        [1, 749]
                                    ]]
                                ],
                                ["block", "each", [
                                        ["get", "errors", ["loc", [null, [1, 784],
                                            [1, 790]
                                        ]]]
                                    ],
                                    [], 0, null, ["loc", [null, [1, 776],
                                        [1, 838]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: [e]
                        }
                    }(),
                    t = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 849
                                    },
                                    end: {
                                        line: 1,
                                        column: 866
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["content", "yield", ["loc", [null, [1, 857],
                                    [1, 866]
                                ]]]
                            ],
                            locals: [],
                            templates: []
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 642
                            },
                            end: {
                                line: 1,
                                column: 873
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["block", "if", [
                                ["get", "errors", ["loc", [null, [1, 656],
                                    [1, 662]
                                ]]]
                            ],
                            [], 0, 1, ["loc", [null, [1, 650],
                                [1, 873]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t]
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 880
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("p");
                e.setAttribute(n, "class", "chat-modal-header");
                var r = e.createElement("a");
                e.setAttribute(r, "href", "#"), e.setAttribute(r, "class", "chat-close-modal chatbtn");
                var a = e.createComment("");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createElement("p");
                e.setAttribute(r, "class", "chat-modal-chatSize");
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createElement("a");
                e.setAttribute(a, "id", "normalText"), e.setAttribute(a, "href", "#");
                var l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createElement("a");
                e.setAttribute(a, "id", "largeText"), e.setAttribute(a, "href", "#");
                var l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = e.childAt(r, [0]),
                    l = e.childAt(r, [1]),
                    i = e.childAt(l, [1]),
                    o = e.childAt(l, [2]),
                    c = new Array(10);
                return c[0] = e.createElementMorph(a), c[1] = e.createMorphAt(a, 0, 0), c[2] = e.createMorphAt(l, 0, 0), c[3] = e.createAttrMorph(i, "class"), c[4] = e.createElementMorph(i), c[5] = e.createMorphAt(i, 0, 0), c[6] = e.createAttrMorph(o, "class"), c[7] = e.createElementMorph(o), c[8] = e.createMorphAt(o, 0, 0), c[9] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, null), c
            },
            statements: [
                ["element", "action", ["close"],
                    ["on", "click"],
                    ["loc", [null, [1, 41],
                        [1, 70]
                    ]]
                ],
                ["inline", "t", ["chatModal.backToChat"],
                    [],
                    ["loc", [null, [1, 104],
                        [1, 132]
                    ]]
                ],
                ["inline", "t", ["chatModal.textSize"],
                    [],
                    ["loc", [null, [1, 167],
                        [1, 193]
                    ]]
                ],
                ["attribute", "class", ["concat", ["chat-modal-chatSize chatbtn ", ["subexpr", "if", [
                        ["get", "activeUser.chatInfoChatSize", ["loc", [null, [1, 302],
                            [1, 329]
                        ]]], "unselected", "selected"
                    ],
                    [],
                    ["loc", [null, [1, 297],
                        [1, 355]
                    ]]
                ]]]],
                ["element", "action", ["changeChatSize", 0],
                    ["on", "click"],
                    ["loc", [null, [1, 221],
                        [1, 261]
                    ]]
                ],
                ["inline", "t", ["chatModal.normalText"],
                    [],
                    ["loc", [null, [1, 357],
                        [1, 385]
                    ]]
                ],
                ["attribute", "class", ["concat", ["chat-modal-chatSize chatbtn ", ["subexpr", "if", [
                        ["get", "activeUser.chatInfoChatSize", ["loc", [null, [1, 497],
                            [1, 524]
                        ]]], "selected", "unselected"
                    ],
                    [],
                    ["loc", [null, [1, 492],
                        [1, 550]
                    ]]
                ]]]],
                ["element", "action", ["changeChatSize", 1],
                    ["on", "click"],
                    ["loc", [null, [1, 416],
                        [1, 456]
                    ]]
                ],
                ["inline", "t", ["chatModal.largeText"],
                    [],
                    ["loc", [null, [1, 552],
                        [1, 579]
                    ]]
                ],
                ["block", "if", [
                        ["get", "loading", ["loc", [null, [1, 597],
                            [1, 604]
                        ]]]
                    ],
                    [], 0, 1, ["loc", [null, [1, 591],
                        [1, 880]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("mobile-panel/templates/chat", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 48
                            },
                            end: {
                                line: 1,
                                column: 244
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("a");
                        e.setAttribute(n, "href", "#"), e.setAttribute(n, "class", "go-to-guild");
                        var r = e.createElement("span"),
                            a = e.createTextNode("Back to");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("strong");
                        e.setAttribute(r, "class", "truncate");
                        var a = e.createComment("");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("strong"),
                            a = e.createTextNode("Guild");
                        return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = new Array(2);
                        return a[0] = e.createElementMorph(r), a[1] = e.createMorphAt(e.childAt(r, [1]), 0, 0), a
                    },
                    statements: [
                        ["element", "action", ["goToGuild"],
                            ["on", "click"],
                            ["loc", [null, [1, 85],
                                [1, 118]
                            ]]
                        ],
                        ["content", "activeUser.guild.name", ["loc", [null, [1, 184],
                            [1, 209]
                        ]]]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 251
                            },
                            end: {
                                line: 1,
                                column: 313
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("p");
                        e.setAttribute(n, "class", "chat-error");
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                    },
                    statements: [
                        ["content", "historyError", ["loc", [null, [1, 293],
                            [1, 309]
                        ]]]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            n = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 320
                            },
                            end: {
                                line: 1,
                                column: 472
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("p");
                        e.setAttribute(n, "class", "connection-error");
                        var r = e.createElement("span");
                        e.setAttribute(r, "class", "spinner-sml light"), e.appendChild(n, r);
                        var r = e.createElement("span"),
                            a = e.createTextNode("Disconnected from chat serverâ€¦");
                        return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function() {
                        return []
                    },
                    statements: [],
                    locals: [],
                    templates: []
                }
            }(),
            r = function() {
                var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 537
                                    },
                                    end: {
                                        line: 1,
                                        column: 595
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("span");
                                return e.setAttribute(n, "class", "spinner inline"), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function() {
                                return []
                            },
                            statements: [],
                            locals: [],
                            templates: []
                        }
                    }(),
                    t = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 595
                                    },
                                    end: {
                                        line: 1,
                                        column: 695
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("button");
                                e.setAttribute(n, "class", "load-history chatbtn");
                                var r = e.createTextNode("Show Older");
                                return e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = e.childAt(t, [0]),
                                    a = new Array(1);
                                return a[0] = e.createElementMorph(r), a
                            },
                            statements: [
                                ["element", "action", ["loadHistory"],
                                    ["on", "click"],
                                    ["loc", [null, [1, 611],
                                        [1, 646]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 485
                            },
                            end: {
                                line: 1,
                                column: 708
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "class", "chat-history");
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                    },
                    statements: [
                        ["block", "if", [
                                ["get", "historyLoading", ["loc", [null, [1, 543],
                                    [1, 557]
                                ]]]
                            ],
                            [], 0, 1, ["loc", [null, [1, 537],
                                [1, 702]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t]
                }
            }(),
            a = function() {
                var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 776
                                },
                                end: {
                                    line: 1,
                                    column: 953
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [
                            ["inline", "component", [
                                    ["subexpr", "concat", ["chat-message/", ["get", "message.type", ["loc", [null, [1, 847],
                                            [1, 859]
                                        ]]]],
                                        [],
                                        ["loc", [null, [1, 823],
                                            [1, 860]
                                        ]]
                                    ]
                                ],
                                ["message", ["subexpr", "@mut", [
                                        ["get", "message", ["loc", [null, [1, 869],
                                            [1, 876]
                                        ]]]
                                    ],
                                    [],
                                    []
                                ], "activeUser", ["subexpr", "@mut", [
                                        ["get", "activeUser", ["loc", [null, [1, 888],
                                            [1, 898]
                                        ]]]
                                    ],
                                    [],
                                    []
                                ], "action", "showChatProfile", "showRoomList", "showRoomList"],
                                ["loc", [null, [1, 811],
                                    [1, 953]
                                ]]
                            ]
                        ],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 745
                            },
                            end: {
                                line: 1,
                                column: 960
                            }
                        }
                    },
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["block", "if", [
                                ["subexpr", "supported-message", [
                                        ["get", "message", ["loc", [null, [1, 801],
                                            [1, 808]
                                        ]]]
                                    ],
                                    [],
                                    ["loc", [null, [1, 782],
                                        [1, 809]
                                    ]]
                                ]
                            ],
                            [], 0, null, ["loc", [null, [1, 776],
                                [1, 960]
                            ]]
                        ]
                    ],
                    locals: ["message"],
                    templates: [e]
                }
            }(),
            l = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 969
                            },
                            end: {
                                line: 1,
                                column: 1121
                            }
                        }
                    },
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "chat-message/chat", [],
                            ["message", ["subexpr", "@mut", [
                                    ["get", "message", ["loc", [null, [1, 1035],
                                        [1, 1042]
                                    ]]]
                                ],
                                [],
                                []
                            ], "activeUser", ["subexpr", "@mut", [
                                    ["get", "activeUser", ["loc", [null, [1, 1054],
                                        [1, 1064]
                                    ]]]
                                ],
                                [],
                                []
                            ], "action", "showChatProfile", "retry", "retry", "delete", "delete"],
                            ["loc", [null, [1, 1007],
                                [1, 1121]
                            ]]
                        ]
                    ],
                    locals: ["message"],
                    templates: []
                }
            }(),
            i = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 1177
                            },
                            end: {
                                line: 1,
                                column: 1315
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("a");
                        e.setAttribute(n, "href", "#"), e.setAttribute(n, "class", "chat-scroll-btn");
                        var r = e.createElement("span");
                        e.setAttribute(r, "class", "ico");
                        var a = e.createTextNode(".");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createTextNode("Most Recent");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = new Array(1);
                        return a[0] = e.createElementMorph(r), a
                    },
                    statements: [
                        ["element", "action", ["scrollToBottom"],
                            ["on", "click"],
                            ["loc", [null, [1, 1211],
                                [1, 1249]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            o = function() {
                var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 1381
                                    },
                                    end: {
                                        line: 1,
                                        column: 1481
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["inline", "hide-on-error-img", [],
                                    ["class", "guild-ico", "src", ["subexpr", "@mut", [
                                            ["get", "activeUser.guild.iconUrl", ["loc", [null, [1, 1455],
                                                [1, 1479]
                                            ]]]
                                        ],
                                        [],
                                        []
                                    ]],
                                    ["loc", [null, [1, 1413],
                                        [1, 1481]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }(),
                    t = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 1516
                                    },
                                    end: {
                                        line: 1,
                                        column: 1647
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("p");
                                e.setAttribute(n, "class", "response-blocked");
                                var r = e.createTextNode("Uh-oh! We're sorry, this account is not eligible to participate in chat.");
                                return e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function() {
                                return []
                            },
                            statements: [],
                            locals: [],
                            templates: []
                        }
                    }(),
                    n = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 1766
                                    },
                                    end: {
                                        line: 1,
                                        column: 1818
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["content", "charactersCountError", ["loc", [null, [1, 1794],
                                    [1, 1818]
                                ]]]
                            ],
                            locals: [],
                            templates: []
                        }
                    }(),
                    r = function() {
                        var e = function() {
                                return {
                                    meta: {
                                        revision: "Ember@1.13.12",
                                        loc: {
                                            source: null,
                                            start: {
                                                line: 1,
                                                column: 1826
                                            },
                                            end: {
                                                line: 2,
                                                column: 7
                                            }
                                        }
                                    },
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function(e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createElement("span"),
                                            r = e.createTextNode("\n");
                                        return e.appendChild(n, r), e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function() {
                                        return []
                                    },
                                    statements: [],
                                    locals: [],
                                    templates: []
                                }
                            }(),
                            t = function() {
                                return {
                                    meta: {
                                        revision: "Ember@1.13.12",
                                        loc: {
                                            source: null,
                                            start: {
                                                line: 2,
                                                column: 7
                                            },
                                            end: {
                                                line: 2,
                                                column: 98
                                            }
                                        }
                                    },
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function(e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createElement("span"),
                                            r = e.createTextNode("(");
                                        e.appendChild(n, r);
                                        var r = e.createComment("");
                                        e.appendChild(n, r);
                                        var r = e.createTextNode(" ");
                                        e.appendChild(n, r);
                                        var r = e.createComment("");
                                        e.appendChild(n, r);
                                        var r = e.createTextNode(" in chat)");
                                        return e.appendChild(n, r), e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function(e, t, n) {
                                        var r = e.childAt(t, [0]),
                                            a = new Array(2);
                                        return a[0] = e.createMorphAt(r, 1, 1), a[1] = e.createMorphAt(r, 3, 3), a
                                    },
                                    statements: [
                                        ["content", "charactersCount", ["loc", [null, [2, 22],
                                            [2, 41]
                                        ]]],
                                        ["inline", "k-pluralize", [
                                                ["get", "charactersCount", ["loc", [null, [2, 56],
                                                    [2, 71]
                                                ]]], "player"
                                            ],
                                            [],
                                            ["loc", [null, [2, 42],
                                                [2, 82]
                                            ]]
                                        ]
                                    ],
                                    locals: [],
                                    templates: []
                                }
                            }();
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 1818
                                    },
                                    end: {
                                        line: 2,
                                        column: 105
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["block", "if", [
                                        ["get", "charactersCountLoading", ["loc", [null, [1, 1832],
                                            [1, 1854]
                                        ]]]
                                    ],
                                    [], 0, 1, ["loc", [null, [1, 1826],
                                        [2, 105]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: [e, t]
                        }
                    }(),
                    a = function() {
                        var e = function() {
                                return {
                                    meta: {
                                        revision: "Ember@1.13.12",
                                        loc: {
                                            source: null,
                                            start: {
                                                line: 2,
                                                column: 315
                                            },
                                            end: {
                                                line: 2,
                                                column: 540
                                            }
                                        }
                                    },
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function(e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createComment("");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function(e, t, n) {
                                        var r = new Array(1);
                                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                    },
                                    statements: [
                                        ["inline", "chat-native-textarea", [],
                                            ["id", "chat-input", "placeholder", "Add a messageâ€¦", "value", ["subexpr", "@mut", [
                                                    ["get", "messageText", ["loc", [null, [2, 422],
                                                        [2, 433]
                                                    ]]]
                                                ],
                                                [],
                                                []
                                            ], "maxlength", "250", "applicationController", ["subexpr", "@mut", [
                                                    ["get", "controllers.application", ["loc", [null, [2, 472],
                                                        [2, 495]
                                                    ]]]
                                                ],
                                                [],
                                                []
                                            ], "action", "publish", "class", "chat-input native"],
                                            ["loc", [null, [2, 348],
                                                [2, 540]
                                            ]]
                                        ]
                                    ],
                                    locals: [],
                                    templates: []
                                }
                            }(),
                            t = function() {
                                return {
                                    meta: {
                                        revision: "Ember@1.13.12",
                                        loc: {
                                            source: null,
                                            start: {
                                                line: 2,
                                                column: 540
                                            },
                                            end: {
                                                line: 2,
                                                column: 689
                                            }
                                        }
                                    },
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function(e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createComment("");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function(e, t, n) {
                                        var r = new Array(1);
                                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                    },
                                    statements: [
                                        ["inline", "chat-textarea", [],
                                            ["id", "chat-input", "placeholder", "Add a messageâ€¦", "rows", "1", "value", ["subexpr", "@mut", [
                                                    ["get", "messageText", ["loc", [null, [2, 624],
                                                        [2, 635]
                                                    ]]]
                                                ],
                                                [],
                                                []
                                            ], "maxlength", "250", "action", "publish", "class", "chat-input"],
                                            ["loc", [null, [2, 548],
                                                [2, 689]
                                            ]]
                                        ]
                                    ],
                                    locals: [],
                                    templates: []
                                }
                            }();
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 2,
                                        column: 284
                                    },
                                    end: {
                                        line: 2,
                                        column: 696
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["block", "if", [
                                        ["get", "device.hasNativeTextEntry", ["loc", [null, [2, 321],
                                            [2, 346]
                                        ]]]
                                    ],
                                    [], 0, 1, ["loc", [null, [2, 315],
                                        [2, 696]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: [e, t]
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 1350
                            },
                            end: {
                                line: 2,
                                column: 844
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createElement("div");
                        e.setAttribute(n, "class", "response-inner");
                        var r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createElement("p");
                        e.setAttribute(r, "class", "response-header");
                        var a = e.createElement("strong");
                        e.setAttribute(a, "class", "room");
                        var l = e.createComment("");
                        e.appendChild(a, l);
                        var l = e.createTextNode(" chat");
                        e.appendChild(a, l), e.appendChild(r, a);
                        var a = e.createElement("em");
                        e.setAttribute(a, "class", "participants");
                        var l = e.createComment("");
                        e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("form");
                        e.setAttribute(r, "class", "response-form");
                        var a = e.createElement("a");
                        e.setAttribute(a, "id", "roomList"), e.setAttribute(a, "href", "#"), e.setAttribute(a, "class", "chat-ctrl notxt");
                        var l = e.createComment("");
                        e.appendChild(a, l);
                        var l = e.createElement("span");
                        e.setAttribute(l, "class", "ico");
                        var i = e.createTextNode("*");
                        e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a);
                        var a = e.createComment("");
                        e.appendChild(r, a);
                        var a = e.createElement("button"),
                            l = e.createTextNode("Send");
                        return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [1]),
                            a = e.childAt(r, [1]),
                            l = e.childAt(r, [2]),
                            i = e.childAt(l, [0]),
                            o = e.childAt(l, [2]),
                            c = new Array(10);
                        return c[0] = e.createMorphAt(t, 0, 0, n), c[1] = e.createMorphAt(r, 0, 0), c[2] = e.createMorphAt(e.childAt(a, [0]), 0, 0), c[3] = e.createMorphAt(e.childAt(a, [1]), 0, 0), c[4] = e.createElementMorph(i), c[5] = e.createMorphAt(i, 0, 0), c[6] = e.createMorphAt(l, 1, 1), c[7] = e.createAttrMorph(o, "disabled"), c[8] = e.createAttrMorph(o, "class"), c[9] = e.createElementMorph(o), e.insertBoundary(t, 0), c
                    },
                    statements: [
                        ["block", "if", [
                                ["get", "activeUser.guild.iconUrl", ["loc", [null, [1, 1387],
                                    [1, 1411]
                                ]]]
                            ],
                            [], 0, null, ["loc", [null, [1, 1381],
                                [1, 1488]
                            ]]
                        ],
                        ["block", "if", [
                                ["get", "activeUser.underage", ["loc", [null, [1, 1522],
                                    [1, 1541]
                                ]]]
                            ],
                            [], 1, null, ["loc", [null, [1, 1516],
                                [1, 1654]
                            ]]
                        ],
                        ["content", "activeUser.guild.name", ["loc", [null, [1, 1702],
                            [1, 1727]
                        ]]],
                        ["block", "if", [
                                ["get", "charactersCountError", ["loc", [null, [1, 1772],
                                    [1, 1792]
                                ]]]
                            ],
                            [], 2, 3, ["loc", [null, [1, 1766],
                                [2, 112]
                            ]]
                        ],
                        ["element", "action", ["showRoomList"],
                            ["on", "click"],
                            ["loc", [null, [2, 175],
                                [2, 211]
                            ]]
                        ],
                        ["content", "motd-indicator", ["loc", [null, [2, 236],
                            [2, 254]
                        ]]],
                        ["block", "unless", [
                                ["get", "activeUser.underage", ["loc", [null, [2, 294],
                                    [2, 313]
                                ]]]
                            ],
                            [], 4, null, ["loc", [null, [2, 284],
                                [2, 707]
                            ]]
                        ],
                        ["attribute", "disabled", ["get", "inputDisabled", ["loc", [null, [2, 761],
                            [2, 774]
                        ]]]],
                        ["attribute", "class", ["concat", ["chatbtn chat-send ", ["get", "hasMessage", ["loc", [null, [2, 804],
                            [2, 814]
                        ]]]]]],
                        ["element", "action", ["submitChat"],
                            ["on", "click"],
                            ["loc", [null, [2, 715],
                                [2, 749]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t, n, r, a]
                }
            }(),
            c = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 2,
                                column: 844
                            },
                            end: {
                                line: 2,
                                column: 946
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("p");
                        e.setAttribute(n, "class", "response-error");
                        var r = e.createTextNode("You have been kicked from this guild and disconnected from chat.");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function() {
                        return []
                    },
                    statements: [],
                    locals: [],
                    templates: []
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 2,
                        column: 971
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "id", "chat-room");
                var r = e.createElement("div");
                e.setAttribute(r, "id", "chat-room--notice");
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createElement("ul");
                e.setAttribute(r, "class", "chat-messages");
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "id", "chat-footer"), e.setAttribute(r, "class", "chat-footer");
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createElement("div");
                e.setAttribute(a, "class", "response-outer");
                var l = e.createComment("");
                return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = e.childAt(r, [0]),
                    l = e.childAt(r, [2]),
                    i = e.childAt(r, [3]),
                    o = new Array(8);
                return o[0] = e.createMorphAt(a, 0, 0), o[1] = e.createMorphAt(a, 1, 1), o[2] = e.createMorphAt(a, 2, 2), o[3] = e.createMorphAt(r, 1, 1), o[4] = e.createMorphAt(l, 0, 0), o[5] = e.createMorphAt(l, 1, 1), o[6] = e.createMorphAt(i, 0, 0), o[7] = e.createMorphAt(e.childAt(i, [1]), 0, 0), o
            },
            statements: [
                ["block", "if", [
                        ["get", "supportsGoToGuild", ["loc", [null, [1, 54],
                            [1, 71]
                        ]]]
                    ],
                    [], 0, null, ["loc", [null, [1, 48],
                        [1, 251]
                    ]]
                ],
                ["block", "if", [
                        ["get", "historyError", ["loc", [null, [1, 257],
                            [1, 269]
                        ]]]
                    ],
                    [], 1, null, ["loc", [null, [1, 251],
                        [1, 320]
                    ]]
                ],
                ["block", "if", [
                        ["get", "temporarilyDisconnected", ["loc", [null, [1, 326],
                            [1, 349]
                        ]]]
                    ],
                    [], 2, null, ["loc", [null, [1, 320],
                        [1, 479]
                    ]]
                ],
                ["block", "unless", [
                        ["get", "atMessageLimit", ["loc", [null, [1, 495],
                            [1, 509]
                        ]]]
                    ],
                    [], 3, null, ["loc", [null, [1, 485],
                        [1, 719]
                    ]]
                ],
                ["block", "each", [
                        ["get", "messages", ["loc", [null, [1, 753],
                            [1, 761]
                        ]]]
                    ],
                    [], 4, null, ["loc", [null, [1, 745],
                        [1, 969]
                    ]]
                ],
                ["block", "each", [
                        ["get", "pendingMessages", ["loc", [null, [1, 977],
                            [1, 992]
                        ]]]
                    ],
                    [], 5, null, ["loc", [null, [1, 969],
                        [1, 1130]
                    ]]
                ],
                ["block", "if", [
                        ["get", "showMostRecent", ["loc", [null, [1, 1183],
                            [1, 1197]
                        ]]]
                    ],
                    [], 6, null, ["loc", [null, [1, 1177],
                        [1, 1322]
                    ]]
                ],
                ["block", "if", [
                        ["get", "activeUser.hasGuildChat", ["loc", [null, [1, 1356],
                            [1, 1379]
                        ]]]
                    ],
                    [], 7, 8, ["loc", [null, [1, 1350],
                        [2, 953]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t, n, r, a, l, i, o, c]
        }
    }())
}), define("mobile-panel/templates/components/badge-item", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
            return {
                meta: {
                    revision: "Ember@1.13.12",
                    loc: {
                        source: null,
                        start: {
                            line: 1,
                            column: 246
                        },
                        end: {
                            line: 1,
                            column: 317
                        }
                    }
                },
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function(e) {
                    var t = e.createDocumentFragment(),
                        n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function(e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [
                    ["inline", "view", ["accomplishment-task"],
                        ["task", ["subexpr", "@mut", [
                                ["get", "task", ["loc", [null, [1, 311],
                                    [1, 315]
                                ]]]
                            ],
                            [],
                            []
                        ]],
                        ["loc", [null, [1, 277],
                            [1, 317]
                        ]]
                    ]
                ],
                locals: ["task"],
                templates: []
            }
        }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 337
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("p");
                e.setAttribute(n, "class", "mbadgegraphic");
                var r = e.createElement("img");
                e.setAttribute(r, "class", "mbadgeimg"), e.appendChild(n, r);
                var r = e.createElement("span");
                e.setAttribute(r, "class", "mbadgedif");
                var a = e.createComment("");
                e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createElement("div");
                e.setAttribute(n, "class", "mbadgetxt");
                var r = e.createElement("p");
                e.setAttribute(r, "class", "mbadgeinfo");
                var a = e.createElement("strong"),
                    l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createElement("ol");
                e.setAttribute(r, "class", "mbadgetasks");
                var a = e.createComment("");
                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = e.childAt(r, [0]),
                    l = e.childAt(t, [1]),
                    i = e.childAt(l, [0]),
                    o = new Array(5);
                return o[0] = e.createAttrMorph(a, "src"), o[1] = e.createMorphAt(e.childAt(r, [1]), 0, 0), o[2] = e.createMorphAt(e.childAt(i, [0]), 0, 0), o[3] = e.createMorphAt(i, 1, 1), o[4] = e.createMorphAt(e.childAt(l, [1]), 0, 0), o
            },
            statements: [
                ["attribute", "src", ["get", "badge.imageUrl", ["loc", [null, [1, 36],
                    [1, 50]
                ]]]],
                ["content", "badge.level", ["loc", [null, [1, 95],
                    [1, 110]
                ]]],
                ["content", "badge.name", ["loc", [null, [1, 174],
                    [1, 188]
                ]]],
                ["content", "badge.description", ["loc", [null, [1, 197],
                    [1, 218]
                ]]],
                ["block", "each", [
                        ["get", "badge.tasks", ["loc", [null, [1, 254],
                            [1, 265]
                        ]]]
                    ],
                    [], 0, null, ["loc", [null, [1, 246],
                        [1, 326]
                    ]]
                ]
            ],
            locals: [],
            templates: [e]
        }
    }())
}), define("mobile-panel/templates/components/chat-message/chat", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 158
                            },
                            end: {
                                line: 1,
                                column: 274
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("em");
                        e.setAttribute(n, "class", "time");
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                    },
                    statements: [
                        ["inline", "unbound", [
                                ["subexpr", "medium-format-unix-datetime", [
                                        ["get", "message.timestamp", ["loc", [null, [1, 249],
                                            [1, 266]
                                        ]]]
                                    ],
                                    [],
                                    ["loc", [null, [1, 220],
                                        [1, 267]
                                    ]]
                                ]
                            ],
                            [],
                            ["loc", [null, [1, 210],
                                [1, 269]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 781
                                    },
                                    end: {
                                        line: 1,
                                        column: 913
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createTextNode("Kongregate Notice: To prevent spamming, we've limited how fast you can submit messages. Please try again.");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function() {
                                return []
                            },
                            statements: [],
                            locals: [],
                            templates: []
                        }
                    }(),
                    t = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 920
                                    },
                                    end: {
                                        line: 1,
                                        column: 967
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createTextNode("Your message did not send.");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function() {
                                return []
                            },
                            statements: [],
                            locals: [],
                            templates: []
                        }
                    }(),
                    n = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 974
                                    },
                                    end: {
                                        line: 1,
                                        column: 1079
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createTextNode("Kongregate Notice: Private messages are not currently supported.");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function() {
                                return []
                            },
                            statements: [],
                            locals: [],
                            templates: []
                        }
                    }(),
                    r = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 1093
                                    },
                                    end: {
                                        line: 1,
                                        column: 1184
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("button");
                                e.setAttribute(n, "class", "chatbtn retry");
                                var r = e.createTextNode("Retry");
                                return e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = e.childAt(t, [0]),
                                    a = new Array(1);
                                return a[0] = e.createElementMorph(r), a
                            },
                            statements: [
                                ["element", "action", ["retry"],
                                    ["on", "click"],
                                    ["loc", [null, [1, 1118],
                                        [1, 1147]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 650
                            },
                            end: {
                                line: 1,
                                column: 1195
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("p");
                        e.setAttribute(n, "class", "retry");
                        var r = e.createElement("button");
                        e.setAttribute(r, "class", "chatbtn delete ico");
                        var a = e.createTextNode("Ã—");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("span");
                        e.setAttribute(r, "class", "txt");
                        var a = e.createComment("");
                        e.appendChild(r, a);
                        var a = e.createComment("");
                        e.appendChild(r, a);
                        var a = e.createComment("");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = e.childAt(r, [0]),
                            l = e.childAt(r, [1]),
                            i = new Array(5);
                        return i[0] = e.createElementMorph(a), i[1] = e.createMorphAt(l, 0, 0), i[2] = e.createMorphAt(l, 1, 1), i[3] = e.createMorphAt(l, 2, 2), i[4] = e.createMorphAt(r, 2, 2), i
                    },
                    statements: [
                        ["element", "action", ["delete"],
                            ["on", "click"],
                            ["loc", [null, [1, 689],
                                [1, 719]
                            ]]
                        ],
                        ["block", "if", [
                                ["get", "message.rateLimited", ["loc", [null, [1, 787],
                                    [1, 806]
                                ]]]
                            ],
                            [], 0, null, ["loc", [null, [1, 781],
                                [1, 920]
                            ]]
                        ],
                        ["block", "if", [
                                ["get", "message.error", ["loc", [null, [1, 926],
                                    [1, 939]
                                ]]]
                            ],
                            [], 1, null, ["loc", [null, [1, 920],
                                [1, 974]
                            ]]
                        ],
                        ["block", "if", [
                                ["get", "message.unsupportedPrivateMessage", ["loc", [null, [1, 980],
                                    [1, 1013]
                                ]]]
                            ],
                            [], 2, null, ["loc", [null, [1, 974],
                                [1, 1086]
                            ]]
                        ],
                        ["block", "if", [
                                ["get", "retryable", ["loc", [null, [1, 1099],
                                    [1, 1108]
                                ]]]
                            ],
                            [], 3, null, ["loc", [null, [1, 1093],
                                [1, 1191]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t, n, r]
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 1208
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("a");
                e.setAttribute(n, "href", "#"), e.setAttribute(n, "class", "chat-message avatar");
                var r = e.createElement("span"),
                    a = e.createComment("");
                e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createElement("div"),
                    r = e.createElement("p");
                e.setAttribute(r, "class", "header");
                var a = e.createElement("a");
                e.setAttribute(a, "href", "#"), e.setAttribute(a, "class", "chat-message name");
                var l = e.createElement("strong");
                e.setAttribute(l, "class", "guild-name truncate");
                var i = e.createComment("");
                e.appendChild(l, i);
                var i = e.createTextNode(" ");
                e.appendChild(l, i), e.appendChild(a, l);
                var l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "class", "copy hyphenate");
                var a = e.createElement("p"),
                    l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createComment("");
                return e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = e.childAt(t, [2]),
                    l = e.childAt(a, [0, 0]),
                    i = new Array(9);
                return i[0] = e.createElementMorph(r), i[1] = e.createMorphAt(e.childAt(r, [0]), 0, 0), i[2] = e.createMorphAt(t, 1, 1, n), i[3] = e.createAttrMorph(a, "class"), i[4] = e.createElementMorph(l), i[5] = e.createMorphAt(e.childAt(l, [0]), 0, 0), i[6] = e.createMorphAt(l, 1, 1), i[7] = e.createMorphAt(e.childAt(a, [1, 0]), 0, 0), i[8] = e.createMorphAt(a, 2, 2), i
            },
            statements: [
                ["element", "action", ["show"],
                    [],
                    ["loc", [null, [1, 3],
                        [1, 20]
                    ]]
                ],
                ["inline", "avatar-image", [],
                    ["username", ["subexpr", "@mut", [
                            ["get", "message.username", ["loc", [null, [1, 88],
                                [1, 104]
                            ]]]
                        ],
                        [],
                        []
                    ], "kuid", ["subexpr", "@mut", [
                            ["get", "message.kuid", ["loc", [null, [1, 110],
                                [1, 122]
                            ]]]
                        ],
                        [],
                        []
                    ], "height", "80", "width", "80"],
                    ["loc", [null, [1, 64],
                        [1, 147]
                    ]]
                ],
                ["block", "if", [
                        ["subexpr", "unbound", [
                                ["get", "message.timestamp", ["loc", [null, [1, 173],
                                    [1, 190]
                                ]]]
                            ],
                            [],
                            ["loc", [null, [1, 164],
                                [1, 191]
                            ]]
                        ]
                    ],
                    [], 0, null, ["loc", [null, [1, 158],
                        [1, 281]
                    ]]
                ],
                ["attribute", "class", ["concat", ["body ", ["subexpr", "if", [
                        ["get", "message.pending", ["loc", [null, [1, 303],
                            [1, 318]
                        ]]], "pending"
                    ],
                    [],
                    ["loc", [null, [1, 298],
                        [1, 330]
                    ]]
                ], " ", ["subexpr", "if", [
                        ["get", "failed", ["loc", [null, [1, 336],
                            [1, 342]
                        ]]], "error"
                    ],
                    [],
                    ["loc", [null, [1, 331],
                        [1, 352]
                    ]]
                ], " ", ["subexpr", "if", [
                        ["get", "activeUser.chatInfoChatSize", ["loc", [null, [1, 358],
                            [1, 385]
                        ]]], "lrg"
                    ],
                    [],
                    ["loc", [null, [1, 353],
                        [1, 393]
                    ]]
                ]]]],
                ["element", "action", ["show"],
                    [],
                    ["loc", [null, [1, 416],
                        [1, 433]
                    ]]
                ],
                ["inline", "unbound", [
                        ["get", "message.characterName", ["loc", [null, [1, 515],
                            [1, 536]
                        ]]]
                    ],
                    [],
                    ["loc", [null, [1, 505],
                        [1, 538]
                    ]]
                ],
                ["inline", "user-details", [],
                    ["user", ["subexpr", "@mut", [
                            ["get", "message", ["loc", [null, [1, 568],
                                [1, 575]
                            ]]]
                        ],
                        [],
                        []
                    ]],
                    ["loc", [null, [1, 548],
                        [1, 577]
                    ]]
                ],
                ["inline", "unbound", [
                        ["get", "message.text", ["loc", [null, [1, 626],
                            [1, 638]
                        ]]]
                    ],
                    [],
                    ["loc", [null, [1, 616],
                        [1, 640]
                    ]]
                ],
                ["block", "if", [
                        ["get", "failed", ["loc", [null, [1, 656],
                            [1, 662]
                        ]]]
                    ],
                    [], 1, null, ["loc", [null, [1, 650],
                        [1, 1202]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("mobile-panel/templates/components/chat-message/guild-join", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 97
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("span");
                e.setAttribute(n, "class", "msg");
                var r = e.createElement("strong"),
                    a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createTextNode(" ");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("joined the guild");
                return e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(e.childAt(t, [0, 0]), 0, 0), r
            },
            statements: [
                ["inline", "unbound", [
                        ["get", "message.data.characterName", ["loc", [null, [1, 36],
                            [1, 62]
                        ]]]
                    ],
                    [],
                    ["loc", [null, [1, 26],
                        [1, 64]
                    ]]
                ]
            ],
            locals: [],
            templates: []
        }
    }())
}), define("mobile-panel/templates/components/chat-message/guild-leave", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 95
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("span");
                e.setAttribute(n, "class", "msg");
                var r = e.createElement("strong"),
                    a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createTextNode(" ");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("left the guild");
                return e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(e.childAt(t, [0, 0]), 0, 0), r
            },
            statements: [
                ["inline", "unbound", [
                        ["get", "message.data.characterName", ["loc", [null, [1, 36],
                            [1, 62]
                        ]]]
                    ],
                    [],
                    ["loc", [null, [1, 26],
                        [1, 64]
                    ]]
                ]
            ],
            locals: [],
            templates: []
        }
    }())
}), define("mobile-panel/templates/components/chat-message/motd", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 287
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("em");
                e.setAttribute(n, "class", "time");
                var r = e.createComment("");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createElement("p");
                e.setAttribute(n, "class", "header");
                var r = e.createElement("strong"),
                    a = e.createTextNode("Kongbot's message for you:");
                e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createElement("div");
                e.setAttribute(n, "class", "message");
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createElement("a");
                e.setAttribute(r, "href", "#");
                var a = e.createTextNode("Read entire message Â»");
                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [2]),
                    a = e.childAt(r, [1]),
                    l = new Array(3);
                return l[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), l[1] = e.createUnsafeMorphAt(r, 0, 0), l[2] = e.createElementMorph(a), l
            },
            statements: [
                ["inline", "unbound", [
                        ["subexpr", "medium-format-unix-datetime", [
                                ["get", "message.timestamp", ["loc", [null, [1, 56],
                                    [1, 73]
                                ]]]
                            ],
                            [],
                            ["loc", [null, [1, 27],
                                [1, 74]
                            ]]
                        ]
                    ],
                    [],
                    ["loc", [null, [1, 17],
                        [1, 76]
                    ]]
                ],
                ["inline", "unbound", [
                        ["get", "message.data.message", ["loc", [null, [1, 178],
                            [1, 198]
                        ]]]
                    ],
                    [],
                    ["loc", [null, [1, 167],
                        [1, 201]
                    ]]
                ],
                ["element", "action", ["showRoomList"],
                    ["on", "click"],
                    ["loc", [null, [1, 213],
                        [1, 249]
                    ]]
                ]
            ],
            locals: [],
            templates: []
        }
    }())
}), define("mobile-panel/templates/components/email-taken", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 180
                            },
                            end: {
                                line: 1,
                                column: 327
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "t", ["registrationFlow.emailTaken.signIn"],
                            [],
                            ["loc", [null, [1, 285],
                                [1, 327]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 371
                            },
                            end: {
                                line: 1,
                                column: 484
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "t", ["registrationFlow.emailTaken.forgotPassword"],
                            [],
                            ["loc", [null, [1, 434],
                                [1, 484]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 500
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("h1");
                e.setAttribute(n, "class", "email-taken__title");
                var r = e.createComment("");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createElement("p");
                e.setAttribute(n, "class", "email-taken__msg");
                var r = e.createComment("");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createElement("p");
                e.setAttribute(n, "class", "email-taken__cta");
                var r = e.createComment("");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createElement("p");
                e.setAttribute(n, "class", "email-taken__alt");
                var r = e.createComment("");
                return e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(4);
                return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r[1] = e.createMorphAt(e.childAt(t, [1]), 0, 0), r[2] = e.createMorphAt(e.childAt(t, [2]), 0, 0), r[3] = e.createMorphAt(e.childAt(t, [3]), 0, 0), r
            },
            statements: [
                ["inline", "t", ["registrationFlow.emailTaken.title"],
                    [],
                    ["loc", [null, [1, 31],
                        [1, 72]
                    ]]
                ],
                ["inline", "t", ["registrationFlow.emailTaken.message"],
                    [],
                    ["loc", [null, [1, 105],
                        [1, 148]
                    ]]
                ],
                ["block", "link-to", ["login", ["subexpr", "query-params", [],
                        ["emailAddress", ["get", "emailAddress", ["loc", [null, [1, 226],
                            [1, 238]
                        ]]]],
                        ["loc", [null, [1, 199],
                            [1, 239]
                        ]]
                    ]],
                    ["id", "email-taken-login", "class", "mbtn cta_btn"], 0, null, ["loc", [null, [1, 180],
                        [1, 339]
                    ]]
                ],
                ["block", "link-to", ["forgot-password"],
                    ["id", "email-taken-forgot-password"], 1, null, ["loc", [null, [1, 371],
                        [1, 496]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("mobile-panel/templates/components/index/scores-pod-score", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 59
                            },
                            end: {
                                line: 1,
                                column: 114
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createTextNode("Top ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode(" %");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r
                    },
                    statements: [
                        ["content", "score.percentile", ["loc", [null, [1, 92],
                            [1, 112]
                        ]]]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 114
                            },
                            end: {
                                line: 1,
                                column: 137
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["content", "score.value", ["loc", [null, [1, 122],
                            [1, 137]
                        ]]]
                    ],
                    locals: [],
                    templates: []
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 151
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("span");
                e.setAttribute(n, "class", "label");
                var r = e.createComment("");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createElement("span");
                e.setAttribute(n, "class", "num");
                var r = e.createComment("");
                return e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(2);
                return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r[1] = e.createMorphAt(e.childAt(t, [1]), 0, 0), r
            },
            statements: [
                ["content", "score.name", ["loc", [null, [1, 20],
                    [1, 34]
                ]]],
                ["block", "if", [
                        ["get", "score.inTopPercentile", ["loc", [null, [1, 65],
                            [1, 86]
                        ]]]
                    ],
                    [], 0, 1, ["loc", [null, [1, 59],
                        [1, 144]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("mobile-panel/templates/components/index/scores-pod", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 73
                            },
                            end: {
                                line: 1,
                                column: 176
                            }
                        }
                    },
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "index/scores-pod-score", [],
                            ["score", ["subexpr", "@mut", [
                                    ["get", "score", ["loc", [null, [1, 131],
                                        [1, 136]
                                    ]]]
                                ],
                                [],
                                []
                            ], "click", ["subexpr", "action", [
                                    ["get", "attrs.scoreClick", ["loc", [null, [1, 151],
                                        [1, 167]
                                    ]]],
                                    ["get", "score", ["loc", [null, [1, 168],
                                        [1, 173]
                                    ]]]
                                ],
                                [],
                                ["loc", [null, [1, 143],
                                    [1, 174]
                                ]]
                            ]],
                            ["loc", [null, [1, 100],
                                [1, 176]
                            ]]
                        ]
                    ],
                    locals: ["score"],
                    templates: []
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 176
                            },
                            end: {
                                line: 1,
                                column: 208
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("li");
                        return e.setAttribute(n, "class", "podium"), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function() {
                        return []
                    },
                    statements: [],
                    locals: [],
                    templates: []
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 289
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div"),
                    r = e.createElement("ul");
                e.setAttribute(r, "class", "scores");
                var a = e.createComment("");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createElement("span");
                e.setAttribute(r, "class", "title");
                var a = e.createComment("");
                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = new Array(3);
                return a[0] = e.createAttrMorph(r, "class"), a[1] = e.createMorphAt(e.childAt(r, [0]), 0, 0), a[2] = e.createMorphAt(e.childAt(r, [1]), 0, 0),
                    a
            },
            statements: [
                ["attribute", "class", ["concat", ["info ", ["subexpr", "if", [
                        ["get", "scores.length", ["loc", [null, [1, 22],
                            [1, 35]
                        ]]], "", "no-scores"
                    ],
                    [],
                    ["loc", [null, [1, 17],
                        [1, 52]
                    ]]
                ]]]],
                ["block", "each", [
                        ["get", "scores", ["loc", [null, [1, 81],
                            [1, 87]
                        ]]]
                    ],
                    [], 0, 1, ["loc", [null, [1, 73],
                        [1, 217]
                    ]]
                ],
                ["inline", "t", ["index.scoresPod.highScores"],
                    [],
                    ["loc", [null, [1, 242],
                        [1, 276]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("mobile-panel/templates/components/level-bug", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 18
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(2);
                return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [
                ["content", "yield", ["loc", [null, [1, 0],
                    [1, 9]
                ]]],
                ["content", "level", ["loc", [null, [1, 9],
                    [1, 18]
                ]]]
            ],
            locals: [],
            templates: []
        }
    }())
}), define("mobile-panel/templates/components/page-title", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 0
                            },
                            end: {
                                line: 1,
                                column: 171
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("h1"),
                            r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createElement("a");
                        e.setAttribute(r, "class", "mbackbtn");
                        var a = e.createElement("span");
                        e.appendChild(r, a);
                        var a = e.createComment("");
                        return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = e.childAt(r, [1]),
                            l = new Array(4);
                        return l[0] = e.createAttrMorph(r, "class"), l[1] = e.createMorphAt(r, 0, 0), l[2] = e.createElementMorph(a), l[3] = e.createMorphAt(a, 1, 1), l
                    },
                    statements: [
                        ["attribute", "class", ["concat", ["w_btn ", ["get", "additionalClasses", ["loc", [null, [1, 36],
                            [1, 53]
                        ]]]]]],
                        ["content", "yield", ["loc", [null, [1, 57],
                            [1, 66]
                        ]]],
                        ["element", "action", ["goBackOrDefault"],
                            ["on", "click"],
                            ["loc", [null, [1, 69],
                                [1, 108]
                            ]]
                        ],
                        ["inline", "t", ["backButton.back"],
                            [],
                            ["loc", [null, [1, 139],
                                [1, 162]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 171
                            },
                            end: {
                                line: 1,
                                column: 225
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("h1"),
                            r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = new Array(2);
                        return a[0] = e.createAttrMorph(r, "class"), a[1] = e.createMorphAt(r, 0, 0), a
                    },
                    statements: [
                        ["attribute", "class", ["get", "additionalClasses", ["loc", [null, [1, 191],
                            [1, 208]
                        ]]]],
                        ["content", "yield", ["loc", [null, [1, 211],
                            [1, 220]
                        ]]]
                    ],
                    locals: [],
                    templates: []
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 232
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [
                ["block", "if", [
                        ["get", "canGoBack", ["loc", [null, [1, 6],
                            [1, 15]
                        ]]]
                    ],
                    [], 0, 1, ["loc", [null, [1, 0],
                        [1, 232]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("mobile-panel/templates/components/user-details", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
            return {
                meta: {
                    revision: "Ember@1.13.12",
                    loc: {
                        source: null,
                        start: {
                            line: 1,
                            column: 0
                        },
                        end: {
                            line: 1,
                            column: 144
                        }
                    }
                },
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function(e) {
                    var t = e.createDocumentFragment(),
                        n = e.createElement("span"),
                        r = e.createTextNode("(");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createElement("span");
                    e.setAttribute(n, "class", "truncate");
                    var r = e.createComment("");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createElement("span"),
                        r = e.createTextNode(")");
                    return e.appendChild(n, r), e.appendChild(t, n), t
                },
                buildRenderNodes: function(e, t, n) {
                    var r = new Array(2);
                    return r[0] = e.createMorphAt(e.childAt(t, [1]), 0, 0), r[1] = e.createMorphAt(t, 2, 2, n), r
                },
                statements: [
                    ["inline", "unbound", [
                            ["get", "user.username", ["loc", [null, [1, 78],
                                [1, 91]
                            ]]]
                        ],
                        [],
                        ["loc", [null, [1, 68],
                            [1, 93]
                        ]]
                    ],
                    ["inline", "level-bug", [],
                        ["level", ["subexpr", "@mut", [
                                ["get", "user.level", ["loc", [null, [1, 118],
                                    [1, 128]
                                ]]]
                            ],
                            [],
                            []
                        ]],
                        ["loc", [null, [1, 100],
                            [1, 130]
                        ]]
                    ]
                ],
                locals: [],
                templates: []
            }
        }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 151
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [
                ["block", "if", [
                        ["subexpr", "unbound", [
                                ["get", "user.username", ["loc", [null, [1, 15],
                                    [1, 28]
                                ]]]
                            ],
                            [],
                            ["loc", [null, [1, 6],
                                [1, 29]
                            ]]
                        ]
                    ],
                    [], 0, null, ["loc", [null, [1, 0],
                        [1, 151]
                    ]]
                ]
            ],
            locals: [],
            templates: [e]
        }
    }())
}), define("mobile-panel/templates/components/x-select", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 2,
                        column: 0
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
            },
            statements: [
                ["content", "yield", ["loc", [null, [1, 0],
                    [1, 9]
                ]]]
            ],
            locals: [],
            templates: []
        }
    }())
}), define("mobile-panel/templates/confirmation-modal", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
            var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 38
                                },
                                end: {
                                    line: 1,
                                    column: 71
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("p"),
                                r = e.createComment("");
                            return e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                        },
                        statements: [
                            ["content", "message", ["loc", [null, [1, 56],
                                [1, 67]
                            ]]]
                        ],
                        locals: [],
                        templates: []
                    }
                }(),
                t = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 217
                                },
                                end: {
                                    line: 1,
                                    column: 308
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("li"),
                                r = e.createElement("a");
                            e.setAttribute(r, "id", "modal_cancel"), e.setAttribute(r, "class", "mbtn");
                            var a = e.createComment("");
                            return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = e.childAt(t, [0, 0]),
                                a = new Array(2);
                            return a[0] = e.createElementMorph(r), a[1] = e.createMorphAt(r, 0, 0), a
                        },
                        statements: [
                            ["element", "action", ["cancel"],
                                [],
                                ["loc", [null, [1, 256],
                                    [1, 275]
                                ]]
                            ],
                            ["content", "cancel", ["loc", [null, [1, 289],
                                [1, 299]
                            ]]]
                        ],
                        locals: [],
                        templates: []
                    }
                }();
            return {
                meta: {
                    revision: "Ember@1.13.12",
                    loc: {
                        source: null,
                        start: {
                            line: 1,
                            column: 0
                        },
                        end: {
                            line: 1,
                            column: 320
                        }
                    }
                },
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function(e) {
                    var t = e.createDocumentFragment(),
                        n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createElement("ul");
                    e.setAttribute(n, "class", "modalDialog_links");
                    var r = e.createElement("li"),
                        a = e.createElement("a");
                    e.setAttribute(a, "id", "modal_confirm"), e.setAttribute(a, "class", "mbtn");
                    var l = e.createComment("");
                    e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                    var r = e.createComment("");
                    return e.appendChild(n, r), e.appendChild(t, n), t
                },
                buildRenderNodes: function(e, t, n) {
                    var r = e.childAt(t, [1]),
                        a = e.childAt(r, [0]),
                        l = e.childAt(a, [0]),
                        i = new Array(5);
                    return i[0] = e.createMorphAt(t, 0, 0, n), i[1] = e.createAttrMorph(a, "class"), i[2] = e.createElementMorph(l), i[3] = e.createMorphAt(l, 0, 0), i[4] = e.createMorphAt(r, 1, 1), e.insertBoundary(t, 0), i
                },
                statements: [
                    ["block", "if", [
                            ["get", "message", ["loc", [null, [1, 44],
                                [1, 51]
                            ]]]
                        ],
                        [], 0, null, ["loc", [null, [1, 38],
                            [1, 78]
                        ]]
                    ],
                    ["attribute", "class", ["subexpr", "if", [
                            ["get", "single", ["loc", [null, [1, 123],
                                [1, 129]
                            ]]], "single"
                        ],
                        [],
                        ["loc", [null, [1, 118],
                            [1, 140]
                        ]]
                    ]],
                    ["element", "action", ["confirm"],
                        [],
                        ["loc", [null, [1, 163],
                            [1, 183]
                        ]]
                    ],
                    ["content", "confirm", ["loc", [null, [1, 197],
                        [1, 208]
                    ]]],
                    ["block", "if", [
                            ["get", "cancel", ["loc", [null, [1, 223],
                                [1, 229]
                            ]]]
                        ],
                        [], 1, null, ["loc", [null, [1, 217],
                            [1, 315]
                        ]]
                    ]
                ],
                locals: [],
                templates: [e, t]
            }
        }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 329
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [
                ["block", "view", ["modal"],
                    ["modalController", ["subexpr", "@mut", [
                            ["get", "this", ["loc", [null, [1, 32],
                                [1, 36]
                            ]]]
                        ],
                        [],
                        []
                    ]], 0, null, ["loc", [null, [1, 0],
                        [1, 329]
                    ]]
                ]
            ],
            locals: [],
            templates: [e]
        }
    }())
}), define("mobile-panel/templates/coupon-claimed-modal", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
            return {
                meta: {
                    revision: "Ember@1.13.12",
                    loc: {
                        source: null,
                        start: {
                            line: 1,
                            column: 0
                        },
                        end: {
                            line: 1,
                            column: 349
                        }
                    }
                },
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function(e) {
                    var t = e.createDocumentFragment(),
                        n = e.createElement("p"),
                        r = e.createTextNode("To process your coupon, ");
                    e.appendChild(n, r);
                    var r = e.createElement("strong"),
                        a = e.createTextNode("click the ");
                    e.appendChild(r, a);
                    var a = e.createElement("span");
                    e.setAttribute(a, "class", "close-ico");
                    var l = e.createTextNode("x");
                    e.appendChild(a, l), e.appendChild(r, a);
                    var a = e.createTextNode("in the upper right hand corner ");
                    e.appendChild(r, a), e.appendChild(n, r);
                    var r = e.createTextNode("and return to your game.");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createElement("p"),
                        r = e.createTextNode("If you do not receive an email from ");
                    e.appendChild(n, r);
                    var r = e.createElement("strong"),
                        a = e.createTextNode("no-reply@mail.kongregate.com ");
                    e.appendChild(r, a), e.appendChild(n, r);
                    var r = e.createTextNode(", please check your Spam/Junk mail folders or check back here after 24 hours.");
                    return e.appendChild(n, r), e.appendChild(t, n), t
                },
                buildRenderNodes: function() {
                    return []
                },
                statements: [],
                locals: [],
                templates: []
            }
        }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 358
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [
                ["block", "view", ["modal"],
                    ["modalController", ["subexpr", "@mut", [
                            ["get", "this", ["loc", [null, [1, 32],
                                [1, 36]
                            ]]]
                        ],
                        [],
                        []
                    ]], 0, null, ["loc", [null, [1, 0],
                        [1, 358]
                    ]]
                ]
            ],
            locals: [],
            templates: [e]
        }
    }())
}), define("mobile-panel/templates/create-or-edit-post", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
            var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 38
                                },
                                end: {
                                    line: 1,
                                    column: 170
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("p");
                            e.setAttribute(n, "class", "label");
                            var r = e.createComment("");
                            e.appendChild(n, r), e.appendChild(t, n);
                            var n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(2);
                            return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r[1] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, null), r
                        },
                        statements: [
                            ["inline", "t", ["createOrEditPost.topicTitle"],
                                [],
                                ["loc", [null, [1, 71],
                                    [1, 106]
                                ]]
                            ],
                            ["inline", "input", [],
                                ["elementId", "title", "class", "input", "value", ["subexpr", "@mut", [
                                        ["get", "object.title", ["loc", [null, [1, 156],
                                            [1, 168]
                                        ]]]
                                    ],
                                    [],
                                    []
                                ]],
                                ["loc", [null, [1, 110],
                                    [1, 170]
                                ]]
                            ]
                        ],
                        locals: [],
                        templates: []
                    }
                }(),
                t = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 440
                                },
                                end: {
                                    line: 1,
                                    column: 489
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [
                            ["inline", "t", ["createOrEditPost.post"],
                                [],
                                ["loc", [null, [1, 460],
                                    [1, 489]
                                ]]
                            ]
                        ],
                        locals: [],
                        templates: []
                    }
                }(),
                n = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 489
                                },
                                end: {
                                    line: 1,
                                    column: 528
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [
                            ["inline", "t", ["createOrEditPost.update"],
                                [],
                                ["loc", [null, [1, 497],
                                    [1, 528]
                                ]]
                            ]
                        ],
                        locals: [],
                        templates: []
                    }
                }();
            return {
                meta: {
                    revision: "Ember@1.13.12",
                    loc: {
                        source: null,
                        start: {
                            line: 1,
                            column: 0
                        },
                        end: {
                            line: 1,
                            column: 1085
                        }
                    }
                },
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function(e) {
                    var t = e.createDocumentFragment(),
                        n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createElement("p");
                    e.setAttribute(n, "class", "label");
                    var r = e.createComment("");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createElement("div");
                    e.setAttribute(n, "class", "body-w-controls");
                    var r = e.createElement("div");
                    e.setAttribute(r, "class", "body-container");
                    var a = e.createComment("");
                    e.appendChild(r, a), e.appendChild(n, r);
                    var r = e.createElement("p");
                    e.setAttribute(r, "class", "controls");
                    var a = e.createElement("a");
                    e.setAttribute(a, "id", "save"), e.setAttribute(a, "class", "btn");
                    var l = e.createComment("");
                    e.appendChild(a, l), e.appendChild(r, a);
                    var a = e.createElement("a");
                    e.setAttribute(a, "id", "cancel");
                    var l = e.createComment("");
                    e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createElement("div");
                    e.setAttribute(n, "class", "modal-footer");
                    var r = e.createElement("p"),
                        a = e.createElement("strong"),
                        l = e.createComment("");
                    e.appendChild(a, l);
                    var l = e.createTextNode(" ");
                    e.appendChild(a, l), e.appendChild(r, a);
                    var a = e.createElement("a");
                    e.setAttribute(a, "href", "#");
                    var l = e.createTextNode("(");
                    e.appendChild(a, l);
                    var l = e.createComment("");
                    e.appendChild(a, l);
                    var l = e.createTextNode(")");
                    e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                    var r = e.createElement("p"),
                        a = e.createElement("strong"),
                        l = e.createTextNode("**");
                    e.appendChild(a, l);
                    var l = e.createComment("");
                    e.appendChild(a, l);
                    var l = e.createTextNode("** ");
                    e.appendChild(a, l), e.appendChild(r, a);
                    var a = e.createElement("em"),
                        l = e.createTextNode("_");
                    e.appendChild(a, l);
                    var l = e.createComment("");
                    e.appendChild(a, l);
                    var l = e.createTextNode("_ ");
                    e.appendChild(a, l), e.appendChild(r, a);
                    var a = e.createElement("span"),
                        l = e.createTextNode("![](");
                    e.appendChild(a, l);
                    var l = e.createComment("");
                    e.appendChild(a, l);
                    var l = e.createTextNode(") ");
                    e.appendChild(a, l), e.appendChild(r, a);
                    var a = e.createElement("span"),
                        l = e.createTextNode("[");
                    e.appendChild(a, l);
                    var l = e.createComment("");
                    e.appendChild(a, l);
                    var l = e.createTextNode("](http://www.site.com/)");
                    return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                },
                buildRenderNodes: function(e, t, n) {
                    var r = e.childAt(t, [2]),
                        a = e.childAt(r, [1]),
                        l = e.childAt(a, [0]),
                        i = e.childAt(a, [1]),
                        o = e.childAt(t, [3]),
                        c = e.childAt(o, [0]),
                        s = e.childAt(c, [1]),
                        u = e.childAt(o, [1]),
                        d = new Array(14);
                    return d[0] = e.createMorphAt(t, 0, 0, n), d[1] = e.createMorphAt(e.childAt(t, [1]), 0, 0), d[2] = e.createMorphAt(e.childAt(r, [0]), 0, 0), d[3] = e.createElementMorph(l), d[4] = e.createMorphAt(l, 0, 0), d[5] = e.createElementMorph(i), d[6] = e.createMorphAt(i, 0, 0), d[7] = e.createMorphAt(e.childAt(c, [0]), 0, 0), d[8] = e.createElementMorph(s), d[9] = e.createMorphAt(s, 1, 1), d[10] = e.createMorphAt(e.childAt(u, [0]), 1, 1), d[11] = e.createMorphAt(e.childAt(u, [1]), 1, 1), d[12] = e.createMorphAt(e.childAt(u, [2]), 1, 1), d[13] = e.createMorphAt(e.childAt(u, [3]), 1, 1), e.insertBoundary(t, 0), d
                },
                statements: [
                    ["block", "if", [
                            ["get", "hasTitle", ["loc", [null, [1, 44],
                                [1, 52]
                            ]]]
                        ],
                        [], 0, null, ["loc", [null, [1, 38],
                            [1, 177]
                        ]]
                    ],
                    ["inline", "t", ["createOrEditPost.body"],
                        [],
                        ["loc", [null, [1, 194],
                            [1, 223]
                        ]]
                    ],
                    ["inline", "auto-expanding-textarea", [],
                        ["elementId", "body", "class", "input", "value", ["subexpr", "@mut", [
                                ["get", "object.body", ["loc", [null, [1, 347],
                                    [1, 358]
                                ]]]
                            ],
                            [],
                            []
                        ]],
                        ["loc", [null, [1, 284],
                            [1, 360]
                        ]]
                    ],
                    ["element", "action", ["save"],
                        ["on", "click"],
                        ["loc", [null, [1, 399],
                            [1, 427]
                        ]]
                    ],
                    ["block", "if", [
                            ["get", "object.isNew", ["loc", [null, [1, 446],
                                [1, 458]
                            ]]]
                        ],
                        [], 1, 2, ["loc", [null, [1, 440],
                            [1, 535]
                        ]]
                    ],
                    ["element", "action", ["close"],
                        ["on", "click"],
                        ["loc", [null, [1, 554],
                            [1, 583]
                        ]]
                    ],
                    ["inline", "t", ["createOrEditPost.cancel"],
                        [],
                        ["loc", [null, [1, 584],
                            [1, 615]
                        ]]
                    ],
                    ["inline", "t", ["createOrEditPost.formattingTips"],
                        [],
                        ["loc", [null, [1, 666],
                            [1, 705]
                        ]]
                    ],
                    ["element", "action", ["externalLink", "https://simplemde.com/markdown-guide", !0],
                        [],
                        ["loc", [null, [1, 718],
                            [1, 787]
                        ]]
                    ],
                    ["inline", "t", ["createOrEditPost.fullFormattingGuide"],
                        [],
                        ["loc", [null, [1, 798],
                            [1, 842]
                        ]]
                    ],
                    ["inline", "t", ["createOrEditPost.bold"],
                        [],
                        ["loc", [null, [1, 864],
                            [1, 893]
                        ]]
                    ],
                    ["inline", "t", ["createOrEditPost.italics"],
                        [],
                        ["loc", [null, [1, 910],
                            [1, 942]
                        ]]
                    ],
                    ["inline", "t", ["createOrEditPost.exampleImage"],
                        [],
                        ["loc", [null, [1, 959],
                            [1, 996]
                        ]]
                    ],
                    ["inline", "t", ["createOrEditPost.iAmALink"],
                        [],
                        ["loc", [null, [1, 1012],
                            [1, 1045]
                        ]]
                    ]
                ],
                locals: [],
                templates: [e, t, n]
            }
        }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 1094
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [
                ["block", "view", ["modal"],
                    ["modalController", ["subexpr", "@mut", [
                            ["get", "this", ["loc", [null, [1, 32],
                                [1, 36]
                            ]]]
                        ],
                        [],
                        []
                    ]], 0, null, ["loc", [null, [1, 0],
                        [1, 1094]
                    ]]
                ]
            ],
            locals: [],
            templates: [e]
        }
    }())
}), define("mobile-panel/templates/edit-avatar", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 206
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "avatar-upload-redirect");
                var r = e.createElement("h1");
                e.setAttribute(r, "class", "mh2");
                var a = e.createTextNode("Your deviceâ€™s browser has been opened for you to upload a new avatar.");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createElement("p"),
                    a = e.createElement("a");
                e.setAttribute(a, "class", "mbtn");
                var l = e.createTextNode("Done");
                return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0, 1, 0]),
                    a = new Array(1);
                return a[0] = e.createElementMorph(r), a
            },
            statements: [
                ["element", "action", ["reloadAvatar"],
                    ["on", "click"],
                    ["loc", [null, [1, 138],
                        [1, 174]
                    ]]
                ]
            ],
            locals: [],
            templates: []
        }
    }())
}), define("mobile-panel/templates/edit-profile", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 32
                            },
                            end: {
                                line: 1,
                                column: 90
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createTextNode("Kongregate Settings");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function() {
                        return []
                    },
                    statements: [],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 143
                                },
                                end: {
                                    line: 1,
                                    column: 227
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("strong"),
                                r = e.createTextNode("You must sign-in to update settings");
                            return e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function() {
                            return []
                        },
                        statements: [],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 105
                            },
                            end: {
                                line: 1,
                                column: 239
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["block", "link-to", ["registration-flow"],
                            [], 0, null, ["loc", [null, [1, 143],
                                [1, 239]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e]
                }
            }(),
            n = function() {
                var e = function() {
                        var e = function() {
                            return {
                                meta: {
                                    revision: "Ember@1.13.12",
                                    loc: {
                                        source: null,
                                        start: {
                                            line: 1,
                                            column: 402
                                        },
                                        end: {
                                            line: 1,
                                            column: 466
                                        }
                                    }
                                },
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function(e) {
                                    var t = e.createDocumentFragment(),
                                        n = e.createElement("p");
                                    e.setAttribute(n, "class", "error");
                                    var r = e.createComment("");
                                    return e.appendChild(n, r), e.appendChild(t, n), t
                                },
                                buildRenderNodes: function(e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                                },
                                statements: [
                                    ["content", "error", ["loc", [null, [1, 453],
                                        [1, 462]
                                    ]]]
                                ],
                                locals: ["error"],
                                templates: []
                            }
                        }();
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 357
                                    },
                                    end: {
                                        line: 1,
                                        column: 481
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("div");
                                e.setAttribute(n, "class", "error_block");
                                var r = e.createComment("");
                                return e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                            },
                            statements: [
                                ["block", "each", [
                                        ["get", "errorMessages", ["loc", [null, [1, 410],
                                            [1, 423]
                                        ]]]
                                    ],
                                    [], 0, null, ["loc", [null, [1, 402],
                                        [1, 475]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: [e]
                        }
                    }(),
                    t = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 488
                                    },
                                    end: {
                                        line: 1,
                                        column: 570
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("div");
                                e.setAttribute(n, "id", "email-verification-notice"), e.setAttribute(n, "class", "mnotice");
                                var r = e.createComment("");
                                return e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                            },
                            statements: [
                                ["content", "notice", ["loc", [null, [1, 554],
                                    [1, 564]
                                ]]]
                            ],
                            locals: [],
                            templates: []
                        }
                    }(),
                    n = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 2,
                                        column: 236
                                    },
                                    end: {
                                        line: 3,
                                        column: 140
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("span");
                                e.setAttribute(n, "class", "success_block");
                                var r = e.createComment("");
                                e.appendChild(n, r);
                                var r = e.createTextNode("Â \n");
                                e.appendChild(n, r);
                                var r = e.createElement("a");
                                e.setAttribute(r, "id", "refresh-verification-status"), e.setAttribute(r, "href", "#");
                                var a = e.createComment("");
                                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = e.childAt(t, [0]),
                                    a = e.childAt(r, [2]),
                                    l = new Array(3);
                                return l[0] = e.createMorphAt(r, 0, 0), l[1] = e.createElementMorph(a), l[2] = e.createMorphAt(a, 0, 0), l
                            },
                            statements: [
                                ["inline", "t", ["editProfile.emailVerified"],
                                    [],
                                    ["loc", [null, [2, 296],
                                        [2, 329]
                                    ]]
                                ],
                                ["element", "action", ["refreshVerificationStatus"],
                                    [],
                                    ["loc", [null, [3, 3],
                                        [3, 41]
                                    ]]
                                ],
                                ["inline", "t", ["editProfile.refreshVerificationStatus"],
                                    [],
                                    ["loc", [null, [3, 84],
                                        [3, 129]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }(),
                    r = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 3,
                                        column: 140
                                    },
                                    end: {
                                        line: 4,
                                        column: 307
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("span");
                                e.setAttribute(n, "class", "error_block");
                                var r = e.createComment("");
                                e.appendChild(n, r);
                                var r = e.createTextNode("Â \n");
                                e.appendChild(n, r);
                                var r = e.createElement("a");
                                e.setAttribute(r, "id", "refresh-verification-status"), e.setAttribute(r, "href", "#");
                                var a = e.createComment("");
                                e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n);
                                var n = e.createElement("span");
                                e.setAttribute(n, "class", "msmallprint");
                                var r = e.createElement("a");
                                e.setAttribute(r, "id", "send-verification-email"), e.setAttribute(r, "href", "#"), e.setAttribute(r, "class", "mbtn");
                                var a = e.createComment("");
                                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = e.childAt(t, [0]),
                                    a = e.childAt(r, [2]),
                                    l = e.childAt(t, [1, 0]),
                                    i = new Array(5);
                                return i[0] = e.createMorphAt(r, 0, 0), i[1] = e.createElementMorph(a), i[2] = e.createMorphAt(a, 0, 0), i[3] = e.createElementMorph(l), i[4] = e.createMorphAt(l, 0, 0), i
                            },
                            statements: [
                                ["inline", "t", ["editProfile.emailNotVerified"],
                                    [],
                                    ["loc", [null, [3, 174],
                                        [3, 210]
                                    ]]
                                ],
                                ["element", "action", ["refreshVerificationStatus"],
                                    [],
                                    ["loc", [null, [4, 3],
                                        [4, 41]
                                    ]]
                                ],
                                ["inline", "t", ["editProfile.refreshVerificationStatus"],
                                    [],
                                    ["loc", [null, [4, 84],
                                        [4, 129]
                                    ]]
                                ],
                                ["element", "action", ["sendVerificationEmail"],
                                    [],
                                    ["loc", [null, [4, 169],
                                        [4, 203]
                                    ]]
                                ],
                                ["inline", "t", ["editProfile.sendVerificationEmail"],
                                    [],
                                    ["loc", [null, [4, 255],
                                        [4, 296]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 239
                            },
                            end: {
                                line: 6,
                                column: 89
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("form");
                        e.setAttribute(n, "autocapitalize", "off"), e.setAttribute(n, "autocorrect", "off"), e.setAttribute(n, "autocomplete", "off"), e.setAttribute(n, "class", "mform");
                        var r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createElement("div");
                        e.setAttribute(r, "class", "mgroup avatar");
                        var a = e.createElement("span");
                        e.setAttribute(a, "class", "mlabel username");
                        var l = e.createComment("");
                        e.appendChild(a, l), e.appendChild(r, a);
                        var a = e.createElement("span");
                        e.setAttribute(a, "class", "avatar-info");
                        var l = e.createElement("img");
                        e.setAttribute(l, "class", "user-avatar"), e.appendChild(a, l);
                        var l = e.createElement("a");
                        e.setAttribute(l, "href", "#"), e.setAttribute(l, "class", "mbtn");
                        var i = e.createTextNode("Change Avatar");
                        e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("div");
                        e.setAttribute(r, "class", "mgroup email");
                        var a = e.createElement("span");
                        e.setAttribute(a, "class", "mlabel");
                        var l = e.createTextNode("Email Address");
                        e.appendChild(a, l), e.appendChild(r, a);
                        var a = e.createElement("span");
                        e.setAttribute(a, "class", "msmallprint");
                        var l = e.createComment("");
                        e.appendChild(a, l);
                        var l = e.createTextNode("\n");
                        e.appendChild(a, l);
                        var l = e.createElement("a");
                        e.setAttribute(l, "href", "#"), e.setAttribute(l, "class", "change_email");
                        var i = e.createTextNode("(change)");
                        e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a);
                        var a = e.createElement("label");
                        e.setAttribute(a, "for", "newsletter"), e.setAttribute(a, "class", "mcheckbox msmallprint");
                        var l = e.createComment("");
                        e.appendChild(a, l);
                        var l = e.createTextNode("Subscribe to Newsletter");
                        e.appendChild(a, l), e.appendChild(r, a);
                        var a = e.createComment("");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("div");
                        e.setAttribute(r, "class", "mgroup about");
                        var a = e.createElement("label");
                        e.setAttribute(a, "for", "about");
                        var l = e.createTextNode("About Me");
                        e.appendChild(a, l), e.appendChild(r, a);
                        var a = e.createComment("");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("div");
                        e.setAttribute(r, "class", "mgroup location");
                        var a = e.createElement("label");
                        e.setAttribute(a, "for", "location");
                        var l = e.createTextNode("Location");
                        e.appendChild(a, l), e.appendChild(r, a);
                        var a = e.createComment("");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("div");
                        e.setAttribute(r, "class", "mgroup private");
                        var a = e.createComment("");
                        e.appendChild(r, a);
                        var a = e.createElement("label");
                        e.setAttribute(a, "for", "private"), e.setAttribute(a, "class", "mlabel");
                        var l = e.createTextNode("Private Profile?");
                        e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("div");
                        e.setAttribute(r, "class", "mgroup");
                        var a = e.createElement("label");
                        e.setAttribute(a, "class", "mlabel");
                        var l = e.createTextNode("Password");
                        e.appendChild(a, l), e.appendChild(r, a);
                        var a = e.createElement("a");
                        e.setAttribute(a, "href", "#"), e.setAttribute(a, "class", "mbtn");
                        var l = e.createTextNode("Change Password");
                        e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("div");
                        e.setAttribute(r, "class", "mgroup");
                        var a = e.createElement("label");
                        e.setAttribute(a, "class", "mlabel");
                        var l = e.createComment("");
                        e.appendChild(a, l), e.appendChild(r, a);
                        var a = e.createElement("a");
                        e.setAttribute(a, "id", "manage-mfa"), e.setAttribute(a, "href", "#"), e.setAttribute(a, "class", "mbtn");
                        var l = e.createComment("");
                        e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("div");
                        e.setAttribute(r, "class", "mgroup submit");
                        var a = e.createElement("button");
                        e.setAttribute(a, "type", "submit"), e.setAttribute(a, "class", "mbtn cta_btn");
                        var l = e.createTextNode("Save");
                        e.appendChild(a, l), e.appendChild(r, a);
                        var a = e.createElement("p");
                        e.setAttribute(a, "class", "msmallprint tos");
                        var l = e.createElement("a");
                        e.setAttribute(l, "href", "#");
                        var i = e.createTextNode("Privacy Policy");
                        e.appendChild(l, i), e.appendChild(a, l);
                        var l = e.createTextNode(" |\n");
                        e.appendChild(a, l);
                        var l = e.createElement("a");
                        e.setAttribute(l, "href", "#");
                        var i = e.createTextNode("User Agreement");
                        e.appendChild(l, i), e.appendChild(a, l);
                        var l = e.createTextNode(" |\n");
                        e.appendChild(a, l);
                        var l = e.createElement("a");
                        e.setAttribute(l, "href", "#");
                        var i = e.createTextNode("Cookie Policy");
                        return e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = e.childAt(r, [2]),
                            l = e.childAt(a, [1]),
                            i = e.childAt(l, [0]),
                            o = e.childAt(l, [1]),
                            c = e.childAt(r, [3]),
                            s = e.childAt(c, [1]),
                            u = e.childAt(s, [2]),
                            d = e.childAt(r, [4]),
                            m = e.childAt(d, [0]),
                            p = e.childAt(r, [5]),
                            h = e.childAt(p, [0]),
                            f = e.childAt(r, [7, 1]),
                            b = e.childAt(r, [8]),
                            g = e.childAt(b, [1]),
                            v = e.childAt(r, [9, 1]),
                            C = e.childAt(v, [0]),
                            A = e.childAt(v, [2]),
                            E = e.childAt(v, [4]),
                            y = new Array(22);
                        return y[0] = e.createElementMorph(r), y[1] = e.createMorphAt(r, 0, 0), y[2] = e.createMorphAt(r, 1, 1), y[3] = e.createMorphAt(e.childAt(a, [0]), 0, 0), y[4] = e.createAttrMorph(i, "src"), y[5] = e.createElementMorph(o), y[6] = e.createMorphAt(s, 0, 0), y[7] = e.createElementMorph(u), y[8] = e.createMorphAt(e.childAt(c, [2]), 0, 0), y[9] = e.createMorphAt(c, 3, 3), y[10] = e.createAttrMorph(m, "class"), y[11] = e.createMorphAt(d, 1, 1), y[12] = e.createAttrMorph(h, "class"), y[13] = e.createMorphAt(p, 1, 1), y[14] = e.createMorphAt(e.childAt(r, [6]), 0, 0), y[15] = e.createElementMorph(f), y[16] = e.createMorphAt(e.childAt(b, [0]), 0, 0), y[17] = e.createElementMorph(g), y[18] = e.createMorphAt(g, 0, 0), y[19] = e.createElementMorph(C), y[20] = e.createElementMorph(A), y[21] = e.createElementMorph(E), y
                    },
                    statements: [
                        ["element", "action", ["submit"],
                            ["on", "submit"],
                            ["loc", [null, [1, 311],
                                [1, 342]
                            ]]
                        ],
                        ["block", "if", [
                                ["get", "model.errors", ["loc", [null, [1, 363],
                                    [1, 375]
                                ]]]
                            ],
                            [], 0, null, ["loc", [null, [1, 357],
                                [1, 488]
                            ]]
                        ],
                        ["block", "if", [
                                ["get", "notice", ["loc", [null, [1, 494],
                                    [1, 500]
                                ]]]
                            ],
                            [], 1, null, ["loc", [null, [1, 488],
                                [1, 577]
                            ]]
                        ],
                        ["content", "activeUser.username", ["loc", [null, [1, 634],
                            [1, 657]
                        ]]],
                        ["attribute", "src", ["get", "activeUser.avatarUrl", ["loc", [null, [1, 701],
                            [1, 721]
                        ]]]],
                        ["element", "action", ["changeAvatar"],
                            ["on", "click"],
                            ["loc", [null, [1, 756],
                                [1, 792]
                            ]]
                        ],
                        ["content", "activeUser.emailAddress", ["loc", [null, [1, 929],
                            [1, 956]
                        ]]],
                        ["element", "action", ["changeEmail"],
                            [],
                            ["loc", [null, [2, 3],
                                [2, 27]
                            ]]
                        ],
                        ["inline", "input", [],
                            ["type", "checkbox", "name", "opt-in", "checked", ["subexpr", "@mut", [
                                    ["get", "model.optIn", ["loc", [null, [2, 177],
                                        [2, 188]
                                    ]]]
                                ],
                                [],
                                []
                            ], "class", "mfield"],
                            ["loc", [null, [2, 131],
                                [2, 205]
                            ]]
                        ],
                        ["block", "if", [
                                ["get", "activeUser.emailVerified", ["loc", [null, [2, 242],
                                    [2, 266]
                                ]]]
                            ],
                            [], 2, 3, ["loc", [null, [2, 236],
                                [4, 314]
                            ]]
                        ],
                        ["attribute", "class", ["concat", ["mlabel ", ["subexpr", "if", [
                                ["get", "model.errors.about", ["loc", [null, [4, 384],
                                    [4, 402]
                                ]]], "error"
                            ],
                            [],
                            ["loc", [null, [4, 379],
                                [4, 412]
                            ]]
                        ]]]],
                        ["inline", "auto-expanding-textarea", [],
                            ["name", "about-me", "placeholder", "Tell the world about yourself!", "value", ["subexpr", "@mut", [
                                    ["get", "model.about", ["loc", [null, [4, 523],
                                        [4, 534]
                                    ]]]
                                ],
                                [],
                                []
                            ], "class", "mfield"],
                            ["loc", [null, [4, 430],
                                [4, 551]
                            ]]
                        ],
                        ["attribute", "class", ["concat", ["mlabel ", ["subexpr", "if", [
                                ["get", "model.errors.location", ["loc", [null, [4, 627],
                                    [4, 648]
                                ]]], "error"
                            ],
                            [],
                            ["loc", [null, [4, 622],
                                [4, 658]
                            ]]
                        ]]]],
                        ["inline", "input", [],
                            ["type", "text", "name", "location", "placeholder", "San Francisco, California", "value", ["subexpr", "@mut", [
                                    ["get", "model.location", ["loc", [null, [4, 758],
                                        [4, 772]
                                    ]]]
                                ],
                                [],
                                []
                            ], "class", "mfield"],
                            ["loc", [null, [4, 676],
                                [4, 789]
                            ]]
                        ],
                        ["inline", "input", [],
                            ["type", "checkbox", "name", "private", "checked", ["subexpr", "@mut", [
                                    ["get", "model.private", ["loc", [null, [4, 870],
                                        [4, 883]
                                    ]]]
                                ],
                                [],
                                []
                            ], "class", "mfield"],
                            ["loc", [null, [4, 823],
                                [4, 900]
                            ]]
                        ],
                        ["element", "action", ["changePassword"],
                            [],
                            ["loc", [null, [4, 1027],
                                [4, 1054]
                            ]]
                        ],
                        ["inline", "t", ["editProfile.mfa"],
                            [],
                            ["loc", [null, [4, 1144],
                                [4, 1167]
                            ]]
                        ],
                        ["element", "action", ["manageMfa"],
                            [],
                            ["loc", [null, [4, 1178],
                                [4, 1200]
                            ]]
                        ],
                        ["inline", "t", ["editProfile.manageMfa"],
                            [],
                            ["loc", [null, [4, 1239],
                                [4, 1268]
                            ]]
                        ],
                        ["element", "action", ["externalLink", "/privacy"],
                            [],
                            ["loc", [null, [4, 1391],
                                [4, 1427]
                            ]]
                        ],
                        ["element", "action", ["externalLink", "/user-agreement"],
                            [],
                            ["loc", [null, [5, 3],
                                [5, 46]
                            ]]
                        ],
                        ["element", "action", ["externalLink", "/cookie-policy"],
                            [],
                            ["loc", [null, [6, 3],
                                [6, 45]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t, n, r]
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 6,
                        column: 162
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "user-settings-page");
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "class", "w_bottom_btn");
                var a = e.createComment("");
                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = new Array(3);
                return a[0] = e.createMorphAt(r, 0, 0), a[1] = e.createMorphAt(r, 1, 1), a[2] = e.createMorphAt(e.childAt(r, [2]), 0, 0), a
            },
            statements: [
                ["block", "page-title", [],
                    ["additionalClasses", "mh2"], 0, null, ["loc", [null, [1, 32],
                        [1, 105]
                    ]]
                ],
                ["block", "unless", [
                        ["get", "activeUser.isAuthenticated", ["loc", [null, [1, 115],
                            [1, 141]
                        ]]]
                    ],
                    [], 1, 2, ["loc", [null, [1, 105],
                        [6, 100]
                    ]]
                ],
                ["inline", "render", ["back-button"],
                    [],
                    ["loc", [null, [6, 126],
                        [6, 150]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t, n]
        }
    }())
}), define("mobile-panel/templates/facebook/finalize", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 48
                            },
                            end: {
                                line: 1,
                                column: 199
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("span");
                        e.setAttribute(n, "class", "mfb_linked_email");
                        var r = e.createElement("span");
                        e.setAttribute(r, "class", "msprite ico"), e.appendChild(n, r);
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 1, 1), r
                    },
                    statements: [
                        ["inline", "t", ["facebook.connectedWith"],
                            ["email", ["subexpr", "@mut", [
                                    ["get", "emailAddress", ["loc", [null, [1, 178],
                                        [1, 190]
                                    ]]]
                                ],
                                [],
                                []
                            ]],
                            ["loc", [null, [1, 143],
                                [1, 192]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 463
                                },
                                end: {
                                    line: 1,
                                    column: 527
                                }
                            }
                        },
                        arity: 1,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("li"),
                                r = e.createComment("");
                            return e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                        },
                        statements: [
                            ["inline", "t-error", [
                                    ["get", "error", ["loc", [null, [1, 515],
                                        [1, 520]
                                    ]]]
                                ],
                                [],
                                ["loc", [null, [1, 505],
                                    [1, 522]
                                ]]
                            ]
                        ],
                        locals: ["error"],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 333
                            },
                            end: {
                                line: 1,
                                column: 551
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "class", "error_block");
                        var r = e.createElement("p"),
                            a = e.createElement("strong"),
                            l = e.createComment("");
                        e.appendChild(a, l);
                        var l = e.createTextNode(":");
                        e.appendChild(a, l), e.appendChild(r, a);
                        var a = e.createElement("ul");
                        e.setAttribute(a, "class", "error_list");
                        var l = e.createComment("");
                        return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0, 0]),
                            a = new Array(2);
                        return a[0] = e.createMorphAt(e.childAt(r, [0]), 0, 0), a[1] = e.createMorphAt(e.childAt(r, [1]), 0, 0), a
                    },
                    statements: [
                        ["inline", "t", ["facebook.finalize.couldNotCreateAccount"],
                            [],
                            ["loc", [null, [1, 383],
                                [1, 430]
                            ]]
                        ],
                        ["block", "each", [
                                ["get", "errorDescriptions", ["loc", [null, [1, 471],
                                    [1, 488]
                                ]]]
                            ],
                            [], 0, null, ["loc", [null, [1, 463],
                                [1, 536]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e]
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 1792
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "mfbnew_page");
                var r = e.createElement("h1");
                e.setAttribute(r, "class", "mpagetitle");
                var a = e.createComment("");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createElement("form");
                e.setAttribute(r, "autocapitalize", "off"), e.setAttribute(r, "autocorrect", "off"), e.setAttribute(r, "autocomplete", "off"), e.setAttribute(r, "class", "mform default");
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createElement("p");
                e.setAttribute(a, "class", "mgroup");
                var l = e.createElement("label");
                e.setAttribute(l, "for", "username");
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l);
                var l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createElement("p");
                e.setAttribute(a, "class", "mgroup");
                var l = e.createElement("label");
                e.setAttribute(l, "for", "password");
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l);
                var l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createElement("p");
                e.setAttribute(a, "class", "mgroup");
                var l = e.createElement("label");
                e.setAttribute(l, "for", "emailAddress");
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l);
                var l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createElement("p");
                e.setAttribute(a, "class", "mgroup");
                var l = e.createElement("label"),
                    i = e.createComment("");
                e.appendChild(l, i);
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createElement("p");
                e.setAttribute(a, "class", "mgroup actions");
                var l = e.createElement("input");
                return e.setAttribute(l, "type", "submit"), e.setAttribute(l, "class", "mbtn cta_btn"), e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = e.childAt(r, [1]),
                    l = e.childAt(a, [1]),
                    i = e.childAt(l, [0]),
                    o = e.childAt(a, [2]),
                    c = e.childAt(o, [0]),
                    s = e.childAt(a, [3]),
                    u = e.childAt(s, [0]),
                    d = e.childAt(a, [4, 0]),
                    m = e.childAt(a, [5, 0]),
                    p = new Array(15);
                return p[0] = e.createMorphAt(e.childAt(r, [0]), 0, 0), p[1] = e.createElementMorph(a), p[2] = e.createMorphAt(a, 0, 0), p[3] = e.createAttrMorph(i, "class"), p[4] = e.createMorphAt(i, 0, 0), p[5] = e.createMorphAt(l, 1, 1), p[6] = e.createAttrMorph(c, "class"), p[7] = e.createMorphAt(c, 0, 0), p[8] = e.createMorphAt(o, 1, 1), p[9] = e.createAttrMorph(u, "class"), p[10] = e.createMorphAt(u, 0, 0), p[11] = e.createMorphAt(s, 1, 1), p[12] = e.createMorphAt(d, 0, 0), p[13] = e.createMorphAt(d, 1, 1), p[14] = e.createAttrMorph(m, "value"), p
            },
            statements: [
                ["block", "unless", [
                        ["get", "invalidEmailAddress", ["loc", [null, [1, 58],
                            [1, 77]
                        ]]]
                    ],
                    [], 0, null, ["loc", [null, [1, 48],
                        [1, 210]
                    ]]
                ],
                ["element", "action", ["submit"],
                    ["on", "submit"],
                    ["loc", [null, [1, 279],
                        [1, 310]
                    ]]
                ],
                ["block", "if", [
                        ["get", "errors", ["loc", [null, [1, 339],
                            [1, 345]
                        ]]]
                    ],
                    [], 1, null, ["loc", [null, [1, 333],
                        [1, 558]
                    ]]
                ],
                ["attribute", "class", ["concat", ["mlabel ", ["subexpr", "if", [
                        ["get", "errors.username", ["loc", [null, [1, 617],
                            [1, 632]
                        ]]], "error"
                    ],
                    [],
                    ["loc", [null, [1, 612],
                        [1, 642]
                    ]]
                ]]]],
                ["inline", "t", ["facebook.finalize.username"],
                    [],
                    ["loc", [null, [1, 644],
                        [1, 678]
                    ]]
                ],
                ["inline", "input", [],
                    ["type", "text", "value", ["subexpr", "@mut", [
                            ["get", "username", ["loc", [null, [1, 712],
                                [1, 720]
                            ]]]
                        ],
                        [],
                        []
                    ], "name", "username", "placeholder", ["subexpr", "t", ["facebook.finalize.chooseUsername"],
                        [],
                        ["loc", [null, [1, 749],
                            [1, 787]
                        ]]
                    ], "class", "mfield"],
                    ["loc", [null, [1, 686],
                        [1, 804]
                    ]]
                ],
                ["attribute", "class", ["concat", ["mlabel ", ["subexpr", "if", [
                        ["get", "errors.password", ["loc", [null, [1, 867],
                            [1, 882]
                        ]]], "error"
                    ],
                    [],
                    ["loc", [null, [1, 862],
                        [1, 892]
                    ]]
                ]]]],
                ["inline", "t", ["facebook.finalize.password"],
                    [],
                    ["loc", [null, [1, 894],
                        [1, 928]
                    ]]
                ],
                ["inline", "input", [],
                    ["type", "password", "value", ["subexpr", "@mut", [
                            ["get", "password", ["loc", [null, [1, 966],
                                [1, 974]
                            ]]]
                        ],
                        [],
                        []
                    ], "name", "password", "placeholder", ["subexpr", "t", ["facebook.finalize.choosePassword"],
                        [],
                        ["loc", [null, [1, 1003],
                            [1, 1041]
                        ]]
                    ], "class", "mfield"],
                    ["loc", [null, [1, 936],
                        [1, 1058]
                    ]]
                ],
                ["attribute", "class", ["concat", ["mlabel ", ["subexpr", "if", [
                        ["get", "errors.email", ["loc", [null, [1, 1125],
                            [1, 1137]
                        ]]], "error"
                    ],
                    [],
                    ["loc", [null, [1, 1120],
                        [1, 1147]
                    ]]
                ]]]],
                ["inline", "t", ["facebook.finalize.setEmailAddress"],
                    [],
                    ["loc", [null, [1, 1149],
                        [1, 1190]
                    ]]
                ],
                ["inline", "input", [],
                    ["type", "text", "value", ["subexpr", "@mut", [
                            ["get", "emailAddress", ["loc", [null, [1, 1224],
                                [1, 1236]
                            ]]]
                        ],
                        [],
                        []
                    ], "name", "emailAddress", "placeholder", ["subexpr", "t", ["facebook.finalize.setEmailAddress"],
                        [],
                        ["loc", [null, [1, 1269],
                            [1, 1308]
                        ]]
                    ], "class", "mfield"],
                    ["loc", [null, [1, 1198],
                        [1, 1325]
                    ]]
                ],
                ["inline", "input", [],
                    ["type", "checkbox", "id", "privacy_policy", "checked", ["subexpr", "@mut", [
                            ["get", "privacyPolicyConsent", ["loc", [null, [1, 1406],
                                [1, 1426]
                            ]]]
                        ],
                        [],
                        []
                    ], "class", "mfield"],
                    ["loc", [null, [1, 1354],
                        [1, 1443]
                    ]]
                ],
                ["inline", "t", ["registrationFlow.username.privacyPolicy"],
                    ["ppLink", ["subexpr", "tag-decorator", ["a"],
                        ["class", "pp-link", "href", "#"],
                        ["loc", [null, [1, 1496],
                            [1, 1540]
                        ]]
                    ], "tosLink", ["subexpr", "tag-decorator", ["a"],
                        ["class", "tos-link", "href", "#"],
                        ["loc", [null, [1, 1549],
                            [1, 1594]
                        ]]
                    ], "cookieLink", ["subexpr", "tag-decorator", ["a"],
                        ["class", "cookie-link", "href", "#"],
                        ["loc", [null, [1, 1606],
                            [1, 1654]
                        ]]
                    ]],
                    ["loc", [null, [1, 1443],
                        [1, 1656]
                    ]]
                ],
                ["attribute", "value", ["subexpr", "t", ["facebook.finalize.finish"],
                    [],
                    ["loc", [null, [1, 1721],
                        [1, 1753]
                    ]]
                ]]
            ],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("mobile-panel/templates/facebook/matched", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 22
                            },
                            end: {
                                line: 1,
                                column: 175
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("p");
                        e.setAttribute(n, "class", "mfb_linked_email");
                        var r = e.createElement("span");
                        e.setAttribute(r, "class", "msprite ico"), e.appendChild(n, r);
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 1, 1), r
                    },
                    statements: [
                        ["inline", "t", ["facebook.connectedWith"],
                            ["email", ["subexpr", "@mut", [
                                    ["get", "matchInfo.emailAddress", ["loc", [null, [1, 147],
                                        [1, 169]
                                    ]]]
                                ],
                                [],
                                []
                            ]],
                            ["loc", [null, [1, 112],
                                [1, 171]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 254
                            },
                            end: {
                                line: 1,
                                column: 327
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "t", ["facebook.matched.emailAddressMatches"],
                            [],
                            ["loc", [null, [1, 283],
                                [1, 327]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            n = function() {
                var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 327
                                },
                                end: {
                                    line: 1,
                                    column: 393
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [
                            ["inline", "t", ["facebook.matched.isThisYou"],
                                [],
                                ["loc", [null, [1, 359],
                                    [1, 393]
                                ]]
                            ]
                        ],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 327
                            },
                            end: {
                                line: 1,
                                column: 393
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["block", "if", [
                                ["get", "matchedOnSiteVisitor", ["loc", [null, [1, 337],
                                    [1, 357]
                                ]]]
                            ],
                            [], 0, null, ["loc", [null, [1, 327],
                                [1, 393]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e]
                }
            }(),
            r = function() {
                var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 553
                                },
                                end: {
                                    line: 1,
                                    column: 604
                                }
                            }
                        },
                        arity: 1,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("p"),
                                r = e.createComment("");
                            return e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                        },
                        statements: [
                            ["inline", "t-error", [
                                    ["get", "error", ["loc", [null, [1, 593],
                                        [1, 598]
                                    ]]]
                                ],
                                [],
                                ["loc", [null, [1, 583],
                                    [1, 600]
                                ]]
                            ]
                        ],
                        locals: ["error"],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 514
                            },
                            end: {
                                line: 1,
                                column: 619
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "class", "error_block");
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                    },
                    statements: [
                        ["block", "each", [
                                ["get", "errors", ["loc", [null, [1, 561],
                                    [1, 567]
                                ]]]
                            ],
                            [], 0, null, ["loc", [null, [1, 553],
                                [1, 613]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e]
                }
            }(),
            a = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 626
                            },
                            end: {
                                line: 1,
                                column: 734
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "class", "error_block");
                        var r = e.createElement("p"),
                            a = e.createComment("");
                        return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0, 0]), 0, 0), r
                    },
                    statements: [
                        ["inline", "t", ["facebook.matched.recoveryTokenSent"],
                            [],
                            ["loc", [null, [1, 682],
                                [1, 724]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 2,
                        column: 534
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "mfb_page");
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createElement("h1");
                e.setAttribute(r, "class", "mpagetitle");
                var a = e.createComment("");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createElement("p"),
                    a = e.createComment("");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createElement("form");
                e.setAttribute(r, "autocapitalize", "off"), e.setAttribute(r, "autocorrect", "off"), e.setAttribute(r, "autocomplete", "off"), e.setAttribute(r, "class", "mform");
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createElement("div");
                e.setAttribute(a, "class", "mgroup");
                var l = e.createElement("img");
                e.setAttribute(l, "class", "mavatar"), e.appendChild(a, l);
                var l = e.createElement("p");
                e.setAttribute(l, "class", "musername");
                var i = e.createElement("strong"),
                    o = e.createComment("");
                e.appendChild(i, o), e.appendChild(l, i), e.appendChild(a, l);
                var l = e.createElement("p");
                e.setAttribute(l, "class", "mlabel");
                var i = e.createElement("label");
                e.setAttribute(i, "for", "password");
                var o = e.createComment("");
                e.appendChild(i, o);
                var o = e.createTextNode("\n");
                e.appendChild(i, o), e.appendChild(l, i);
                var i = e.createElement("em"),
                    o = e.createElement("a");
                e.setAttribute(o, "href", "#");
                var c = e.createTextNode("(");
                e.appendChild(o, c);
                var c = e.createComment("");
                e.appendChild(o, c);
                var c = e.createTextNode(")");
                e.appendChild(o, c), e.appendChild(i, o), e.appendChild(l, i), e.appendChild(a, l);
                var l = e.createElement("p");
                e.setAttribute(l, "class", "actions");
                var i = e.createComment("");
                e.appendChild(l, i);
                var i = e.createElement("input");
                e.setAttribute(i, "type", "submit"), e.setAttribute(i, "class", "mbtn cta_btn"), e.appendChild(l, i), e.appendChild(a, l);
                var l = e.createElement("p");
                e.setAttribute(l, "class", "mgroup alt_actions");
                var i = e.createElement("a");
                e.setAttribute(i, "href", "#");
                var o = e.createComment("");
                e.appendChild(i, o), e.appendChild(l, i);
                var i = e.createElement("a");
                e.setAttribute(i, "href", "#");
                var o = e.createComment("");
                return e.appendChild(i, o), e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = e.childAt(r, [3]),
                    l = e.childAt(a, [2]),
                    i = e.childAt(l, [0]),
                    o = e.childAt(l, [2]),
                    c = e.childAt(o, [1, 0]),
                    s = e.childAt(l, [3]),
                    u = e.childAt(s, [1]),
                    d = e.childAt(l, [4]),
                    m = e.childAt(d, [0]),
                    p = e.childAt(d, [1]),
                    h = new Array(17);
                return h[0] = e.createMorphAt(r, 0, 0), h[1] = e.createMorphAt(e.childAt(r, [1]), 0, 0), h[2] = e.createMorphAt(e.childAt(r, [2]), 0, 0), h[3] = e.createElementMorph(a), h[4] = e.createMorphAt(a, 0, 0), h[5] = e.createMorphAt(a, 1, 1), h[6] = e.createAttrMorph(i, "src"), h[7] = e.createMorphAt(e.childAt(l, [1, 0]), 0, 0), h[8] = e.createMorphAt(e.childAt(o, [0]), 0, 0), h[9] = e.createElementMorph(c), h[10] = e.createMorphAt(c, 1, 1), h[11] = e.createMorphAt(s, 0, 0), h[12] = e.createAttrMorph(u, "value"), h[13] = e.createElementMorph(m), h[14] = e.createMorphAt(m, 0, 0), h[15] = e.createElementMorph(p), h[16] = e.createMorphAt(p, 0, 0), h
            },
            statements: [
                ["block", "if", [
                        ["get", "matchedOnEmailAddress", ["loc", [null, [1, 28],
                            [1, 49]
                        ]]]
                    ],
                    [], 0, null, ["loc", [null, [1, 22],
                        [1, 182]
                    ]]
                ],
                ["inline", "t", ["facebook.matched.linkYourAccounts"],
                    [],
                    ["loc", [null, [1, 205],
                        [1, 246]
                    ]]
                ],
                ["block", "if", [
                        ["get", "matchedOnEmailAddress", ["loc", [null, [1, 260],
                            [1, 281]
                        ]]]
                    ],
                    [], 1, 2, ["loc", [null, [1, 254],
                        [1, 400]
                    ]]
                ],
                ["element", "action", ["submit"],
                    ["on", "submit"],
                    ["loc", [null, [1, 468],
                        [1, 499]
                    ]]
                ],
                ["block", "if", [
                        ["get", "errors", ["loc", [null, [1, 520],
                            [1, 526]
                        ]]]
                    ],
                    [], 3, null, ["loc", [null, [1, 514],
                        [1, 626]
                    ]]
                ],
                ["block", "if", [
                        ["get", "recoveryTokenSuccess", ["loc", [null, [1, 632],
                            [1, 652]
                        ]]]
                    ],
                    [], 4, null, ["loc", [null, [1, 626],
                        [1, 741]
                    ]]
                ],
                ["attribute", "src", ["get", "avatarUrl", ["loc", [null, [1, 772],
                    [1, 781]
                ]]]],
                ["content", "username", ["loc", [null, [1, 829],
                    [1, 841]
                ]]],
                ["inline", "t", ["facebook.matched.enterYourKongregatePassword"],
                    [],
                    ["loc", [null, [1, 894],
                        [1, 946]
                    ]]
                ],
                ["element", "action", ["forgotPassword"],
                    ["on", "click"],
                    ["loc", [null, [2, 15],
                        [2, 53]
                    ]]
                ],
                ["inline", "t", ["facebook.matched.forgotIt"],
                    [],
                    ["loc", [null, [2, 64],
                        [2, 97]
                    ]]
                ],
                ["inline", "input", [],
                    ["type", "password", "id", "password", "name", "password", "value", ["subexpr", "@mut", [
                            ["get", "password", ["loc", [null, [2, 190],
                                [2, 198]
                            ]]]
                        ],
                        [],
                        []
                    ], "class", "mfield"],
                    ["loc", [null, [2, 130],
                        [2, 215]
                    ]]
                ],
                ["attribute", "value", ["subexpr", "t", ["facebook.matched.linkAccounts"],
                    [],
                    ["loc", [null, [2, 242],
                        [2, 279]
                    ]]
                ]],
                ["element", "action", ["finalize"],
                    ["on", "click"],
                    ["loc", [null, [2, 338],
                        [2, 370]
                    ]]
                ],
                ["inline", "t", ["facebook.matched.createANewAccount"],
                    [],
                    ["loc", [null, [2, 380],
                        [2, 422]
                    ]]
                ],
                ["element", "action", ["forceCreate"],
                    ["on", "click"],
                    ["loc", [null, [2, 429],
                        [2, 464]
                    ]]
                ],
                ["inline", "t", ["facebook.matched.skipThis"],
                    [],
                    ["loc", [null, [2, 474],
                        [2, 507]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t, n, r, a]
        }
    }())
}), define("mobile-panel/templates/forgot-password", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 31
                            },
                            end: {
                                line: 1,
                                column: 105
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "t", ["forgotPassword.title"],
                            [],
                            ["loc", [null, [1, 77],
                                [1, 105]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 277
                                },
                                end: {
                                    line: 1,
                                    column: 328
                                }
                            }
                        },
                        arity: 1,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("p"),
                                r = e.createComment("");
                            return e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                        },
                        statements: [
                            ["inline", "t-error", [
                                    ["get", "error", ["loc", [null, [1, 317],
                                        [1, 322]
                                    ]]]
                                ],
                                [],
                                ["loc", [null, [1, 307],
                                    [1, 324]
                                ]]
                            ]
                        ],
                        locals: ["error"],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 238
                            },
                            end: {
                                line: 1,
                                column: 343
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "class", "error_block");
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                    },
                    statements: [
                        ["block", "each", [
                                ["get", "errors", ["loc", [null, [1, 285],
                                    [1, 291]
                                ]]]
                            ],
                            [], 0, null, ["loc", [null, [1, 277],
                                [1, 337]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e]
                }
            }(),
            n = function() {
                var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 437
                                },
                                end: {
                                    line: 1,
                                    column: 485
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [
                            ["inline", "t", ["forgotPassword.login"],
                                [],
                                ["loc", [null, [1, 457],
                                    [1, 485]
                                ]]
                            ]
                        ],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 350
                            },
                            end: {
                                line: 1,
                                column: 503
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "class", "error_block");
                        var r = e.createElement("p"),
                            a = e.createComment("");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = new Array(2);
                        return a[0] = e.createMorphAt(e.childAt(r, [0]), 0, 0), a[1] = e.createMorphAt(r, 1, 1), a
                    },
                    statements: [
                        ["inline", "t", ["forgotPassword.recoveryTokenSent"],
                            [],
                            ["loc", [null, [1, 393],
                                [1, 433]
                            ]]
                        ],
                        ["block", "link-to", ["login"],
                            [], 0, null, ["loc", [null, [1, 437],
                                [1, 497]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e]
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 849
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "mpassrecover_page");
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createElement("form");
                e.setAttribute(r, "autocapitalize", "off"), e.setAttribute(r, "autocorrect", "off"), e.setAttribute(r, "autocomplete", "off"), e.setAttribute(r, "class", "mform default");
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createElement("p");
                e.setAttribute(a, "class", "mgroup");
                var l = e.createElement("label");
                e.setAttribute(l, "for", "username");
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l);
                var l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createElement("p");
                e.setAttribute(a, "class", "mgroup");
                var l = e.createElement("input");
                return e.setAttribute(l, "type", "submit"), e.setAttribute(l, "class", "mbtn cta_btn"), e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = e.childAt(r, [1]),
                    l = e.childAt(a, [2]),
                    i = e.childAt(l, [0]),
                    o = e.childAt(a, [3, 0]),
                    c = new Array(8);
                return c[0] = e.createMorphAt(r, 0, 0), c[1] = e.createElementMorph(a), c[2] = e.createMorphAt(a, 0, 0), c[3] = e.createMorphAt(a, 1, 1), c[4] = e.createAttrMorph(i, "class"), c[5] = e.createMorphAt(i, 0, 0), c[6] = e.createMorphAt(l, 1, 1), c[7] = e.createAttrMorph(o, "value"), c
            },
            statements: [
                ["block", "page-title", [],
                    ["additionalClasses", "mpagetitle"], 0, null, ["loc", [null, [1, 31],
                        [1, 120]
                    ]]
                ],
                ["element", "action", ["submit"],
                    ["on", "submit"],
                    ["loc", [null, [1, 184],
                        [1, 215]
                    ]]
                ],
                ["block", "if", [
                        ["get", "errors", ["loc", [null, [1, 244],
                            [1, 250]
                        ]]]
                    ],
                    [], 1, null, ["loc", [null, [1, 238],
                        [1, 350]
                    ]]
                ],
                ["block", "if", [
                        ["get", "success", ["loc", [null, [1, 356],
                            [1, 363]
                        ]]]
                    ],
                    [], 2, null, ["loc", [null, [1, 350],
                        [1, 510]
                    ]]
                ],
                ["attribute", "class", ["concat", ["mlabel ", ["get", "error", ["loc", [null, [1, 566],
                    [1, 571]
                ]]]]]],
                ["inline", "t", ["forgotPassword.usernameOrEmail"],
                    [],
                    ["loc", [null, [1, 575],
                        [1, 613]
                    ]]
                ],
                ["inline", "input", [],
                    ["id", "username", "placeholder", ["subexpr", "t", ["forgotPassword.usernameOrEmail"],
                        [],
                        ["loc", [null, [1, 655],
                            [1, 691]
                        ]]
                    ], "value", ["subexpr", "@mut", [
                            ["get", "username", ["loc", [null, [1, 698],
                                [1, 706]
                            ]]]
                        ],
                        [],
                        []
                    ], "class", "mfield"],
                    ["loc", [null, [1, 621],
                        [1, 723]
                    ]]
                ],
                ["attribute", "value", ["subexpr", "t", ["forgotPassword.recoverPassword"],
                    [],
                    ["loc", [null, [1, 772],
                        [1, 810]
                    ]]
                ]]
            ],
            locals: [],
            templates: [e, t, n]
        }
    }())
}), define("mobile-panel/templates/forum-list-item", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
            return {
                meta: {
                    revision: "Ember@1.13.12",
                    loc: {
                        source: null,
                        start: {
                            line: 1,
                            column: 0
                        },
                        end: {
                            line: 3,
                            column: 59
                        }
                    }
                },
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function(e) {
                    var t = e.createDocumentFragment(),
                        n = e.createElement("div");
                    e.setAttribute(n, "class", "forum-info-block");
                    var r = e.createElement("p");
                    e.setAttribute(r, "class", "forum-title");
                    var a = e.createElement("span");
                    e.setAttribute(a, "class", "name");
                    var l = e.createComment("");
                    e.appendChild(a, l), e.appendChild(r, a);
                    var a = e.createElement("span");
                    e.setAttribute(a, "class", "forum-meta");
                    var l = e.createElement("strong"),
                        i = e.createComment("");
                    e.appendChild(l, i);
                    var i = e.createTextNode("\n");
                    e.appendChild(l, i), e.appendChild(a, l);
                    var l = e.createComment("");
                    e.appendChild(a, l);
                    var l = e.createTextNode("\nÂ»");
                    e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                    var r = e.createElement("p");
                    e.setAttribute(r, "class", "desc");
                    var a = e.createComment("");
                    return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                },
                buildRenderNodes: function(e, t, n) {
                    var r = e.childAt(t, [0]),
                        a = e.childAt(r, [0]),
                        l = e.childAt(a, [1]),
                        i = new Array(4);
                    return i[0] = e.createMorphAt(e.childAt(a, [0]), 0, 0), i[1] = e.createMorphAt(e.childAt(l, [0]), 0, 0), i[2] = e.createMorphAt(l, 1, 1), i[3] = e.createMorphAt(e.childAt(r, [1]), 0, 0), i
                },
                statements: [
                    ["content", "displayName", ["loc", [null, [1, 117],
                        [1, 132]
                    ]]],
                    ["inline", "unbound", [
                            ["subexpr", "number-with-delimiter", [
                                    ["get", "topicsCount", ["loc", [null, [1, 205],
                                        [1, 216]
                                    ]]]
                                ],
                                [],
                                ["loc", [null, [1, 182],
                                    [1, 217]
                                ]]
                            ]
                        ],
                        [],
                        ["loc", [null, [1, 172],
                            [1, 219]
                        ]]
                    ],
                    ["inline", "unbound", [
                            ["subexpr", "k-pluralize", [
                                    ["get", "topicsCount", ["loc", [null, [2, 32],
                                        [2, 43]
                                    ]]], "Topics"
                                ],
                                [],
                                ["loc", [null, [2, 19],
                                    [2, 53]
                                ]]
                            ]
                        ],
                        [],
                        ["loc", [null, [2, 9],
                            [2, 55]
                        ]]
                    ],
                    ["content", "description", ["loc", [null, [3, 34],
                        [3, 49]
                    ]]]
                ],
                locals: [],
                templates: []
            }
        }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 3,
                        column: 71
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [
                ["block", "link-to", ["forum", ["get", "model", ["loc", [null, [1, 19],
                        [1, 24]
                    ]]]],
                    ["class", "forum-link"], 0, null, ["loc", [null, [1, 0],
                        [3, 71]
                    ]]
                ]
            ],
            locals: [],
            templates: [e]
        }
    }())
}), define("mobile-panel/templates/forum-search-box", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 87
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("a");
                e.setAttribute(n, "class", "forum-btn search");
                var r = e.createElement("span");
                e.setAttribute(r, "class", "ico");
                var a = e.createTextNode("s");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createComment("");
                return e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(e.childAt(t, [0]), 1, 1), r
            },
            statements: [
                ["inline", "t", ["forumSearchBox.search"],
                    [],
                    ["loc", [null, [1, 54],
                        [1, 83]
                    ]]
                ]
            ],
            locals: [],
            templates: []
        }
    }())
}), define("mobile-panel/templates/forum-search-modal", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
            return {
                meta: {
                    revision: "Ember@1.13.12",
                    loc: {
                        source: null,
                        start: {
                            line: 1,
                            column: 0
                        },
                        end: {
                            line: 1,
                            column: 392
                        }
                    }
                },
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function(e) {
                    var t = e.createDocumentFragment(),
                        n = e.createElement("form");
                    e.setAttribute(n, "autocapitalize", "off"), e.setAttribute(n, "autocorrect", "off"), e.setAttribute(n, "autocomplete", "off");
                    var r = e.createElement("p");
                    e.setAttribute(r, "class", "search-input-outer");
                    var a = e.createComment("");
                    e.appendChild(r, a), e.appendChild(n, r);
                    var r = e.createElement("a");
                    e.setAttribute(r, "id", "modal_confirm"), e.setAttribute(r, "title", "search"), e.setAttribute(r, "class", "search-btn mbtn");
                    var a = e.createElement("span");
                    e.setAttribute(a, "class", "ico");
                    var l = e.createTextNode("s");
                    return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                },
                buildRenderNodes: function(e, t, n) {
                    var r = e.childAt(t, [0]),
                        a = e.childAt(r, [1]),
                        l = new Array(3);
                    return l[0] = e.createElementMorph(r), l[1] = e.createMorphAt(e.childAt(r, [0]), 0, 0), l[2] = e.createElementMorph(a), l
                },
                statements: [
                    ["element", "action", ["submit"],
                        ["on", "submit"],
                        ["loc", [null, [1, 102],
                            [1, 133]
                        ]]
                    ],
                    ["inline", "input", [],
                        ["rows", "40", "value", ["subexpr", "@mut", [
                                ["get", "value", ["loc", [null, [1, 188],
                                    [1, 193]
                                ]]]
                            ],
                            [],
                            []
                        ], "placeholder", ["subexpr", "t", ["forumSearchModal.placeholder"],
                            [],
                            ["loc", [null, [1, 206],
                                [1, 240]
                            ]]
                        ], "class", "mfield search-input"],
                        ["loc", [null, [1, 164],
                            [1, 270]
                        ]]
                    ],
                    ["element", "action", ["submit"],
                        [],
                        ["loc", [null, [1, 296],
                            [1, 315]
                        ]]
                    ]
                ],
                locals: [],
                templates: []
            }
        }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 401
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [
                ["block", "view", ["modal"],
                    ["modalController", ["subexpr", "@mut", [
                            ["get", "this", ["loc", [null, [1, 32],
                                [1, 36]
                            ]]]
                        ],
                        [],
                        []
                    ]], 0, null, ["loc", [null, [1, 0],
                        [1, 401]
                    ]]
                ]
            ],
            locals: [],
            templates: [e]
        }
    }())
}), define("mobile-panel/templates/forum-search", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 120
                                    },
                                    end: {
                                        line: 1,
                                        column: 194
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode(":");
                                e.appendChild(t, n);
                                var n = e.createElement("strong"),
                                    r = e.createComment("");
                                e.appendChild(n, r);
                                var r = e.createTextNode(" ");
                                return e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(2);
                                return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(e.childAt(t, [2]), 0, 0), e.insertBoundary(t, 0), r
                            },
                            statements: [
                                ["inline", "t", ["forumSearch.searchResults"],
                                    [],
                                    ["loc", [null, [1, 133],
                                        [1, 166]
                                    ]]
                                ],
                                ["content", "query", ["loc", [null, [1, 175],
                                    [1, 184]
                                ]]]
                            ],
                            locals: [],
                            templates: []
                        }
                    }(),
                    t = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 194
                                    },
                                    end: {
                                        line: 1,
                                        column: 234
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["inline", "t", ["forumSearch.searchForums"],
                                    [],
                                    ["loc", [null, [1, 202],
                                        [1, 234]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }(),
                    n = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 279
                                    },
                                    end: {
                                        line: 1,
                                        column: 540
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("div");
                                e.setAttribute(n, "class", "suggestions");
                                var r = e.createElement("h2");
                                e.setAttribute(r, "class", "h2");
                                var a = e.createComment("");
                                e.appendChild(r, a);
                                var a = e.createTextNode(":");
                                e.appendChild(r, a), e.appendChild(n, r);
                                var r = e.createElement("ol");
                                e.setAttribute(r, "class", "search_tips");
                                var a = e.createElement("li"),
                                    l = e.createComment("");
                                e.appendChild(a, l), e.appendChild(r, a);
                                var a = e.createElement("li"),
                                    l = e.createComment("");
                                e.appendChild(a, l), e.appendChild(r, a);
                                var a = e.createElement("li"),
                                    l = e.createComment("");
                                return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = e.childAt(t, [0]),
                                    a = e.childAt(r, [1]),
                                    l = new Array(4);
                                return l[0] = e.createMorphAt(e.childAt(r, [0]), 0, 0), l[1] = e.createMorphAt(e.childAt(a, [0]), 0, 0), l[2] = e.createMorphAt(e.childAt(a, [1]), 0, 0), l[3] = e.createMorphAt(e.childAt(a, [2]), 0, 0), l
                            },
                            statements: [
                                ["inline", "t", ["forumSearch.hereAreAFewTips"],
                                    [],
                                    ["loc", [null, [1, 336],
                                        [1, 371]
                                    ]]
                                ],
                                ["inline", "t", ["forumSearch.spellTermsCorrectly"],
                                    [],
                                    ["loc", [null, [1, 405],
                                        [1, 444]
                                    ]]
                                ],
                                ["inline", "t", ["forumSearch.useStar"],
                                    [],
                                    ["loc", [null, [1, 453],
                                        [1, 480]
                                    ]]
                                ],
                                ["inline", "t", ["forumSearch.notOverlyStrict"],
                                    [],
                                    ["loc", [null, [1, 489],
                                        [1, 524]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 39
                            },
                            end: {
                                line: 1,
                                column: 551
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "class", "header");
                        var r = e.createElement("h1");
                        e.setAttribute(r, "class", "h1 w_search");
                        var a = e.createComment("");
                        e.appendChild(r, a);
                        var a = e.createComment("");
                        e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0, 0]),
                            a = new Array(3);
                        return a[0] = e.createMorphAt(r, 0, 0), a[1] = e.createMorphAt(r, 1, 1), a[2] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, null), a
                    },
                    statements: [
                        ["block", "if", [
                                ["get", "query", ["loc", [null, [1, 126],
                                    [1, 131]
                                ]]]
                            ],
                            [], 0, 1, ["loc", [null, [1, 120],
                                [1, 241]
                            ]]
                        ],
                        ["inline", "view", ["forum-search-box"],
                            [],
                            ["loc", [null, [1, 241],
                                [1, 268]
                            ]]
                        ],
                        ["block", "unless", [
                                ["get", "query", ["loc", [null, [1, 289],
                                    [1, 294]
                                ]]]
                            ],
                            [], 2, null, ["loc", [null, [1, 279],
                                [1, 551]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t, n]
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 551
                            },
                            end: {
                                line: 1,
                                column: 656
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "class", "header");
                        var r = e.createElement("h1");
                        e.setAttribute(r, "class", "h1 w_search");
                        var a = e.createComment("");
                        return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0, 0]), 0, 0), r
                    },
                    statements: [
                        ["inline", "t", ["forumSearch.temporarilyUnavailable"],
                            [],
                            ["loc", [null, [1, 603],
                                [1, 645]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            n = function() {
                var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 764
                                    },
                                    end: {
                                        line: 1,
                                        column: 851
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("div");
                                e.setAttribute(n, "class", "gsc-result");
                                var r = e.createElement("div");
                                e.setAttribute(r, "class", "gs-snippet");
                                var a = e.createTextNode("No Results");
                                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function() {
                                return []
                            },
                            statements: [],
                            locals: [],
                            templates: []
                        }
                    }(),
                    t = function() {
                        var e = function() {
                            return {
                                meta: {
                                    revision: "Ember@1.13.12",
                                    loc: {
                                        source: null,
                                        start: {
                                            line: 1,
                                            column: 936
                                        },
                                        end: {
                                            line: 1,
                                            column: 1184
                                        }
                                    }
                                },
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function(e) {
                                    var t = e.createDocumentFragment(),
                                        n = e.createElement("div");
                                    e.setAttribute(n, "class", "gsc-result");
                                    var r = e.createElement("div");
                                    e.setAttribute(r, "class", "gs-result");
                                    var a = e.createElement("a");
                                    e.setAttribute(a, "class", "gs-title");
                                    var l = e.createComment("");
                                    e.appendChild(a, l), e.appendChild(r, a);
                                    var a = e.createElement("div");
                                    e.setAttribute(a, "class", "gs-snippet");
                                    var l = e.createComment("");
                                    return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                                },
                                buildRenderNodes: function(e, t, n) {
                                    var r = e.childAt(t, [0, 0]),
                                        a = e.childAt(r, [0]),
                                        l = new Array(3);
                                    return l[0] = e.createAttrMorph(a, "href"), l[1] = e.createMorphAt(a, 0, 0), l[2] = e.createMorphAt(e.childAt(r, [1]), 0, 0), l
                                },
                                statements: [
                                    ["attribute", "href", ["get", "post.forumSearchResult.url", ["loc", [null, [1, 1018],
                                        [1, 1044]
                                    ]]]],
                                    ["content", "post.forumSearchResult.pageTitle", ["loc", [null, [1, 1064],
                                        [1, 1100]
                                    ]]],
                                    ["content", "post.forumSearchResult.bodyContent", ["loc", [null, [1, 1128],
                                        [1, 1166]
                                    ]]]
                                ],
                                locals: ["post"],
                                templates: []
                            }
                        }();
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 851
                                    },
                                    end: {
                                        line: 1,
                                        column: 1223
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("p");
                                e.setAttribute(n, "class", "gsc-result-info");
                                var r = e.createComment("");
                                e.appendChild(n, r), e.appendChild(t, n);
                                var n = e.createElement("div");
                                e.setAttribute(n, "class", "gsc-resultsRoot");
                                var r = e.createComment("");
                                e.appendChild(n, r), e.appendChild(t, n);
                                var n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(3);
                                return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r[1] = e.createMorphAt(e.childAt(t, [1]), 0, 0), r[2] = e.createMorphAt(t, 2, 2, n), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["content", "resultsHeader", ["loc", [null, [1, 886],
                                    [1, 903]
                                ]]],
                                ["block", "each", [
                                        ["get", "posts", ["loc", [null, [1, 944],
                                            [1, 949]
                                        ]]]
                                    ],
                                    [], 0, null, ["loc", [null, [1, 936],
                                        [1, 1193]
                                    ]]
                                ],
                                ["inline", "partial", ["pagination"],
                                    [],
                                    ["loc", [null, [1, 1199],
                                        [1, 1223]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: [e]
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 722
                            },
                            end: {
                                line: 1,
                                column: 1236
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "class", "gsc-control-cse");
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                    },
                    statements: [
                        ["block", "if", [
                                ["get", "noResults", ["loc", [null, [1, 770],
                                    [1, 779]
                                ]]]
                            ],
                            [], 0, 1, ["loc", [null, [1, 764],
                                [1, 1230]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t]
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 1255
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "forum_wrap search-results");
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "id", "searchresults");
                var a = e.createComment("");
                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = e.childAt(r, [1]),
                    l = new Array(3);
                return l[0] = e.createMorphAt(r, 0, 0), l[1] = e.createAttrMorph(a, "class"), l[2] = e.createMorphAt(a, 0, 0), l
            },
            statements: [
                ["block", "if", [
                        ["get", "activeUser.forumSearchEnabled", ["loc", [null, [1, 45],
                            [1, 74]
                        ]]]
                    ],
                    [], 0, 1, ["loc", [null, [1, 39],
                        [1, 663]
                    ]]
                ],
                ["attribute", "class", ["subexpr", "if", [
                        ["get", "resultsVisible", ["loc", [null, [1, 698],
                            [1, 712]
                        ]]], "show"
                    ],
                    [],
                    ["loc", [null, [1, 693],
                        [1, 721]
                    ]]
                ]],
                ["block", "if", [
                        ["get", "query", ["loc", [null, [1, 728],
                            [1, 733]
                        ]]]
                    ],
                    [], 2, null, ["loc", [null, [1, 722],
                        [1, 1243]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t, n]
        }
    }())
}), define("mobile-panel/templates/forum-toolbar", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
            var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 60
                            },
                            end: {
                                line: 1,
                                column: 255
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("span");
                        e.setAttribute(n, "class", "ico plus");
                        var r = e.createTextNode("+");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "t", ["forumToolbar.newTopic"],
                            [],
                            ["loc", [null, [1, 226],
                                [1, 255]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }();
            return {
                meta: {
                    revision: "Ember@1.13.12",
                    loc: {
                        source: null,
                        start: {
                            line: 1,
                            column: 0
                        },
                        end: {
                            line: 1,
                            column: 270
                        }
                    }
                },
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function(e) {
                    var t = e.createDocumentFragment(),
                        n = e.createElement("div");
                    e.setAttribute(n, "class", "ctrl new-topic-ctrl");
                    var r = e.createComment("");
                    return e.appendChild(n, r), e.appendChild(t, n), t
                },
                buildRenderNodes: function(e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                },
                statements: [
                    ["block", "view", ["restricted-access-button"],
                        ["classNames", "forum-btn", "action", "newTopic", "errorMessage", ["subexpr", "t", ["forums.restrictAccess"],
                            [],
                            ["loc", [null, [1, 149],
                                [1, 176]
                            ]]
                        ], "_controller", ["subexpr", "@mut", [
                                ["get", "this", ["loc", [null, [1, 189],
                                    [1, 193]
                                ]]]
                            ],
                            [],
                            []
                        ]], 0, null, ["loc", [null, [1, 60],
                            [1, 264]
                        ]]
                    ]
                ],
                locals: [],
                templates: [e]
            }
        }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 344
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createElement("div");
                e.setAttribute(n, "class", "ctrl search-ctrl");
                var r = e.createComment("");
                return e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(2);
                return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(e.childAt(t, [1]), 0, 0), e.insertBoundary(t, 0), r
            },
            statements: [
                ["block", "unless", [
                        ["get", "forum.subforums", ["loc", [null, [1, 10],
                            [1, 25]
                        ]]]
                    ],
                    [], 0, null, ["loc", [null, [1, 0],
                        [1, 281]
                    ]]
                ],
                ["inline", "view", ["forum-search-box"],
                    [],
                    ["loc", [null, [1, 311],
                        [1, 338]
                    ]]
                ]
            ],
            locals: [],
            templates: [e]
        }
    }())
}), define("mobile-panel/templates/forum", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 52
                            },
                            end: {
                                line: 1,
                                column: 119
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "t", ["forum.title"],
                            ["name", ["subexpr", "@mut", [
                                    ["get", "name", ["loc", [null, [1, 113],
                                        [1, 117]
                                    ]]]
                                ],
                                [],
                                []
                            ]],
                            ["loc", [null, [1, 90],
                                [1, 119]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 180
                                },
                                end: {
                                    line: 1,
                                    column: 250
                                }
                            }
                        },
                        arity: 1,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [
                            ["inline", "render", ["forum-list-item", ["get", "subforum", ["loc", [null, [1, 240],
                                    [1, 248]
                                ]]]],
                                [],
                                ["loc", [null, [1, 213],
                                    [1, 250]
                                ]]
                            ]
                        ],
                        locals: ["subforum"],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 140
                            },
                            end: {
                                line: 1,
                                column: 264
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("ul");
                        e.setAttribute(n, "class", "forum-list");
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                    },
                    statements: [
                        ["block", "each", [
                                ["get", "subforums", ["loc", [null, [1, 188],
                                    [1, 197]
                                ]]]
                            ],
                            [], 0, null, ["loc", [null, [1, 180],
                                [1, 259]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e]
                }
            }(),
            n = function() {
                var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 295
                                    },
                                    end: {
                                        line: 1,
                                        column: 371
                                    }
                                }
                            },
                            arity: 1,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["inline", "render", ["topic-list-item", ["get", "topic", ["loc", [null, [1, 364],
                                        [1, 369]
                                    ]]]],
                                    [],
                                    ["loc", [null, [1, 337],
                                        [1, 371]
                                    ]]
                                ]
                            ],
                            locals: ["topic"],
                            templates: []
                        }
                    }(),
                    t = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 380
                                    },
                                    end: {
                                        line: 1,
                                        column: 645
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("li");
                                e.setAttribute(n, "class", "forum-item-spacer");
                                var r = e.createElement("a");
                                e.setAttribute(r, "class", "show-more");
                                var a = e.createElement("span");
                                e.setAttribute(a, "aria-hidden", "true"), e.setAttribute(a, "class", "ico pinned");
                                var l = e.createTextNode("p");
                                e.appendChild(a, l), e.appendChild(r, a);
                                var a = e.createElement("span");
                                e.setAttribute(a, "class", "txt");
                                var l = e.createComment("");
                                return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = e.childAt(t, [0]),
                                    a = new Array(2);
                                return a[0] = e.createElementMorph(r), a[1] = e.createMorphAt(e.childAt(r, [0, 1]), 0, 0), a
                            },
                            statements: [
                                ["element", "action", ["showAllStickies"],
                                    ["on", "click"],
                                    ["loc", [null, [1, 417],
                                        [1, 456]
                                    ]]
                                ],
                                ["inline", "t", ["forum.showStickyThreads"],
                                    ["count", ["subexpr", "@mut", [
                                            ["get", "hiddenStickyCount", ["loc", [null, [1, 610],
                                                [1, 627]
                                            ]]]
                                        ],
                                        [],
                                        []
                                    ]],
                                    ["loc", [null, [1, 574],
                                        [1, 629]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }(),
                    n = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 652
                                    },
                                    end: {
                                        line: 1,
                                        column: 719
                                    }
                                }
                            },
                            arity: 1,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["inline", "render", ["topic-list-item", ["get", "topic", ["loc", [null, [1, 712],
                                        [1, 717]
                                    ]]]],
                                    [],
                                    ["loc", [null, [1, 685],
                                        [1, 719]
                                    ]]
                                ]
                            ],
                            locals: ["topic"],
                            templates: []
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 264
                            },
                            end: {
                                line: 1,
                                column: 757
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("ul");
                        e.setAttribute(n, "class", "forum-list");
                        var r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createComment("");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = new Array(4);
                        return a[0] = e.createMorphAt(r, 0, 0), a[1] = e.createMorphAt(r, 1, 1), a[2] = e.createMorphAt(r, 2, 2), a[3] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, null), a
                    },
                    statements: [
                        ["block", "each", [
                                ["get", "displayedStickyTopics", ["loc", [null, [1, 303],
                                    [1, 324]
                                ]]]
                            ],
                            [], 0, null, ["loc", [null, [1, 295],
                                [1, 380]
                            ]]
                        ],
                        ["block", "if", [
                                ["get", "showShowAllStickiesButton", ["loc", [null, [1, 386],
                                    [1, 411]
                                ]]]
                            ],
                            [], 1, null, ["loc", [null, [1, 380],
                                [1, 652]
                            ]]
                        ],
                        ["block", "each", [
                                ["get", "normalTopics", ["loc", [null, [1, 660],
                                    [1, 672]
                                ]]]
                            ],
                            [], 2, null, ["loc", [null, [1, 652],
                                [1, 728]
                            ]]
                        ],
                        ["inline", "partial", ["pagination"],
                            [],
                            ["loc", [null, [1, 733],
                                [1, 757]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t, n]
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 770
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "forum_wrap threads");
                var r = e.createElement("div");
                e.setAttribute(r, "class", "header");
                var a = e.createComment("");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createComment("");
                return e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = new Array(2);
                return a[0] = e.createMorphAt(e.childAt(r, [0]), 0, 0), a[1] = e.createMorphAt(r, 1, 1), a
            },
            statements: [
                ["block", "page-title", [],
                    ["additionalClasses", "h1"], 0, null, ["loc", [null, [1, 52],
                        [1, 134]
                    ]]
                ],
                ["block", "if", [
                        ["get", "subforums", ["loc", [null, [1, 146],
                            [1, 155]
                        ]]]
                    ],
                    [], 1, 2, ["loc", [null, [1, 140],
                        [1, 764]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t, n]
        }
    }())
}), define("mobile-panel/templates/game/badges", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 58
                            },
                            end: {
                                line: 1,
                                column: 112
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createTextNode("Achievements");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function() {
                        return []
                    },
                    statements: [],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 166
                                },
                                end: {
                                    line: 1,
                                    column: 246
                                }
                            }
                        },
                        arity: 1,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [
                            ["inline", "badge-item", [],
                                ["activeUser", ["subexpr", "@mut", [
                                        ["get", "activeUser", ["loc", [null, [1, 222],
                                            [1, 232]
                                        ]]]
                                    ],
                                    [],
                                    []
                                ], "badge", ["subexpr", "@mut", [
                                        ["get", "badge", ["loc", [null, [1, 239],
                                            [1, 244]
                                        ]]]
                                    ],
                                    [],
                                    []
                                ]],
                                ["loc", [null, [1, 198],
                                    [1, 246]
                                ]]
                            ]
                        ],
                        locals: ["badge"],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 127
                            },
                            end: {
                                line: 1,
                                column: 260
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("ul");
                        e.setAttribute(n, "class", "mbadges");
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                    },
                    statements: [
                        ["block", "each", [
                                ["get", "game.badges", ["loc", [null, [1, 174],
                                    [1, 185]
                                ]]]
                            ],
                            [], 0, null, ["loc", [null, [1, 166],
                                [1, 255]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e]
                }
            }(),
            n = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 260
                            },
                            end: {
                                line: 1,
                                column: 528
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "class", "mbadge_upsell_outer");
                        var r = e.createElement("div");
                        e.setAttribute(r, "class", "mbadge_upsell_inner");
                        var a = e.createElement("div");
                        e.setAttribute(a, "class", "mbadge_upsell_block");
                        var l = e.createElement("h2");
                        e.setAttribute(l, "class", "mbadge_upsell_title");
                        var i = e.createTextNode("Achievements coming soon!");
                        e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a);
                        var a = e.createElement("div");
                        e.setAttribute(a, "class", "mbadge_upsell_block");
                        var l = e.createElement("span");
                        return e.setAttribute(l, "class", "mbadge_upsell_badges"), e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function() {
                        return []
                    },
                    statements: [],
                    locals: [],
                    templates: []
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 782
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "mgameinfo_outer");
                var r = e.createElement("div");
                e.setAttribute(r, "class", "mgameinfo_inner");
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "class", "badges_explanation");
                var a = e.createElement("h2"),
                    l = e.createTextNode("About Badges");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createElement("p"),
                    l = e.createTextNode("Complete in game tasks to earn Kongregate badges and points. Show off your gaming skills to friends by earning them in all Kongregate mobile games and on Kongregate.com!");
                return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0, 0]),
                    a = new Array(2);
                return a[0] = e.createMorphAt(r, 0, 0), a[1] = e.createMorphAt(r, 1, 1), a
            },
            statements: [
                ["block", "page-title", [],
                    ["additionalClasses", "mtitle"], 0, null, ["loc", [null, [1, 58],
                        [1, 127]
                    ]]
                ],
                ["block", "if", [
                        ["get", "game.badges", ["loc", [null, [1, 133],
                            [1, 144]
                        ]]]
                    ],
                    [], 1, 2, ["loc", [null, [1, 127],
                        [1, 535]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t, n]
        }
    }())
}), define("mobile-panel/templates/game/faq", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 24
                            },
                            end: {
                                line: 1,
                                column: 92
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode(" support");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
                    },
                    statements: [
                        ["content", "game.title", ["loc", [null, [1, 70],
                            [1, 84]
                        ]]]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 125
                            },
                            end: {
                                line: 2,
                                column: 57
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("p"),
                            r = e.createTextNode("There was an error loading the FAQ.\n");
                        e.appendChild(n, r);
                        var r = e.createElement("a");
                        e.setAttribute(r, "href", "#");
                        var a = e.createTextNode("Please try again.");
                        return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0, 1]),
                            a = new Array(1);
                        return a[0] = e.createElementMorph(r), a
                    },
                    statements: [
                        ["element", "action", ["reload"],
                            [],
                            ["loc", [null, [2, 3],
                                [2, 22]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            n = function() {
                var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 2,
                                    column: 65
                                },
                                end: {
                                    line: 2,
                                    column: 114
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createUnsafeMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [
                            ["content", "gameFaq.content", ["loc", [null, [2, 93],
                                [2, 114]
                            ]]]
                        ],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 2,
                                column: 57
                            },
                            end: {
                                line: 2,
                                column: 123
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["block", "view", ["game/faq-content"],
                            [], 0, null, ["loc", [null, [2, 65],
                                [2, 123]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e]
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 2,
                        column: 264
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "mhelp_page");
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "class", "mfaq");
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createElement("p");
                e.setAttribute(a, "class", "mfaq_more_help");
                var l = e.createElement("strong"),
                    i = e.createTextNode("Need more help?");
                e.appendChild(l, i), e.appendChild(a, l);
                var l = e.createComment("");
                return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = e.childAt(r, [1]),
                    l = new Array(3);
                return l[0] = e.createMorphAt(r, 0, 0), l[1] = e.createMorphAt(a, 0, 0), l[2] = e.createMorphAt(e.childAt(a, [1]), 1, 1), l
            },
            statements: [
                ["block", "page-title", [],
                    ["additionalClasses", "mpagetitle"], 0, null, ["loc", [null, [1, 24],
                        [1, 107]
                    ]]
                ],
                ["block", "if", [
                        ["get", "error", ["loc", [null, [1, 131],
                            [1, 136]
                        ]]]
                    ],
                    [], 1, 2, ["loc", [null, [1, 125],
                        [2, 130]
                    ]]
                ],
                ["inline", "link-to", ["Contact us", "game.support"],
                    ["class", "mbtn cta_btn"],
                    ["loc", [null, [2, 188],
                        [2, 248]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t, n]
        }
    }())
}), define("mobile-panel/templates/game/maintenance", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 170
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "merror_outer");
                var r = e.createElement("div");
                e.setAttribute(r, "class", "merror_inner");
                var a = e.createElement("p"),
                    l = e.createElement("strong"),
                    i = e.createTextNode("We'll be right back!");
                e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createElement("p"),
                    l = e.createTextNode("Kongbot is working hard to get you up and running again");
                return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function() {
                return []
            },
            statements: [],
            locals: [],
            templates: []
        }
    }())
}), define("mobile-panel/templates/game/scores", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 38
                                },
                                end: {
                                    line: 1,
                                    column: 154
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("strong"),
                                r = e.createTextNode("Sign in to record high scores and earn achievements");
                            return e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function() {
                            return []
                        },
                        statements: [],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 0
                            },
                            end: {
                                line: 1,
                                column: 166
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["block", "link-to", ["registration-flow"],
                            ["class", "warning"], 0, null, ["loc", [null, [1, 38],
                                [1, 166]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e]
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 233
                            },
                            end: {
                                line: 1,
                                column: 414
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "view", ["select"],
                            ["content", ["subexpr", "@mut", [
                                    ["get", "game.highScoreStatistics", ["loc", [null, [1, 303],
                                        [1, 327]
                                    ]]]
                                ],
                                [],
                                []
                            ], "optionLabelPath", "content.displayName", "optionValuePath", "content.id", "value", ["subexpr", "@mut", [
                                    ["get", "statisticId", ["loc", [null, [1, 401],
                                        [1, 412]
                                    ]]]
                                ],
                                [],
                                []
                            ]],
                            ["loc", [null, [1, 279],
                                [1, 414]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            n = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 461
                            },
                            end: {
                                line: 1,
                                column: 672
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "class", "user");
                        var r = e.createElement("img");
                        e.setAttribute(r, "class", "avatar"), e.appendChild(n, r);
                        var r = e.createElement("span"),
                            a = e.createTextNode("My Score:");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("strong");
                        e.setAttribute(r, "id", "myscore"), e.setAttribute(r, "class", "truncate");
                        var a = e.createComment("");
                        return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = e.childAt(r, [0]),
                            l = new Array(2);
                        return l[0] = e.createAttrMorph(a, "src"), l[1] = e.createMorphAt(e.childAt(r, [2]), 0, 0), l
                    },
                    statements: [
                        ["attribute", "src", ["get", "activeUser.avatarUrl", ["loc", [null, [1, 524],
                            [1, 544]
                        ]]]],
                        ["inline", "number-with-delimiter", [
                                ["get", "userScore", ["loc", [null, [1, 646],
                                    [1, 655]
                                ]]]
                            ],
                            [],
                            ["loc", [null, [1, 622],
                                [1, 657]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            r = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 1165
                            },
                            end: {
                                line: 2,
                                column: 73
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "class", "no_achievements");
                        var r = e.createElement("p"),
                            a = e.createTextNode("There was a problem retrieving the score list, please\n");
                        e.appendChild(r, a);
                        var a = e.createElement("a");
                        e.setAttribute(a, "href", "#");
                        var l = e.createTextNode("try again.");
                        return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0, 0, 1]),
                            a = new Array(1);
                        return a[0] = e.createElementMorph(r), a
                    },
                    statements: [
                        ["element", "action", ["loadScores", ["get", "currentPages", ["loc", [null, [2, 25],
                                [2, 37]
                            ]]]],
                            [],
                            ["loc", [null, [2, 3],
                                [2, 39]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            a = function() {
                var e = function() {
                        var e = function() {
                            var e = function() {
                                return {
                                    meta: {
                                        revision: "Ember@1.13.12",
                                        loc: {
                                            source: null,
                                            start: {
                                                line: 2,
                                                column: 347
                                            },
                                            end: {
                                                line: 2,
                                                column: 435
                                            }
                                        }
                                    },
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function(e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createComment("");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function(e, t, n) {
                                        var r = new Array(1);
                                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                    },
                                    statements: [
                                        ["content", "scoreWithRank.score.username", ["loc", [null, [2, 403],
                                            [2, 435]
                                        ]]]
                                    ],
                                    locals: [],
                                    templates: []
                                }
                            }();
                            return {
                                meta: {
                                    revision: "Ember@1.13.12",
                                    loc: {
                                        source: null,
                                        start: {
                                            line: 2,
                                            column: 192
                                        },
                                        end: {
                                            line: 2,
                                            column: 579
                                        }
                                    }
                                },
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function(e) {
                                    var t = e.createDocumentFragment(),
                                        n = e.createElement("tr"),
                                        r = e.createElement("td"),
                                        a = e.createComment("");
                                    e.appendChild(r, a), e.appendChild(n, r);
                                    var r = e.createElement("td"),
                                        a = e.createElement("img");
                                    e.setAttribute(a, "class", "avatar"), e.appendChild(r, a);
                                    var a = e.createElement("span");
                                    e.setAttribute(a, "class", "truncate");
                                    var l = e.createComment("");
                                    e.appendChild(a, l), e.appendChild(r, a);
                                    var a = e.createElement("span");
                                    e.setAttribute(a, "class", "mlvl");
                                    var l = e.createComment("");
                                    e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                                    var r = e.createElement("td"),
                                        a = e.createComment("");
                                    return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                                },
                                buildRenderNodes: function(e, t, n) {
                                    var r = e.childAt(t, [0]),
                                        a = e.childAt(r, [1]),
                                        l = e.childAt(a, [0]),
                                        i = new Array(5);
                                    return i[0] = e.createMorphAt(e.childAt(r, [0]), 0, 0), i[1] = e.createAttrMorph(l, "src"), i[2] = e.createMorphAt(e.childAt(a, [1]), 0, 0), i[3] = e.createMorphAt(e.childAt(a, [2]), 0, 0), i[4] = e.createMorphAt(e.childAt(r, [2]), 0, 0), i
                                },
                                statements: [
                                    ["content", "scoreWithRank.rank", ["loc", [null, [2, 235],
                                        [2, 257]
                                    ]]],
                                    ["attribute", "src", ["get", "scoreWithRank.score.avatarUrl", ["loc", [null, [2, 277],
                                        [2, 306]
                                    ]]]],
                                    ["block", "link-to", ["profile.show", ["get", "scoreWithRank.score.username", ["loc", [null, [2, 373],
                                            [2, 401]
                                        ]]]],
                                        [], 0, null, ["loc", [null, [2, 347],
                                            [2, 447]
                                        ]]
                                    ],
                                    ["content", "scoreWithRank.score.level", ["loc", [null, [2, 473],
                                        [2, 502]
                                    ]]],
                                    ["inline", "number-with-delimiter", [
                                            ["get", "scoreWithRank.score.score", ["loc", [null, [2, 542],
                                                [2, 567]
                                            ]]]
                                        ],
                                        [],
                                        ["loc", [null, [2, 518],
                                            [2, 569]
                                        ]]
                                    ]
                                ],
                                locals: ["scoreWithRank"],
                                templates: [e]
                            }
                        }();
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 2,
                                        column: 81
                                    },
                                    end: {
                                        line: 2,
                                        column: 834
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("table");
                                e.setAttribute(n, "class", "scoretable");
                                var r = e.createElement("thead"),
                                    a = e.createElement("tr"),
                                    l = e.createElement("th"),
                                    i = e.createTextNode("RANK");
                                e.appendChild(l, i), e.appendChild(a, l);
                                var l = e.createElement("th"),
                                    i = e.createTextNode("USER");
                                e.appendChild(l, i), e.appendChild(a, l);
                                var l = e.createElement("th"),
                                    i = e.createTextNode("SCORE");
                                e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                                var r = e.createElement("tbody"),
                                    a = e.createComment("");
                                e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n);
                                var n = e.createElement("div");
                                e.setAttribute(n, "class", "pagination");
                                var r = e.createElement("a");
                                e.setAttribute(r, "id", "prev"), e.setAttribute(r, "href", "#");
                                var a = e.createTextNode("Previous");
                                e.appendChild(r, a), e.appendChild(n, r);
                                var r = e.createElement("a");
                                e.setAttribute(r, "id", "next"), e.setAttribute(r, "href", "#");
                                var a = e.createTextNode("Next");
                                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = e.childAt(t, [1]),
                                    a = e.childAt(r, [0]),
                                    l = e.childAt(r, [1]),
                                    i = new Array(5);
                                return i[0] = e.createMorphAt(e.childAt(t, [0, 1]), 0, 0), i[1] = e.createAttrMorph(a, "class"), i[2] = e.createElementMorph(a), i[3] = e.createAttrMorph(l, "class"), i[4] = e.createElementMorph(l), i
                            },
                            statements: [
                                ["block", "each", [
                                        ["get", "scores", ["loc", [null, [2, 200],
                                            [2, 206]
                                        ]]]
                                    ],
                                    [], 0, null, ["loc", [null, [2, 192],
                                        [2, 588]
                                    ]]
                                ],
                                ["attribute", "class", ["concat", ["prev ", ["subexpr", "if", [
                                        ["get", "hasPrevious", ["loc", [null, [2, 693],
                                            [2, 704]
                                        ]]], "", "disabled"
                                    ],
                                    [],
                                    ["loc", [null, [2, 688],
                                        [2, 720]
                                    ]]
                                ]]]],
                                ["element", "action", ["previousPage"],
                                    [],
                                    ["loc", [null, [2, 641],
                                        [2, 666]
                                    ]]
                                ],
                                ["attribute", "class", ["concat", ["next ", ["subexpr", "if", [
                                        ["get", "hasNext", ["loc", [null, [2, 795],
                                            [2, 802]
                                        ]]], "", "disabled"
                                    ],
                                    [],
                                    ["loc", [null, [2, 790],
                                        [2, 818]
                                    ]]
                                ]]]],
                                ["element", "action", ["nextPage"],
                                    [],
                                    ["loc", [null, [2, 747],
                                        [2, 768]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: [e]
                        }
                    }(),
                    t = function() {
                        var e = function() {
                                var e = function() {
                                    return {
                                        meta: {
                                            revision: "Ember@1.13.12",
                                            loc: {
                                                source: null,
                                                start: {
                                                    line: 2,
                                                    column: 892
                                                },
                                                end: {
                                                    line: 2,
                                                    column: 952
                                                }
                                            }
                                        },
                                        arity: 0,
                                        cachedFragment: null,
                                        hasRendered: !1,
                                        buildFragment: function(e) {
                                            var t = e.createDocumentFragment(),
                                                n = e.createTextNode("Sign in to see friend scores");
                                            return e.appendChild(t, n), t
                                        },
                                        buildRenderNodes: function() {
                                            return []
                                        },
                                        statements: [],
                                        locals: [],
                                        templates: []
                                    }
                                }();
                                return {
                                    meta: {
                                        revision: "Ember@1.13.12",
                                        loc: {
                                            source: null,
                                            start: {
                                                line: 2,
                                                column: 874
                                            },
                                            end: {
                                                line: 2,
                                                column: 964
                                            }
                                        }
                                    },
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function(e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createComment("");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function(e, t, n) {
                                        var r = new Array(1);
                                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                    },
                                    statements: [
                                        ["block", "link-to", ["registration-flow"],
                                            [], 0, null, ["loc", [null, [2, 892],
                                                [2, 964]
                                            ]]
                                        ]
                                    ],
                                    locals: [],
                                    templates: [e]
                                }
                            }(),
                            t = function() {
                                return {
                                    meta: {
                                        revision: "Ember@1.13.12",
                                        loc: {
                                            source: null,
                                            start: {
                                                line: 2,
                                                column: 964
                                            },
                                            end: {
                                                line: 2,
                                                column: 1043
                                            }
                                        }
                                    },
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function(e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createTextNode("No scores have been recorded yet. Set one now to claim the #1 position!");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function() {
                                        return []
                                    },
                                    statements: [],
                                    locals: [],
                                    templates: []
                                }
                            }();
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 2,
                                        column: 834
                                    },
                                    end: {
                                        line: 2,
                                        column: 1060
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("div");
                                e.setAttribute(n, "class", "no_achievements");
                                var r = e.createElement("p"),
                                    a = e.createComment("");
                                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(e.childAt(t, [0, 0]), 0, 0), r
                            },
                            statements: [
                                ["block", "if", [
                                        ["get", "showUpsell", ["loc", [null, [2, 880],
                                            [2, 890]
                                        ]]]
                                    ],
                                    [], 0, 1, ["loc", [null, [2, 874],
                                        [2, 1050]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: [e, t]
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 2,
                                column: 73
                            },
                            end: {
                                line: 2,
                                column: 1067
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["block", "if", [
                                ["get", "scores", ["loc", [null, [2, 87],
                                    [2, 93]
                                ]]]
                            ],
                            [], 0, 1, ["loc", [null, [2, 81],
                                [2, 1067]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t]
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 2,
                        column: 1080
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createElement("div");
                e.setAttribute(n, "class", "mhighscores_page");
                var r = e.createElement("div");
                e.setAttribute(r, "class", "mtitle_group");
                var a = e.createComment("");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "class", "mtabs_header");
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createElement("ul");
                e.setAttribute(a, "id", "controls"), e.setAttribute(a, "class", "tabs");
                var l = e.createElement("li");
                e.setAttribute(l, "id", "today");
                var i = e.createTextNode("DAILY");
                e.appendChild(l, i), e.appendChild(a, l);
                var l = e.createElement("li");
                e.setAttribute(l, "id", "weekly");
                var i = e.createTextNode("WEEKLY");
                e.appendChild(l, i), e.appendChild(a, l);
                var l = e.createElement("li");
                e.setAttribute(l, "id", "lifetime");
                var i = e.createTextNode("LIFETIME");
                e.appendChild(l, i), e.appendChild(a, l);
                var l = e.createElement("li");
                e.setAttribute(l, "id", "friends");
                var i = e.createTextNode("FRIENDS");
                e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createComment("");
                return e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [1]),
                    a = e.childAt(r, [1]),
                    l = e.childAt(a, [1]),
                    i = e.childAt(l, [0]),
                    o = e.childAt(l, [1]),
                    c = e.childAt(l, [2]),
                    s = e.childAt(l, [3]),
                    u = new Array(12);
                return u[0] = e.createMorphAt(t, 0, 0, n), u[1] = e.createMorphAt(e.childAt(r, [0]), 0, 0), u[2] = e.createMorphAt(a, 0, 0), u[3] = e.createAttrMorph(i, "class"), u[4] = e.createElementMorph(i), u[5] = e.createAttrMorph(o, "class"), u[6] = e.createElementMorph(o), u[7] = e.createAttrMorph(c, "class"), u[8] = e.createElementMorph(c), u[9] = e.createAttrMorph(s, "class"), u[10] = e.createElementMorph(s), u[11] = e.createMorphAt(r, 2, 2), e.insertBoundary(t, 0), u
            },
            statements: [
                ["block", "unless", [
                        ["get", "activeUser.isAuthenticated", ["loc", [null, [1, 10],
                            [1, 36]
                        ]]]
                    ],
                    [], 0, null, ["loc", [null, [1, 0],
                        [1, 177]
                    ]]
                ],
                ["block", "page-title", [],
                    ["additionalClasses", "mpagetitle"], 1, null, ["loc", [null, [1, 233],
                        [1, 429]
                    ]]
                ],
                ["block", "if", [
                        ["get", "activeUser.isAuthenticated", ["loc", [null, [1, 467],
                            [1, 493]
                        ]]]
                    ],
                    [], 2, null, ["loc", [null, [1, 461],
                        [1, 679]
                    ]]
                ],
                ["attribute", "class", ["concat", ["tab ", ["subexpr", "if", [
                        ["get", "todayActive", ["loc", [null, [1, 778],
                            [1, 789]
                        ]]], "activetab"
                    ],
                    [],
                    ["loc", [null, [1, 773],
                        [1, 803]
                    ]]
                ]]]],
                ["element", "action", ["changeTab", "todayScores"],
                    [],
                    ["loc", [null, [1, 725],
                        [1, 761]
                    ]]
                ],
                ["attribute", "class", ["concat", ["tab ", ["subexpr", "if", [
                        ["get", "weeklyActive", ["loc", [null, [1, 885],
                            [1, 897]
                        ]]], "activetab"
                    ],
                    [],
                    ["loc", [null, [1, 880],
                        [1, 911]
                    ]]
                ]]]],
                ["element", "action", ["changeTab", "weeklyScores"],
                    [],
                    ["loc", [null, [1, 831],
                        [1, 868]
                    ]]
                ],
                ["attribute", "class", ["concat", ["tab ", ["subexpr", "if", [
                        ["get", "lifetimeActive", ["loc", [null, [1, 998],
                            [1, 1012]
                        ]]], "activetab"
                    ],
                    [],
                    ["loc", [null, [1, 993],
                        [1, 1026]
                    ]]
                ]]]],
                ["element", "action", ["changeTab", "lifetimeScores"],
                    [],
                    ["loc", [null, [1, 942],
                        [1, 981]
                    ]]
                ],
                ["attribute", "class", ["concat", ["tab ", ["subexpr", "if", [
                        ["get", "friendsActive", ["loc", [null, [1, 1113],
                            [1, 1126]
                        ]]], "activetab"
                    ],
                    [],
                    ["loc", [null, [1, 1108],
                        [1, 1140]
                    ]]
                ]]]],
                ["element", "action", ["changeTab", "friendsScores"],
                    [],
                    ["loc", [null, [1, 1058],
                        [1, 1096]
                    ]]
                ],
                ["block", "if", [
                        ["get", "error", ["loc", [null, [1, 1171],
                            [1, 1176]
                        ]]]
                    ],
                    [], 3, 4, ["loc", [null, [1, 1165],
                        [2, 1074]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t, n, r, a]
        }
    }())
}), define("mobile-panel/templates/game/support", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 24
                            },
                            end: {
                                line: 1,
                                column: 111
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "t", ["support.title"],
                            ["gameName", ["subexpr", "@mut", [
                                    ["get", "game.title", ["loc", [null, [1, 99],
                                        [1, 109]
                                    ]]]
                                ],
                                [],
                                []
                            ]],
                            ["loc", [null, [1, 70],
                                [1, 111]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 293
                                },
                                end: {
                                    line: 1,
                                    column: 346
                                }
                            }
                        },
                        arity: 1,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("li"),
                                r = e.createComment("");
                            return e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                        },
                        statements: [
                            ["inline", "t-error", [
                                    ["get", "error", ["loc", [null, [1, 334],
                                        [1, 339]
                                    ]]]
                                ],
                                [],
                                ["loc", [null, [1, 324],
                                    [1, 341]
                                ]]
                            ]
                        ],
                        locals: ["error"],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 186
                            },
                            end: {
                                line: 1,
                                column: 366
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "class", "error_block");
                        var r = e.createElement("p"),
                            a = e.createElement("strong"),
                            l = e.createComment("");
                        e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("ul");
                        e.setAttribute(r, "class", "error_list");
                        var a = e.createComment("");
                        return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = new Array(2);
                        return a[0] = e.createMorphAt(e.childAt(r, [0, 0]), 0, 0), a[1] = e.createMorphAt(e.childAt(r, [1]), 0, 0), a
                    },
                    statements: [
                        ["inline", "t", ["support.error"],
                            [],
                            ["loc", [null, [1, 236],
                                [1, 257]
                            ]]
                        ],
                        ["block", "each", [
                                ["get", "errors", ["loc", [null, [1, 301],
                                    [1, 307]
                                ]]]
                            ],
                            [], 0, null, ["loc", [null, [1, 293],
                                [1, 355]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e]
                }
            }(),
            n = function() {
                var e = function() {
                    var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 728
                                    },
                                    end: {
                                        line: 1,
                                        column: 774
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["inline", "t", [
                                        ["get", "type.label", ["loc", [null, [1, 762],
                                            [1, 772]
                                        ]]]
                                    ],
                                    [],
                                    ["loc", [null, [1, 758],
                                        [1, 774]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 695
                                },
                                end: {
                                    line: 1,
                                    column: 787
                                }
                            }
                        },
                        arity: 1,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [
                            ["block", "x-option", [],
                                ["value", ["subexpr", "@mut", [
                                        ["get", "type.value", ["loc", [null, [1, 746],
                                            [1, 756]
                                        ]]]
                                    ],
                                    [],
                                    []
                                ]], 0, null, ["loc", [null, [1, 728],
                                    [1, 787]
                                ]]
                            ]
                        ],
                        locals: ["type"],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 630
                            },
                            end: {
                                line: 1,
                                column: 796
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["block", "each", [
                                ["get", "feedbackTypes", ["loc", [null, [1, 703],
                                    [1, 716]
                                ]]]
                            ],
                            [], 0, null, ["loc", [null, [1, 695],
                                [1, 796]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e]
                }
            }(),
            r = function() {
                var e = function() {
                    var e = function() {
                        var e = function() {
                            return {
                                meta: {
                                    revision: "Ember@1.13.12",
                                    loc: {
                                        source: null,
                                        start: {
                                            line: 1,
                                            column: 1030
                                        },
                                        end: {
                                            line: 1,
                                            column: 1108
                                        }
                                    }
                                },
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function(e) {
                                    var t = e.createDocumentFragment(),
                                        n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function(e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [
                                    ["content", "missingAccomplishment.label", ["loc", [null, [1, 1077],
                                        [1, 1108]
                                    ]]]
                                ],
                                locals: [],
                                templates: []
                            }
                        }();
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 971
                                    },
                                    end: {
                                        line: 1,
                                        column: 1121
                                    }
                                }
                            },
                            arity: 1,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["block", "x-option", [],
                                    ["value", ["subexpr", "@mut", [
                                            ["get", "missingAccomplishment.value", ["loc", [null, [1, 1048],
                                                [1, 1075]
                                            ]]]
                                        ],
                                        [],
                                        []
                                    ]], 0, null, ["loc", [null, [1, 1030],
                                        [1, 1121]
                                    ]]
                                ]
                            ],
                            locals: ["missingAccomplishment"],
                            templates: [e]
                        }
                    }();
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 913
                                },
                                end: {
                                    line: 1,
                                    column: 1130
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [
                            ["block", "each", [
                                    ["get", "missingAccomplishments", ["loc", [null, [1, 979],
                                        [1, 1001]
                                    ]]]
                                ],
                                [], 0, null, ["loc", [null, [1, 971],
                                    [1, 1130]
                                ]]
                            ]
                        ],
                        locals: [],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 815
                            },
                            end: {
                                line: 1,
                                column: 1149
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "class", "mgroup");
                        var r = e.createElement("label");
                        e.setAttribute(r, "class", "mlabel");
                        var a = e.createComment("");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = new Array(2);
                        return a[0] = e.createMorphAt(e.childAt(r, [0]), 0, 0), a[1] = e.createMorphAt(r, 1, 1), a
                    },
                    statements: [
                        ["inline", "t", ["support.badge"],
                            [],
                            ["loc", [null, [1, 884],
                                [1, 905]
                            ]]
                        ],
                        ["block", "x-select", [],
                            ["class", "mfield", "value", ["subexpr", "@mut", [
                                    ["get", "missingAccomplishmentId", ["loc", [null, [1, 946],
                                        [1, 969]
                                    ]]]
                                ],
                                [],
                                []
                            ]], 0, null, ["loc", [null, [1, 913],
                                [1, 1143]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e]
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 1599
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "mhelp_page");
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createElement("form");
                e.setAttribute(r, "class", "mform default");
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createElement("div");
                e.setAttribute(a, "class", "mgroup");
                var l = e.createElement("label");
                e.setAttribute(l, "for", "sender-email-address"), e.setAttribute(l, "class", "mlabel");
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l);
                var l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createElement("div");
                e.setAttribute(a, "class", "mgroup");
                var l = e.createElement("label");
                e.setAttribute(l, "for", "select_topic"), e.setAttribute(l, "class", "mlabel");
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l);
                var l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createElement("div");
                e.setAttribute(a, "class", "mgroup");
                var l = e.createElement("label");
                e.setAttribute(l, "for", "description"), e.setAttribute(l, "class", "mlabel");
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l);
                var l = e.createComment("");
                e.appendChild(a, l);
                var l = e.createElement("div");
                e.setAttribute(l, "class", "msmallprint");
                var i = e.createElement("span"),
                    o = e.createComment("");
                e.appendChild(i, o), e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createElement("div");
                e.setAttribute(a, "class", "mgroup");
                var l = e.createElement("input");
                return e.setAttribute(l, "type", "submit"), e.setAttribute(l, "class", "mbtn cta_btn"), e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = e.childAt(r, [1]),
                    l = e.childAt(a, [1]),
                    i = e.childAt(a, [2]),
                    o = e.childAt(a, [4]),
                    c = e.childAt(a, [5, 0]),
                    s = new Array(12);
                return s[0] = e.createMorphAt(r, 0, 0), s[1] = e.createElementMorph(a), s[2] = e.createMorphAt(a, 0, 0), s[3] = e.createMorphAt(e.childAt(l, [0]), 0, 0), s[4] = e.createMorphAt(l, 1, 1), s[5] = e.createMorphAt(e.childAt(i, [0]), 0, 0), s[6] = e.createMorphAt(i, 1, 1), s[7] = e.createMorphAt(a, 3, 3), s[8] = e.createMorphAt(e.childAt(o, [0]), 0, 0), s[9] = e.createMorphAt(o, 1, 1), s[10] = e.createMorphAt(e.childAt(o, [2, 0]), 0, 0), s[11] = e.createAttrMorph(c, "value"), s
            },
            statements: [
                ["block", "page-title", [],
                    ["additionalClasses", "mpagetitle"], 0, null, ["loc", [null, [1, 24],
                        [1, 126]
                    ]]
                ],
                ["element", "action", ["submit"],
                    ["on", "submit"],
                    ["loc", [null, [1, 132],
                        [1, 163]
                    ]]
                ],
                ["block", "if", [
                        ["get", "errors", ["loc", [null, [1, 192],
                            [1, 198]
                        ]]]
                    ],
                    [], 1, null, ["loc", [null, [1, 186],
                        [1, 373]
                    ]]
                ],
                ["inline", "t", ["support.emailAddress"],
                    [],
                    ["loc", [null, [1, 442],
                        [1, 470]
                    ]]
                ],
                ["inline", "input", [],
                    ["type", "email", "class", "mfield", "value", ["subexpr", "@mut", [
                            ["get", "emailAddress", ["loc", [null, [1, 520],
                                [1, 532]
                            ]]]
                        ],
                        [],
                        []
                    ]],
                    ["loc", [null, [1, 478],
                        [1, 534]
                    ]]
                ],
                ["inline", "t", ["support.topic"],
                    [],
                    ["loc", [null, [1, 601],
                        [1, 622]
                    ]]
                ],
                ["block", "x-select", [],
                    ["class", "mfield", "value", ["subexpr", "@mut", [
                            ["get", "feedbackType", ["loc", [null, [1, 663],
                                [1, 675]
                            ]]]
                        ],
                        [],
                        []
                    ], "id", "feedbackType"], 2, null, ["loc", [null, [1, 630],
                        [1, 809]
                    ]]
                ],
                ["block", "if", [
                        ["get", "feedbackTypeIsBadge", ["loc", [null, [1, 821],
                            [1, 840]
                        ]]]
                    ],
                    [], 3, null, ["loc", [null, [1, 815],
                        [1, 1156]
                    ]]
                ],
                ["inline", "t", ["support.description"],
                    [],
                    ["loc", [null, [1, 1216],
                        [1, 1243]
                    ]]
                ],
                ["inline", "auto-expanding-textarea", [],
                    ["maxlength", ["subexpr", "@mut", [
                            ["get", "maxCharacters", ["loc", [null, [1, 1287],
                                [1, 1300]
                            ]]]
                        ],
                        [],
                        []
                    ], "placeholder", ["subexpr", "t", ["support.includeDetail"],
                        [],
                        ["loc", [null, [1, 1313],
                            [1, 1340]
                        ]]
                    ], "class", "mfield", "value", ["subexpr", "@mut", [
                            ["get", "generalContent", ["loc", [null, [1, 1362],
                                [1, 1376]
                            ]]]
                        ],
                        [],
                        []
                    ]],
                    ["loc", [null, [1, 1251],
                        [1, 1378]
                    ]]
                ],
                ["inline", "t", ["support.charactersRemaining"],
                    ["count", ["subexpr", "@mut", [
                            ["get", "charactersRemaining", ["loc", [null, [1, 1449],
                                [1, 1468]
                            ]]]
                        ],
                        [],
                        []
                    ]],
                    ["loc", [null, [1, 1409],
                        [1, 1470]
                    ]]
                ],
                ["attribute", "value", ["subexpr", "t", ["support.submit"],
                    [],
                    ["loc", [null, [1, 1536],
                        [1, 1558]
                    ]]
                ]]
            ],
            locals: [],
            templates: [e, t, n, r]
        }
    }())
}), define("mobile-panel/templates/game-forums", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 52
                            },
                            end: {
                                line: 1,
                                column: 118
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createTextNode("Forums: ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["content", "model.game.title", ["loc", [null, [1, 98],
                            [1, 118]
                        ]]]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 162
                            },
                            end: {
                                line: 1,
                                column: 222
                            }
                        }
                    },
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "render", ["forum-list-item", ["get", "forum", ["loc", [null, [1, 215],
                                [1, 220]
                            ]]]],
                            [],
                            ["loc", [null, [1, 188],
                                [1, 222]
                            ]]
                        ]
                    ],
                    locals: ["forum"],
                    templates: []
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 242
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "forum_wrap threads");
                var r = e.createElement("div");
                e.setAttribute(r, "class", "header");
                var a = e.createComment("");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createElement("ul");
                e.setAttribute(r, "class", "forum-list");
                var a = e.createComment("");
                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = new Array(2);
                return a[0] = e.createMorphAt(e.childAt(r, [0]), 0, 0), a[1] = e.createMorphAt(e.childAt(r, [1]), 0, 0), a
            },
            statements: [
                ["block", "page-title", [],
                    ["additionalClasses", "h1"], 0, null, ["loc", [null, [1, 52],
                        [1, 133]
                    ]]
                ],
                ["block", "each", [
                        ["get", "model", ["loc", [null, [1, 170],
                            [1, 175]
                        ]]]
                    ],
                    [], 1, null, ["loc", [null, [1, 162],
                        [1, 231]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("mobile-panel/templates/image-modal", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
            return {
                meta: {
                    revision: "Ember@1.13.12",
                    loc: {
                        source: null,
                        start: {
                            line: 1,
                            column: 0
                        },
                        end: {
                            line: 1,
                            column: 85
                        }
                    }
                },
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function(e) {
                    var t = e.createDocumentFragment(),
                        n = e.createElement("img");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function(e, t, n) {
                    var r = e.childAt(t, [0]),
                        a = new Array(2);
                    return a[0] = e.createAttrMorph(r, "src"), a[1] = e.createElementMorph(r), a
                },
                statements: [
                    ["attribute", "src", ["get", "src", ["loc", [null, [1, 49],
                        [1, 52]
                    ]]]],
                    ["element", "action", ["close"],
                        ["on", "click"],
                        ["loc", [null, [1, 55],
                            [1, 84]
                        ]]
                    ]
                ],
                locals: [],
                templates: []
            }
        }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 94
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [
                ["block", "view", ["modal"],
                    ["modalController", ["subexpr", "@mut", [
                            ["get", "this", ["loc", [null, [1, 32],
                                [1, 36]
                            ]]]
                        ],
                        [],
                        []
                    ]], 0, null, ["loc", [null, [1, 0],
                        [1, 94]
                    ]]
                ]
            ],
            locals: [],
            templates: [e]
        }
    }())
}), define("mobile-panel/templates/index/-account-settings-pod", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
            return {
                meta: {
                    revision: "Ember@1.13.12",
                    loc: {
                        source: null,
                        start: {
                            line: 1,
                            column: 35
                        },
                        end: {
                            line: 1,
                            column: 157
                        }
                    }
                },
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function(e) {
                    var t = e.createDocumentFragment(),
                        n = e.createElement("span");
                    e.setAttribute(n, "class", "title");
                    var r = e.createComment("");
                    return e.appendChild(n, r), e.appendChild(t, n), t
                },
                buildRenderNodes: function(e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                },
                statements: [
                    ["inline", "t", ["index.accountSettingsPod.settings"],
                        [],
                        ["loc", [null, [1, 109],
                            [1, 150]
                        ]]
                    ]
                ],
                locals: [],
                templates: []
            }
        }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 175
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "section home-settings");
                var r = e.createComment("");
                return e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
            },
            statements: [
                ["block", "link-to", ["edit-profile"],
                    ["class", "info", "tagName", "div"], 0, null, ["loc", [null, [1, 35],
                        [1, 169]
                    ]]
                ]
            ],
            locals: [],
            templates: [e]
        }
    }())
}), define("mobile-panel/templates/index/-active-user-pod", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 125
                                    },
                                    end: {
                                        line: 1,
                                        column: 349
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("span");
                                e.setAttribute(n, "class", "username-inner truncate");
                                var r = e.createElement("img");
                                e.setAttribute(r, "class", "avatar"), e.appendChild(n, r);
                                var r = e.createComment("");
                                return e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = e.childAt(t, [0]),
                                    a = e.childAt(r, [0]),
                                    l = new Array(2);
                                return l[0] = e.createAttrMorph(a, "src"), l[1] = e.createMorphAt(r, 1, 1), l
                            },
                            statements: [
                                ["attribute", "src", ["get", "activeUser.smallAvatarUrl", ["loc", [null, [1, 238],
                                    [1, 263]
                                ]]]],
                                ["inline", "t", ["index.activeUserPod.greeting"],
                                    ["user", ["subexpr", "@mut", [
                                            ["get", "activeUser.username", ["loc", [null, [1, 321],
                                                [1, 340]
                                            ]]]
                                        ],
                                        [],
                                        []
                                    ]],
                                    ["loc", [null, [1, 281],
                                        [1, 342]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }(),
                    t = function() {
                        var e = function() {
                            return {
                                meta: {
                                    revision: "Ember@1.13.12",
                                    loc: {
                                        source: null,
                                        start: {
                                            line: 1,
                                            column: 469
                                        },
                                        end: {
                                            line: 1,
                                            column: 639
                                        }
                                    }
                                },
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function(e) {
                                    var t = e.createDocumentFragment(),
                                        n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function(e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [
                                    ["inline", "t", ["index.activeUserPod.newMessages"],
                                        ["count", ["subexpr", "@mut", [
                                                ["get", "activeUser.unreadMessageCount", ["loc", [null, [1, 550],
                                                    [1, 579]
                                                ]]]
                                            ],
                                            [],
                                            []
                                        ], "messageCount", ["subexpr", "tag", ["strong", ["get", "activeUser.unreadMessageCount", ["loc", [null, [1, 607],
                                                [1, 636]
                                            ]]]],
                                            [],
                                            ["loc", [null, [1, 593],
                                                [1, 637]
                                            ]]
                                        ]],
                                        ["loc", [null, [1, 506],
                                            [1, 639]
                                        ]]
                                    ]
                                ],
                                locals: [],
                                templates: []
                            }
                        }();
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 361
                                    },
                                    end: {
                                        line: 1,
                                        column: 646
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("span");
                                e.setAttribute(n, "class", "ico");
                                var r = e.createTextNode("w");
                                e.appendChild(n, r), e.appendChild(t, n);
                                var n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["block", "if", [
                                        ["get", "activeUser.unreadMessageCount", ["loc", [null, [1, 475],
                                            [1, 504]
                                        ]]]
                                    ],
                                    [], 0, null, ["loc", [null, [1, 469],
                                        [1, 646]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: [e]
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 91
                            },
                            end: {
                                line: 1,
                                column: 658
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(2);
                        return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["block", "link-to", ["profile.show", ["get", "activeUser.username", ["loc", [null, [1, 151],
                                [1, 170]
                            ]]]],
                            ["class", "username"], 0, null, ["loc", [null, [1, 125],
                                [1, 361]
                            ]]
                        ],
                        ["block", "link-to", ["messages"],
                            ["class", ["subexpr", "concat", ["messages", " ", ["subexpr", "if", [
                                        ["get", "activeUser.unreadMessageCount", []], "new"
                                    ],
                                    [],
                                    []
                                ], " "],
                                [],
                                []
                            ]], 1, null, ["loc", [null, [1, 361],
                                [1, 658]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t]
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 658
                            },
                            end: {
                                line: 1,
                                column: 803
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("p"),
                            r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                    },
                    statements: [
                        ["inline", "t", ["index.activeUserPod.signInOrRegister"],
                            ["signInLink", ["subexpr", "link-decorator", ["login"],
                                [],
                                ["loc", [null, [1, 723],
                                    [1, 747]
                                ]]
                            ], "registerLink", ["subexpr", "link-decorator", ["registration-flow"],
                                [],
                                ["loc", [null, [1, 761],
                                    [1, 797]
                                ]]
                            ]],
                            ["loc", [null, [1, 669],
                                [1, 799]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 821
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "home-header");
                var r = e.createElement("h1"),
                    a = e.createComment("");
                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0, 0]),
                    a = new Array(2);
                return a[0] = e.createAttrMorph(r, "class"), a[1] = e.createMorphAt(r, 0, 0), a
            },
            statements: [
                ["attribute", "class", ["concat", ["greeting ", ["subexpr", "if", [
                        ["get", "activeUser.isAuthenticated", ["loc", [null, [1, 50],
                            [1, 76]
                        ]]], "", "guest"
                    ],
                    [],
                    ["loc", [null, [1, 45],
                        [1, 89]
                    ]]
                ]]]],
                ["block", "if", [
                        ["get", "activeUser.isAuthenticated", ["loc", [null, [1, 97],
                            [1, 123]
                        ]]]
                    ],
                    [], 0, 1, ["loc", [null, [1, 91],
                        [1, 810]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("mobile-panel/templates/index/-double-ad-pod", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 37
                            },
                            end: {
                                line: 1,
                                column: 158
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "id", "double-ad"), e.setAttribute(n, "class", "info");
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = new Array(2);
                        return a[0] = e.createElementMorph(r), a[1] = e.createUnsafeMorphAt(r, 0, 0), a
                    },
                    statements: [
                        ["element", "action", ["externalLink", ["get", "doubleAd.url", ["loc", [null, [1, 97],
                                [1, 109]
                            ]]], !0],
                            [],
                            ["loc", [null, [1, 73],
                                [1, 116]
                            ]]
                        ],
                        ["content", "doubleAd.content", ["loc", [null, [1, 130],
                            [1, 152]
                        ]]]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 158
                            },
                            end: {
                                line: 1,
                                column: 301
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "class", "info placeholder-ad hidetxt");
                        var r = e.createElement("strong"),
                            a = e.createComment("");
                        return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = new Array(2);
                        return a[0] = e.createElementMorph(r), a[1] = e.createMorphAt(e.childAt(r, [0]), 0, 0), a
                    },
                    statements: [
                        ["element", "action", ["externalLink", ["get", "defaultAdUrl", ["loc", [null, [1, 195],
                                [1, 207]
                            ]]], !0],
                            [],
                            ["loc", [null, [1, 171],
                                [1, 214]
                            ]]
                        ],
                        ["inline", "t", ["index.placeholderAd"],
                            [],
                            ["loc", [null, [1, 259],
                                [1, 286]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 314
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "section home-game-ad-2x");
                var r = e.createComment("");
                return e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
            },
            statements: [
                ["block", "if", [
                        ["get", "doubleAd", ["loc", [null, [1, 43],
                            [1, 51]
                        ]]]
                    ],
                    [], 0, 1, ["loc", [null, [1, 37],
                        [1, 308]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("mobile-panel/templates/index/-more-games-pod", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
            return {
                meta: {
                    revision: "Ember@1.13.12",
                    loc: {
                        source: null,
                        start: {
                            line: 1,
                            column: 0
                        },
                        end: {
                            line: 1,
                            column: 1022
                        }
                    }
                },
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function(e) {
                    var t = e.createDocumentFragment(),
                        n = e.createElement("div");
                    e.setAttribute(n, "class", "info");
                    var r = e.createElement("ul");
                    e.setAttribute(r, "class", "games ios");
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a), e.appendChild(n, r);
                    var r = e.createElement("ul");
                    e.setAttribute(r, "class", "games android");
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "game-ico"), e.appendChild(r, a), e.appendChild(n, r);
                    var r = e.createElement("span");
                    e.setAttribute(r, "class", "title");
                    var a = e.createComment("");
                    return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n),
                        t
                },
                buildRenderNodes: function(e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(e.childAt(t, [0, 2]), 0, 0), r
                },
                statements: [
                    ["inline", "t", ["index.moreGamesPod.moreGames"],
                        [],
                        ["loc", [null, [1, 973],
                            [1, 1009]
                        ]]
                    ]
                ],
                locals: [],
                templates: []
            }
        }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 1034
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [
                ["block", "link-to", ["more-games"],
                    ["class", "section home-more-games", "tagName", "div"], 0, null, ["loc", [null, [1, 0],
                        [1, 1034]
                    ]]
                ]
            ],
            locals: [],
            templates: [e]
        }
    }())
}), define("mobile-panel/templates/index/-my-profile-pod", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 71
                                },
                                end: {
                                    line: 1,
                                    column: 244
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("img");
                            e.setAttribute(n, "class", "avatar"), e.appendChild(t, n);
                            var n = e.createElement("span");
                            e.setAttribute(n, "class", "title");
                            var r = e.createComment("");
                            return e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = e.childAt(t, [0]),
                                a = new Array(2);
                            return a[0] = e.createAttrMorph(r, "src"), a[1] = e.createMorphAt(e.childAt(t, [1]), 0, 0), a
                        },
                        statements: [
                            ["attribute", "src", ["get", "activeUser.avatarUrl", ["loc", [null, [1, 156],
                                [1, 176]
                            ]]]],
                            ["content", "activeUser.username", ["loc", [null, [1, 214],
                                [1, 237]
                            ]]]
                        ],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 37
                            },
                            end: {
                                line: 1,
                                column: 256
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["block", "link-to", ["profile.show", ["get", "activeUser.username", ["loc", [null, [1, 97],
                                [1, 116]
                            ]]]],
                            ["class", "info", "tagName", "div"], 0, null, ["loc", [null, [1, 71],
                                [1, 256]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e]
                }
            }(),
            t = function() {
                var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 264
                                },
                                end: {
                                    line: 1,
                                    column: 390
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [
                            ["inline", "t", ["index.myProfilePod.signInOrRegister"],
                                ["span", ["subexpr", "tag-decorator", ["span"],
                                    [],
                                    ["loc", [null, [1, 366],
                                        [1, 388]
                                    ]]
                                ]],
                                ["loc", [null, [1, 319],
                                    [1, 390]
                                ]]
                            ]
                        ],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 256
                            },
                            end: {
                                line: 1,
                                column: 402
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["block", "link-to", ["login"],
                            ["class", "info sign-in", "tagName", "div"], 0, null, ["loc", [null, [1, 264],
                                [1, 402]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e]
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 415
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "section home-my-profile");
                var r = e.createComment("");
                return e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
            },
            statements: [
                ["block", "if", [
                        ["get", "activeUser.isAuthenticated", ["loc", [null, [1, 43],
                            [1, 69]
                        ]]]
                    ],
                    [], 0, 1, ["loc", [null, [1, 37],
                        [1, 409]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("mobile-panel/templates/index/-promotion", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 210
                            },
                            end: {
                                line: 1,
                                column: 277
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "render", ["index.guild-forum-pod", ["get", "guildForum", ["loc", [null, [1, 265],
                                [1, 275]
                            ]]]],
                            [],
                            ["loc", [null, [1, 232],
                                [1, 277]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 284
                            },
                            end: {
                                line: 1,
                                column: 331
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "render", ["index.promo-pod", ["get", "promo", ["loc", [null, [1, 324],
                                [1, 329]
                            ]]]],
                            [],
                            ["loc", [null, [1, 297],
                                [1, 331]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            n = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 338
                            },
                            end: {
                                line: 1,
                                column: 389
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "render", ["index.badges-pod"],
                            [],
                            ["loc", [null, [1, 360],
                                [1, 389]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            r = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 432
                            },
                            end: {
                                line: 1,
                                column: 494
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "render", ["index.coupon-promotion"],
                            [],
                            ["loc", [null, [1, 459],
                                [1, 494]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            a = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 494
                            },
                            end: {
                                line: 1,
                                column: 535
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "partial", ["index/double-ad-pod"],
                            [],
                            ["loc", [null, [1, 502],
                                [1, 535]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            l = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 542
                            },
                            end: {
                                line: 1,
                                column: 681
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "index/scores-pod", [],
                            ["scores", ["subexpr", "@mut", [
                                    ["get", "scores.scores", ["loc", [null, [1, 594],
                                        [1, 607]
                                    ]]]
                                ],
                                [],
                                []
                            ], "click", ["subexpr", "action", ["navigateToScores"],
                                [],
                                ["loc", [null, [1, 614],
                                    [1, 641]
                                ]]
                            ], "scoreClick", ["subexpr", "action", ["navigateToScore"],
                                [],
                                ["loc", [null, [1, 653],
                                    [1, 679]
                                ]]
                            ]],
                            ["loc", [null, [1, 568],
                                [1, 681]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            i = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 721
                            },
                            end: {
                                line: 1,
                                column: 776
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "partial", ["index/my-profile-pod"],
                            [],
                            ["loc", [null, [1, 742],
                                [1, 776]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 894
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createElement("div"),
                    r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createComment("");
                return e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [1]),
                    a = new Array(13);
                return a[0] = e.createMorphAt(t, 0, 0, n), a[1] = e.createAttrMorph(r, "class"), a[2] = e.createMorphAt(r, 0, 0), a[3] = e.createMorphAt(r, 1, 1), a[4] = e.createMorphAt(r, 2, 2), a[5] = e.createMorphAt(r, 3, 3), a[6] = e.createMorphAt(r, 4, 4), a[7] = e.createMorphAt(r, 5, 5), a[8] = e.createMorphAt(r, 6, 6), a[9] = e.createMorphAt(r, 7, 7), a[10] = e.createMorphAt(r, 8, 8), a[11] = e.createMorphAt(r, 9, 9), a[12] = e.createMorphAt(r, 10, 10), e.insertBoundary(t, 0), a
            },
            statements: [
                ["inline", "partial", ["index/active-user-pod"],
                    [],
                    ["loc", [null, [1, 0],
                        [1, 35]
                    ]]
                ],
                ["attribute", "class", ["concat", ["home-sections layout-promotion ", ["subexpr", "if", [
                        ["get", "guildForum", ["loc", [null, [1, 83],
                            [1, 93]
                        ]]], "w-guilds"
                    ],
                    [],
                    ["loc", [null, [1, 78],
                        [1, 106]
                    ]]
                ], " ", ["subexpr", "if", [
                        ["get", "promo", ["loc", [null, [1, 112],
                            [1, 117]
                        ]]], "w-promo"
                    ],
                    [],
                    ["loc", [null, [1, 107],
                        [1, 129]
                    ]]
                ], " ", ["subexpr", "unless", [
                        ["get", "game.hasBadges", ["loc", [null, [1, 139],
                            [1, 153]
                        ]]], "no-badges"
                    ],
                    [],
                    ["loc", [null, [1, 130],
                        [1, 167]
                    ]]
                ], " ", ["subexpr", "unless", [
                        ["get", "game.hasHighScores", ["loc", [null, [1, 177],
                            [1, 195]
                        ]]], "no-stats"
                    ],
                    [],
                    ["loc", [null, [1, 168],
                        [1, 208]
                    ]]
                ]]]],
                ["block", "if", [
                        ["get", "showGuildForum", ["loc", [null, [1, 216],
                            [1, 230]
                        ]]]
                    ],
                    [], 0, null, ["loc", [null, [1, 210],
                        [1, 284]
                    ]]
                ],
                ["block", "if", [
                        ["get", "promo", ["loc", [null, [1, 290],
                            [1, 295]
                        ]]]
                    ],
                    [], 1, null, ["loc", [null, [1, 284],
                        [1, 338]
                    ]]
                ],
                ["block", "if", [
                        ["get", "game.hasBadges", ["loc", [null, [1, 344],
                            [1, 358]
                        ]]]
                    ],
                    [], 2, null, ["loc", [null, [1, 338],
                        [1, 396]
                    ]]
                ],
                ["inline", "render", ["index.forums-pod", ["get", "forums", ["loc", [null, [1, 424],
                        [1, 430]
                    ]]]],
                    [],
                    ["loc", [null, [1, 396],
                        [1, 432]
                    ]]
                ],
                ["block", "if", [
                        ["get", "showCouponPromotion", ["loc", [null, [1, 438],
                            [1, 457]
                        ]]]
                    ],
                    [], 3, 4, ["loc", [null, [1, 432],
                        [1, 542]
                    ]]
                ],
                ["block", "if", [
                        ["get", "game.hasHighScores", ["loc", [null, [1, 548],
                            [1, 566]
                        ]]]
                    ],
                    [], 5, null, ["loc", [null, [1, 542],
                        [1, 688]
                    ]]
                ],
                ["inline", "partial", ["index/single-ad-pod"],
                    [],
                    ["loc", [null, [1, 688],
                        [1, 721]
                    ]]
                ],
                ["block", "if", [
                        ["get", "showMyProfile", ["loc", [null, [1, 727],
                            [1, 740]
                        ]]]
                    ],
                    [], 6, null, ["loc", [null, [1, 721],
                        [1, 783]
                    ]]
                ],
                ["inline", "partial", ["index/account-settings-pod"],
                    [],
                    ["loc", [null, [1, 783],
                        [1, 823]
                    ]]
                ],
                ["inline", "partial", ["index/support-pod"],
                    [],
                    ["loc", [null, [1, 823],
                        [1, 854]
                    ]]
                ],
                ["inline", "partial", ["index/more-games-pod"],
                    [],
                    ["loc", [null, [1, 854],
                        [1, 888]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t, n, r, a, l, i]
        }
    }())
}), define("mobile-panel/templates/index/-retention", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 185
                            },
                            end: {
                                line: 1,
                                column: 252
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "render", ["index.guild-forum-pod", ["get", "guildForum", ["loc", [null, [1, 240],
                                [1, 250]
                            ]]]],
                            [],
                            ["loc", [null, [1, 207],
                                [1, 252]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 259
                            },
                            end: {
                                line: 1,
                                column: 321
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "render", ["index.coupon-promotion"],
                            [],
                            ["loc", [null, [1, 286],
                                [1, 321]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            n = function() {
                var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 329
                                    },
                                    end: {
                                        line: 1,
                                        column: 376
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["inline", "render", ["index.promo-pod", ["get", "promo", ["loc", [null, [1, 369],
                                        [1, 374]
                                    ]]]],
                                    [],
                                    ["loc", [null, [1, 342],
                                        [1, 376]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }(),
                    t = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 376
                                    },
                                    end: {
                                        line: 1,
                                        column: 423
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["inline", "partial", ["index/welcome-message-pod"],
                                    [],
                                    ["loc", [null, [1, 384],
                                        [1, 423]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 321
                            },
                            end: {
                                line: 1,
                                column: 430
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["block", "if", [
                                ["get", "promo", ["loc", [null, [1, 335],
                                    [1, 340]
                                ]]]
                            ],
                            [], 0, 1, ["loc", [null, [1, 329],
                                [1, 430]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t]
                }
            }(),
            r = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 437
                            },
                            end: {
                                line: 1,
                                column: 488
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "render", ["index.badges-pod"],
                            [],
                            ["loc", [null, [1, 459],
                                [1, 488]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            a = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 531
                            },
                            end: {
                                line: 1,
                                column: 670
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "index/scores-pod", [],
                            ["scores", ["subexpr", "@mut", [
                                    ["get", "scores.scores", ["loc", [null, [1, 583],
                                        [1, 596]
                                    ]]]
                                ],
                                [],
                                []
                            ], "click", ["subexpr", "action", ["navigateToScores"],
                                [],
                                ["loc", [null, [1, 603],
                                    [1, 630]
                                ]]
                            ], "scoreClick", ["subexpr", "action", ["navigateToScore"],
                                [],
                                ["loc", [null, [1, 642],
                                    [1, 668]
                                ]]
                            ]],
                            ["loc", [null, [1, 557],
                                [1, 670]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            l = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 677
                            },
                            end: {
                                line: 1,
                                column: 732
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "partial", ["index/my-profile-pod"],
                            [],
                            ["loc", [null, [1, 698],
                                [1, 732]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 883
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createElement("div"),
                    r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createComment("");
                return e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [1]),
                    a = new Array(12);
                return a[0] = e.createMorphAt(t, 0, 0, n), a[1] = e.createAttrMorph(r, "class"), a[2] = e.createMorphAt(r, 0, 0), a[3] = e.createMorphAt(r, 1, 1), a[4] = e.createMorphAt(r, 2, 2), a[5] = e.createMorphAt(r, 3, 3), a[6] = e.createMorphAt(r, 4, 4), a[7] = e.createMorphAt(r, 5, 5), a[8] = e.createMorphAt(r, 6, 6), a[9] = e.createMorphAt(r, 7, 7), a[10] = e.createMorphAt(r, 8, 8), a[11] = e.createMorphAt(r, 9, 9), e.insertBoundary(t, 0), a
            },
            statements: [
                ["inline", "partial", ["index/active-user-pod"],
                    [],
                    ["loc", [null, [1, 0],
                        [1, 35]
                    ]]
                ],
                ["attribute", "class", ["concat", ["home-sections layout-retention ", ["subexpr", "if", [
                        ["get", "guildForum", ["loc", [null, [1, 83],
                            [1, 93]
                        ]]], "w-guilds"
                    ],
                    [],
                    ["loc", [null, [1, 78],
                        [1, 106]
                    ]]
                ], " ", ["subexpr", "if", [
                        ["get", "game.hasHighScores", ["loc", [null, [1, 112],
                            [1, 130]
                        ]]], "", "no-stats"
                    ],
                    [],
                    ["loc", [null, [1, 107],
                        [1, 146]
                    ]]
                ], " ", ["subexpr", "if", [
                        ["get", "game.hasBadges", ["loc", [null, [1, 152],
                            [1, 166]
                        ]]], "", "no-badges"
                    ],
                    [],
                    ["loc", [null, [1, 147],
                        [1, 183]
                    ]]
                ]]]],
                ["block", "if", [
                        ["get", "showGuildForum", ["loc", [null, [1, 191],
                            [1, 205]
                        ]]]
                    ],
                    [], 0, null, ["loc", [null, [1, 185],
                        [1, 259]
                    ]]
                ],
                ["block", "if", [
                        ["get", "showCouponPromotion", ["loc", [null, [1, 265],
                            [1, 284]
                        ]]]
                    ],
                    [], 1, 2, ["loc", [null, [1, 259],
                        [1, 437]
                    ]]
                ],
                ["block", "if", [
                        ["get", "game.hasBadges", ["loc", [null, [1, 443],
                            [1, 457]
                        ]]]
                    ],
                    [], 3, null, ["loc", [null, [1, 437],
                        [1, 495]
                    ]]
                ],
                ["inline", "render", ["index.forums-pod", ["get", "forums", ["loc", [null, [1, 523],
                        [1, 529]
                    ]]]],
                    [],
                    ["loc", [null, [1, 495],
                        [1, 531]
                    ]]
                ],
                ["block", "if", [
                        ["get", "game.hasHighScores", ["loc", [null, [1, 537],
                            [1, 555]
                        ]]]
                    ],
                    [], 4, null, ["loc", [null, [1, 531],
                        [1, 677]
                    ]]
                ],
                ["block", "if", [
                        ["get", "showMyProfile", ["loc", [null, [1, 683],
                            [1, 696]
                        ]]]
                    ],
                    [], 5, null, ["loc", [null, [1, 677],
                        [1, 739]
                    ]]
                ],
                ["inline", "partial", ["index/single-ad-pod"],
                    [],
                    ["loc", [null, [1, 739],
                        [1, 772]
                    ]]
                ],
                ["inline", "partial", ["index/account-settings-pod"],
                    [],
                    ["loc", [null, [1, 772],
                        [1, 812]
                    ]]
                ],
                ["inline", "partial", ["index/support-pod"],
                    [],
                    ["loc", [null, [1, 812],
                        [1, 843]
                    ]]
                ],
                ["inline", "partial", ["index/more-games-pod"],
                    [],
                    ["loc", [null, [1, 843],
                        [1, 877]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t, n, r, a, l]
        }
    }())
}), define("mobile-panel/templates/index/-single-ad-pod", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 34
                            },
                            end: {
                                line: 1,
                                column: 155
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "id", "single-ad"), e.setAttribute(n, "class", "info");
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = new Array(2);
                        return a[0] = e.createElementMorph(r), a[1] = e.createUnsafeMorphAt(r, 0, 0), a
                    },
                    statements: [
                        ["element", "action", ["externalLink", ["get", "singleAd.url", ["loc", [null, [1, 94],
                                [1, 106]
                            ]]], !0],
                            [],
                            ["loc", [null, [1, 70],
                                [1, 113]
                            ]]
                        ],
                        ["content", "singleAd.content", ["loc", [null, [1, 127],
                            [1, 149]
                        ]]]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 155
                            },
                            end: {
                                line: 1,
                                column: 298
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "class", "info placeholder-ad hidetxt");
                        var r = e.createElement("strong"),
                            a = e.createComment("");
                        return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = new Array(2);
                        return a[0] = e.createElementMorph(r), a[1] = e.createMorphAt(e.childAt(r, [0]), 0, 0), a
                    },
                    statements: [
                        ["element", "action", ["externalLink", ["get", "defaultAdUrl", ["loc", [null, [1, 192],
                                [1, 204]
                            ]]], !0],
                            [],
                            ["loc", [null, [1, 168],
                                [1, 211]
                            ]]
                        ],
                        ["inline", "t", ["index.placeholderAd"],
                            [],
                            ["loc", [null, [1, 256],
                                [1, 283]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 311
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "section home-game-ad");
                var r = e.createComment("");
                return e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
            },
            statements: [
                ["block", "if", [
                        ["get", "singleAd", ["loc", [null, [1, 40],
                            [1, 48]
                        ]]]
                    ],
                    [], 0, 1, ["loc", [null, [1, 34],
                        [1, 305]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("mobile-panel/templates/index/-support-pod", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
            return {
                meta: {
                    revision: "Ember@1.13.12",
                    loc: {
                        source: null,
                        start: {
                            line: 1,
                            column: 34
                        },
                        end: {
                            line: 1,
                            column: 143
                        }
                    }
                },
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function(e) {
                    var t = e.createDocumentFragment(),
                        n = e.createElement("span");
                    e.setAttribute(n, "class", "title");
                    var r = e.createComment("");
                    return e.appendChild(n, r), e.appendChild(t, n), t
                },
                buildRenderNodes: function(e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                },
                statements: [
                    ["inline", "t", ["index.supportPod.support"],
                        [],
                        ["loc", [null, [1, 104],
                            [1, 136]
                        ]]
                    ]
                ],
                locals: [],
                templates: []
            }
        }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 161
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "section home-support");
                var r = e.createComment("");
                return e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
            },
            statements: [
                ["block", "link-to", ["game.faq"],
                    ["class", "info", "tagName", "div"], 0, null, ["loc", [null, [1, 34],
                        [1, 155]
                    ]]
                ]
            ],
            locals: [],
            templates: [e]
        }
    }())
}), define("mobile-panel/templates/index/-welcome-message-pod", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 117
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "section home-welcome");
                var r = e.createElement("div");
                e.setAttribute(r, "class", "info");
                var a = e.createElement("p"),
                    l = e.createComment("");
                return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(e.childAt(t, [0, 0, 0]), 0, 0), r
            },
            statements: [
                ["inline", "t", ["index.welcomeMessagePod.welcomeMessage"],
                    [],
                    ["loc", [null, [1, 55],
                        [1, 101]
                    ]]
                ]
            ],
            locals: [],
            templates: []
        }
    }())
}), define("mobile-panel/templates/index/badges-pod", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 396
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "info");
                var r = e.createElement("div");
                e.setAttribute(r, "class", "badges");
                var a = e.createElement("p");
                e.setAttribute(a, "class", "status");
                var l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createElement("div");
                e.setAttribute(a, "class", "badge");
                var l = e.createElement("img");
                e.setAttribute(l, "class", "graphic"), e.appendChild(a, l);
                var l = e.createElement("span");
                e.setAttribute(l, "class", "difficulty");
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createElement("span");
                e.setAttribute(r, "class", "title");
                var a = e.createComment("");
                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = e.childAt(r, [0]),
                    l = e.childAt(a, [1]),
                    i = e.childAt(l, [0]),
                    o = new Array(4);
                return o[0] = e.createMorphAt(e.childAt(a, [0]), 0, 0), o[1] = e.createAttrMorph(i, "src"), o[2] = e.createMorphAt(e.childAt(l, [1]), 0, 0), o[3] = e.createMorphAt(e.childAt(r, [1]), 0, 0), o
            },
            statements: [
                ["inline", "t", ["index.badgesPod.earnedBadges"],
                    ["earnedBadgeCount", ["subexpr", "@mut", [
                            ["get", "earnedBadgeCount", ["loc", [null, [1, 108],
                                [1, 124]
                            ]]]
                        ],
                        [],
                        []
                    ], "totalBadgeCount", ["subexpr", "@mut", [
                            ["get", "totalBadgeCount", ["loc", [null, [1, 141],
                                [1, 156]
                            ]]]
                        ],
                        [],
                        []
                    ]],
                    ["loc", [null, [1, 56],
                        [1, 158]
                    ]]
                ],
                ["attribute", "src", ["get", "highlightedBadge.imageUrl", ["loc", [null, [1, 192],
                    [1, 217]
                ]]]],
                ["inline", "t", [
                        ["subexpr", "concat", ["difficulties.", ["get", "highlightedBadge.level", ["loc", [null, [1, 289],
                                [1, 311]
                            ]]]],
                            [],
                            ["loc", [null, [1, 265],
                                [1, 312]
                            ]]
                        ]
                    ],
                    [],
                    ["loc", [null, [1, 261],
                        [1, 314]
                    ]]
                ],
                ["inline", "t", ["index.badgesPod.badges"],
                    [],
                    ["loc", [null, [1, 353],
                        [1, 383]
                    ]]
                ]
            ],
            locals: [],
            templates: []
        }
    }())
}), define("mobile-panel/templates/index/coupon-promotion", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 21
                                    },
                                    end: {
                                        line: 4,
                                        column: 92
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("div");
                                e.setAttribute(n, "id", "claimed_coupon_block"), e.setAttribute(n, "class", "mpromo mpromo_default info");
                                var r = e.createElement("h2");
                                e.setAttribute(r, "class", "mpromo_subtitle");
                                var a = e.createTextNode("Your coupon expires ");
                                e.appendChild(r, a);
                                var a = e.createComment("");
                                e.appendChild(r, a);
                                var a = e.createTextNode(".");
                                e.appendChild(r, a), e.appendChild(n, r);
                                var r = e.createElement("p"),
                                    a = e.createTextNode("Your coupon was sent to\n");
                                e.appendChild(r, a);
                                var a = e.createElement("strong"),
                                    l = e.createComment("");
                                e.appendChild(a, l), e.appendChild(r, a);
                                var a = e.createTextNode("\n");
                                e.appendChild(r, a);
                                var a = e.createElement("a");
                                e.setAttribute(a, "href", "#"), e.setAttribute(a, "class", "change_email");
                                var l = e.createTextNode("(not your address?)");
                                e.appendChild(a, l), e.appendChild(r, a);
                                var a = e.createTextNode(". Each code can only be redeemed once.\n");
                                e.appendChild(r, a), e.appendChild(n, r);
                                var r = e.createElement("a");
                                e.setAttribute(r, "href", "#"), e.setAttribute(r, "class", "mbtn cta_btn");
                                var a = e.createTextNode("Show my coupon");
                                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = e.childAt(t, [0]),
                                    a = e.childAt(r, [1]),
                                    l = e.childAt(a, [3]),
                                    i = e.childAt(r, [2]),
                                    o = new Array(4);
                                return o[0] = e.createMorphAt(e.childAt(r, [0]), 1, 1), o[1] = e.createMorphAt(e.childAt(a, [1]), 0, 0), o[2] = e.createElementMorph(l), o[3] = e.createElementMorph(i), o
                            },
                            statements: [
                                ["content", "expiresOn", ["loc", [null, [1, 158],
                                    [1, 171]
                                ]]],
                                ["content", "couponEmail", ["loc", [null, [2, 8],
                                    [2, 23]
                                ]]],
                                ["element", "action", ["changeEmail"],
                                    [],
                                    ["loc", [null, [3, 3],
                                        [3, 27]
                                    ]]
                                ],
                                ["element", "action", ["externalLink", ["get", "link", ["loc", [null, [4, 31],
                                        [4, 35]
                                    ]]]],
                                    [],
                                    ["loc", [null, [4, 7],
                                        [4, 37]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }(),
                    t = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 4,
                                        column: 92
                                    },
                                    end: {
                                        line: 7,
                                        column: 10
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("div");
                                e.setAttribute(n, "id", "processing_coupon_block"), e.setAttribute(n, "class", "mpromo mpromo_default info");
                                var r = e.createElement("h1");
                                e.setAttribute(r, "class", "mpromo_subtitle");
                                var a = e.createTextNode("Your coupon is being processed");
                                e.appendChild(r, a), e.appendChild(n, r);
                                var r = e.createElement("p"),
                                    a = e.createTextNode("Your one-time use coupon will be sent to\n");
                                e.appendChild(r, a);
                                var a = e.createElement("strong"),
                                    l = e.createComment("");
                                e.appendChild(a, l), e.appendChild(r, a);
                                var a = e.createTextNode("\n");
                                e.appendChild(r, a);
                                var a = e.createElement("a");
                                e.setAttribute(a, "href", "#"), e.setAttribute(a, "class", "change_email");
                                var l = e.createTextNode("(not your address?)");
                                e.appendChild(a, l), e.appendChild(r, a);
                                var a = e.createTextNode(". If you do not receive an email from no-reply@mail.kongregate.com, please check your Spam/Junk mail folders or check back here after ");
                                e.appendChild(r, a);
                                var a = e.createComment("");
                                e.appendChild(r, a);
                                var a = e.createTextNode(".\n");
                                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = e.childAt(t, [0, 1]),
                                    a = e.childAt(r, [3]),
                                    l = new Array(3);
                                return l[0] = e.createMorphAt(e.childAt(r, [1]), 0, 0), l[1] = e.createElementMorph(a), l[2] = e.createMorphAt(r, 5, 5), l
                            },
                            statements: [
                                ["content", "couponEmail", ["loc", [null, [5, 8],
                                    [5, 23]
                                ]]],
                                ["element", "action", ["changeEmail"],
                                    [],
                                    ["loc", [null, [6, 3],
                                        [6, 27]
                                    ]]
                                ],
                                ["inline", "unbound", [
                                        ["subexpr", "medium-format-datetime", [
                                                ["get", "couponAvailableAfter", ["loc", [null, [6, 249],
                                                    [6, 269]
                                                ]]]
                                            ],
                                            [],
                                            ["loc", [null, [6, 225],
                                                [6, 270]
                                            ]]
                                        ]
                                    ],
                                    [],
                                    ["loc", [null, [6, 215],
                                        [6, 272]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 0
                            },
                            end: {
                                line: 7,
                                column: 17
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["block", "if", [
                                ["get", "couponAvailable", ["loc", [null, [1, 27],
                                    [1, 42]
                                ]]]
                            ],
                            [], 0, 1, ["loc", [null, [1, 21],
                                [7, 17]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t]
                }
            }(),
            t = function() {
                var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 7,
                                        column: 25
                                    },
                                    end: {
                                        line: 7,
                                        column: 78
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createUnsafeMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["content", "claimContent", ["loc", [null, [7, 59],
                                    [7, 78]
                                ]]]
                            ],
                            locals: [],
                            templates: []
                        }
                    }(),
                    t = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 7,
                                        column: 78
                                    },
                                    end: {
                                        line: 7,
                                        column: 106
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createUnsafeMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["content", "upsellContent", ["loc", [null, [7, 86],
                                    [7, 106]
                                ]]]
                            ],
                            locals: [],
                            templates: []
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 7,
                                column: 17
                            },
                            end: {
                                line: 7,
                                column: 113
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["block", "if", [
                                ["get", "activeUser.isAuthenticated", ["loc", [null, [7, 31],
                                    [7, 57]
                                ]]]
                            ],
                            [], 0, 1, ["loc", [null, [7, 25],
                                [7, 113]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t]
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 7,
                        column: 120
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [
                ["block", "if", [
                        ["get", "userHasCoupon", ["loc", [null, [1, 6],
                            [1, 19]
                        ]]]
                    ],
                    [], 0, 1, ["loc", [null, [1, 0],
                        [7, 120]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("mobile-panel/templates/index/forums-pod", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 91
                                    },
                                    end: {
                                        line: 1,
                                        column: 144
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("span");
                                e.setAttribute(n, "class", "num");
                                var r = e.createComment("");
                                return e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                            },
                            statements: [
                                ["content", "newPosts", ["loc", [null, [1, 125],
                                    [1, 137]
                                ]]]
                            ],
                            locals: [],
                            templates: []
                        }
                    }(),
                    t = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 310
                                    },
                                    end: {
                                        line: 1,
                                        column: 382
                                    }
                                }
                            },
                            arity: 1,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("li");
                                e.setAttribute(n, "class", "thread");
                                var r = e.createComment("");
                                return e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                            },
                            statements: [
                                ["content", "topic.title", ["loc", [null, [1, 362],
                                    [1, 377]
                                ]]]
                            ],
                            locals: ["topic"],
                            templates: []
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 48
                            },
                            end: {
                                line: 1,
                                column: 453
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("span");
                        e.setAttribute(n, "class", "count");
                        var r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createElement("span");
                        e.setAttribute(r, "aria-hidden", "true"), e.setAttribute(r, "class", "ico");
                        var a = e.createTextNode("'");
                        e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createElement("span");
                        e.setAttribute(n, "class", "threads-title");
                        var r = e.createElement("span");
                        e.setAttribute(r, "class", "ico"), e.appendChild(n, r);
                        var r = e.createComment("");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createElement("ul");
                        e.setAttribute(n, "class", "threads");
                        var r = e.createComment("");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createElement("span");
                        e.setAttribute(n, "class", "title");
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(4);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r[1] = e.createMorphAt(e.childAt(t, [1]), 1, 1), r[2] = e.createMorphAt(e.childAt(t, [2]), 0, 0), r[3] = e.createMorphAt(e.childAt(t, [3]), 0, 0), r
                    },
                    statements: [
                        ["block", "if", [
                                ["get", "newPosts", ["loc", [null, [1, 97],
                                    [1, 105]
                                ]]]
                            ],
                            [], 0, null, ["loc", [null, [1, 91],
                                [1, 151]
                            ]]
                        ],
                        ["inline", "t", ["index.forumsPod.new"],
                            [],
                            ["loc", [null, [1, 256],
                                [1, 283]
                            ]]
                        ],
                        ["block", "each", [
                                ["get", "recentTopics", ["loc", [null, [1, 318],
                                    [1, 330]
                                ]]]
                            ],
                            [], 1, null, ["loc", [null, [1, 310],
                                [1, 391]
                            ]]
                        ],
                        ["inline", "t", ["index.forumsPod.forums"],
                            [],
                            ["loc", [null, [1, 416],
                                [1, 446]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t]
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 453
                            },
                            end: {
                                line: 1,
                                column: 522
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("span");
                        e.setAttribute(n, "class", "title");
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                    },
                    statements: [
                        ["inline", "t", ["index.forumsPod.comingSoon"],
                            [],
                            ["loc", [null, [1, 481],
                                [1, 515]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 535
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div"),
                    r = e.createComment("");
                return e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = new Array(2);
                return a[0] = e.createAttrMorph(r, "class"), a[1] = e.createMorphAt(r, 0, 0), a
            },
            statements: [
                ["attribute", "class", ["concat", ["info ", ["subexpr", "if", [
                        ["get", "newPosts", ["loc", [null, [1, 22],
                            [1, 30]
                        ]]], "", "no-count"
                    ],
                    [],
                    ["loc", [null, [1, 17],
                        [1, 46]
                    ]]
                ]]]],
                ["block", "if", [
                        ["get", "forumsAvailable", ["loc", [null, [1, 54],
                            [1, 69]
                        ]]]
                    ],
                    [], 0, 1, ["loc", [null, [1, 48],
                        [1, 529]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("mobile-panel/templates/index/guild-forum-pod", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 58
                            },
                            end: {
                                line: 1,
                                column: 111
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("span");
                        e.setAttribute(n, "class", "num");
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                    },
                    statements: [
                        ["content", "newPosts", ["loc", [null, [1, 92],
                            [1, 104]
                        ]]]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 256
                            },
                            end: {
                                line: 3,
                                column: 62
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createTextNode("\n-\n");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "t", ["index.guildForumPod.lastPostBy"],
                            ["user", ["subexpr", "@mut", [
                                    ["get", "lastPostByUsername", ["loc", [null, [3, 42],
                                        [3, 60]
                                    ]]]
                                ],
                                [],
                                []
                            ]],
                            ["loc", [null, [3, 0],
                                [3, 62]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 3,
                        column: 79
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "info");
                var r = e.createElement("p");
                e.setAttribute(r, "class", "truncate");
                var a = e.createElement("span");
                e.setAttribute(a, "class", "count");
                var l = e.createComment("");
                e.appendChild(a, l);
                var l = e.createElement("span");
                e.setAttribute(l, "aria-hidden", "true"), e.setAttribute(l, "class", "ico");
                var i = e.createTextNode("'");
                e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createElement("strong"),
                    l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createComment("");
                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0, 0]),
                    a = new Array(3);
                return a[0] = e.createMorphAt(e.childAt(r, [0]), 0, 0), a[1] = e.createMorphAt(e.childAt(r, [1]), 0, 0), a[2] = e.createMorphAt(r, 2, 2), a
            },
            statements: [
                ["block", "if", [
                        ["get", "newPosts", ["loc", [null, [1, 64],
                            [1, 72]
                        ]]]
                    ],
                    [], 0, null, ["loc", [null, [1, 58],
                        [1, 118]
                    ]]
                ],
                ["inline", "t", ["index.guildForumPod.forumName"],
                    ["guildName", ["subexpr", "@mut", [
                            ["get", "activeUser.guild.name", ["loc", [null, [1, 224],
                                [1, 245]
                            ]]]
                        ],
                        [],
                        []
                    ]],
                    ["loc", [null, [1, 178],
                        [1, 247]
                    ]]
                ],
                ["block", "if", [
                        ["get", "lastPostByUsername", ["loc", [null, [1, 262],
                            [1, 280]
                        ]]]
                    ],
                    [], 1, null, ["loc", [null, [1, 256],
                        [3, 69]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("mobile-panel/templates/index/promo-pod", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 110
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "info");
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createElement("span");
                e.setAttribute(r, "class", "title");
                var a = e.createComment("");
                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = new Array(2);
                return a[0] = e.createUnsafeMorphAt(r, 0, 0), a[1] = e.createMorphAt(e.childAt(r, [1]), 0, 0), a
            },
            statements: [
                ["content", "model.content", ["loc", [null, [1, 18],
                    [1, 37]
                ]]],
                ["inline", "t", ["index.promoPod.promotionalEvents"],
                    [],
                    ["loc", [null, [1, 57],
                        [1, 97]
                    ]]
                ]
            ],
            locals: [],
            templates: []
        }
    }())
}), define("mobile-panel/templates/index", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 0
                            },
                            end: {
                                line: 1,
                                column: 48
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "partial", ["index/retention"],
                            [],
                            ["loc", [null, [1, 19],
                                [1, 48]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 48
                            },
                            end: {
                                line: 1,
                                column: 85
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "partial", ["index/promotion"],
                            [],
                            ["loc", [null, [1, 56],
                                [1, 85]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 191
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createElement("div");
                e.setAttribute(n, "class", "home-bg"), e.appendChild(t, n);
                var n = e.createElement("div");
                e.setAttribute(n, "class", "home-expander");
                var r = e.createElement("div");
                return e.setAttribute(r, "class", "home-expander-inner"), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
            },
            statements: [
                ["block", "if", [
                        ["get", "isRetention", ["loc", [null, [1, 6],
                            [1, 17]
                        ]]]
                    ],
                    [], 0, 1, ["loc", [null, [1, 0],
                        [1, 92]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("mobile-panel/templates/login", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 25
                            },
                            end: {
                                line: 1,
                                column: 90
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "t", ["login.title"],
                            [],
                            ["loc", [null, [1, 71],
                                [1, 90]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 215
                            },
                            end: {
                                line: 1,
                                column: 266
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "class", "mnotice");
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                    },
                    statements: [
                        ["content", "notice", ["loc", [null, [1, 250],
                            [1, 260]
                        ]]]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            n = function() {
                var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 312
                                },
                                end: {
                                    line: 1,
                                    column: 365
                                }
                            }
                        },
                        arity: 1,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("p"),
                                r = e.createComment("");
                            return e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createUnsafeMorphAt(e.childAt(t, [0]), 0, 0), r
                        },
                        statements: [
                            ["inline", "t-error", [
                                    ["get", "error", ["loc", [null, [1, 353],
                                        [1, 358]
                                    ]]]
                                ],
                                [],
                                ["loc", [null, [1, 342],
                                    [1, 361]
                                ]]
                            ]
                        ],
                        locals: ["error"],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 273
                            },
                            end: {
                                line: 1,
                                column: 380
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "class", "error_block");
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                    },
                    statements: [
                        ["block", "each", [
                                ["get", "errors", ["loc", [null, [1, 320],
                                    [1, 326]
                                ]]]
                            ],
                            [], 0, null, ["loc", [null, [1, 312],
                                [1, 374]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e]
                }
            }(),
            r = function() {
                var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 423
                                    },
                                    end: {
                                        line: 1,
                                        column: 475
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["inline", "t", ["login.emailMfaMessage"],
                                    [],
                                    ["loc", [null, [1, 446],
                                        [1, 475]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }(),
                    t = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 475
                                    },
                                    end: {
                                        line: 1,
                                        column: 514
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["inline", "t", ["login.genericMfaMessage"],
                                    [],
                                    ["loc", [null, [1, 483],
                                        [1, 514]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }(),
                    n = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 1162
                                    },
                                    end: {
                                        line: 1,
                                        column: 1345
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("p");
                                e.setAttribute(n, "class", "mgroup");
                                var r = e.createElement("button");
                                e.setAttribute(r, "id", "resend-security-code"), e.setAttribute(r, "class", "mbtn");
                                var a = e.createComment("");
                                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = e.childAt(t, [0, 0]),
                                    a = new Array(3);
                                return a[0] = e.createAttrMorph(r, "disabled"), a[1] = e.createElementMorph(r), a[2] = e.createMorphAt(r, 0, 0), a
                            },
                            statements: [
                                ["attribute", "disabled", ["get", "busy", ["loc", [null, [1, 1280],
                                    [1, 1284]
                                ]]]],
                                ["element", "action", ["resendSecurityCode"],
                                    [],
                                    ["loc", [null, [1, 1211],
                                        [1, 1242]
                                    ]]
                                ],
                                ["inline", "t", ["login.resendSecurityCode"],
                                    [],
                                    ["loc", [null, [1, 1300],
                                        [1, 1332]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 387
                            },
                            end: {
                                line: 1,
                                column: 1655
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("p");
                        e.setAttribute(n, "class", "mgroup");
                        var r = e.createComment("");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createElement("p");
                        e.setAttribute(n, "class", "mgroup");
                        var r = e.createElement("label");
                        e.setAttribute(r, "for", "security_code");
                        var a = e.createComment("");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createComment("");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createElement("p");
                        e.setAttribute(n, "class", "mgroup");
                        var r = e.createElement("label");
                        e.setAttribute(r, "for", "remember-device"), e.setAttribute(r, "class", "mcheckbox");
                        var a = e.createComment("");
                        e.appendChild(r, a);
                        var a = e.createTextNode("Â ");
                        e.appendChild(r, a);
                        var a = e.createComment("");
                        e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createElement("p");
                        e.setAttribute(n, "class", "mgroup");
                        var r = e.createElement("button");
                        e.setAttribute(r, "id", "confirm-security-code"), e.setAttribute(r, "class", "mbtn cta_btn");
                        var a = e.createComment("");
                        e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createElement("p");
                        e.setAttribute(n, "class", "mgroup");
                        var r = e.createElement("button");
                        e.setAttribute(r, "id", "cancel-security-code"), e.setAttribute(r, "class", "mbtn");
                        var a = e.createComment("");
                        e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createElement("p");
                        e.setAttribute(n, "class", "mgroup");
                        var r = e.createElement("a");
                        e.setAttribute(r, "href", "#");
                        var a = e.createComment("");
                        return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [1]),
                            a = e.childAt(r, [0]),
                            l = e.childAt(t, [2, 0]),
                            i = e.childAt(t, [3, 0]),
                            o = e.childAt(t, [5, 0]),
                            c = e.childAt(t, [6, 0]),
                            s = new Array(15);
                        return s[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), s[1] = e.createAttrMorph(a, "class"), s[2] = e.createMorphAt(a, 0, 0), s[3] = e.createMorphAt(r, 1, 1), s[4] = e.createMorphAt(l, 0, 0), s[5] = e.createMorphAt(l, 2, 2), s[6] = e.createAttrMorph(i, "disabled"), s[7] = e.createElementMorph(i), s[8] = e.createMorphAt(i, 0, 0), s[9] = e.createMorphAt(t, 4, 4, n), s[10] = e.createAttrMorph(o, "disabled"), s[11] = e.createElementMorph(o), s[12] = e.createMorphAt(o, 0, 0), s[13] = e.createElementMorph(c), s[14] = e.createMorphAt(c, 0, 0), s
                    },
                    statements: [
                        ["block", "if", [
                                ["get", "pendingMfaEmail", ["loc", [null, [1, 429],
                                    [1, 444]
                                ]]]
                            ],
                            [], 0, 1, ["loc", [null, [1, 423],
                                [1, 521]
                            ]]
                        ],
                        ["attribute", "class", ["concat", ["mlabel ", ["subexpr", "if", [
                                ["get", "errors", ["loc", [null, [1, 589],
                                    [1, 595]
                                ]]], "error"
                            ],
                            [],
                            ["loc", [null, [1, 584],
                                [1, 605]
                            ]]
                        ]]]],
                        ["inline", "t", ["login.enterSecurityCode"],
                            [],
                            ["loc", [null, [1, 607],
                                [1, 638]
                            ]]
                        ],
                        ["inline", "input", [],
                            ["type", "text", "id", "security-code", "name", "security_code", "placeholder", ["subexpr", "t", ["login.securityCode"],
                                [],
                                ["loc", [null, [1, 718],
                                    [1, 742]
                                ]]
                            ], "value", ["subexpr", "@mut", [
                                    ["get", "securityCode", ["loc", [null, [1, 749],
                                        [1, 761]
                                    ]]]
                                ],
                                [],
                                []
                            ], "class", "mfield"],
                            ["loc", [null, [1, 646],
                                [1, 778]
                            ]]
                        ],
                        ["inline", "input", [],
                            ["type", "checkbox", "id", "remember-device", "name", "remember-device", "checked", ["subexpr", "@mut", [
                                    ["get", "rememberDevice", ["loc", [null, [1, 923],
                                        [1, 937]
                                    ]]]
                                ],
                                [],
                                []
                            ]],
                            ["loc", [null, [1, 847],
                                [1, 939]
                            ]]
                        ],
                        ["inline", "t", ["login.rememberDevice"],
                            [],
                            ["loc", [null, [1, 945],
                                [1, 973]
                            ]]
                        ],
                        ["attribute", "disabled", ["get", "confirmButtonDisabled", ["loc", [null, [1, 1082],
                            [1, 1103]
                        ]]]],
                        ["element", "action", ["confirmSecurityCode"],
                            [],
                            ["loc", [null, [1, 1011],
                                [1, 1043]
                            ]]
                        ],
                        ["inline", "t", ["login.continue"],
                            [],
                            ["loc", [null, [1, 1127],
                                [1, 1149]
                            ]]
                        ],
                        ["block", "if", [
                                ["get", "pendingMfaEmail", ["loc", [null, [1, 1168],
                                    [1, 1183]
                                ]]]
                            ],
                            [], 2, null, ["loc", [null, [1, 1162],
                                [1, 1352]
                            ]]
                        ],
                        ["attribute", "disabled", ["get", "busy", ["loc", [null, [1, 1447],
                            [1, 1451]
                        ]]]],
                        ["element", "action", ["cancelSecurityCode"],
                            [],
                            ["loc", [null, [1, 1378],
                                [1, 1409]
                            ]]
                        ],
                        ["inline", "t", ["login.back"],
                            [],
                            ["loc", [null, [1, 1467],
                                [1, 1485]
                            ]]
                        ],
                        ["element", "action", ["externalLink", "https://kong.zendesk.com/hc/en-us/articles/360028091512", !0],
                            [],
                            ["loc", [null, [1, 1519],
                                [1, 1607]
                            ]]
                        ],
                        ["inline", "t", ["login.securityCodeHelp"],
                            [],
                            ["loc", [null, [1, 1617],
                                [1, 1647]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t, n]
                }
            }(),
            a = function() {
                var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 2234
                                },
                                end: {
                                    line: 1,
                                    column: 2368
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("span");
                            e.setAttribute(n, "class", "ico"), e.appendChild(t, n);
                            var n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, null), r
                        },
                        statements: [
                            ["inline", "t", ["login.loginWithFacebook"],
                                ["em", ["subexpr", "tag-decorator", ["em"],
                                    [],
                                    ["loc", [null, [1, 2346],
                                        [1, 2366]
                                    ]]
                                ]],
                                ["loc", [null, [1, 2313],
                                    [1, 2368]
                                ]]
                            ]
                        ],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 1655
                            },
                            end: {
                                line: 1,
                                column: 2667
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("p");
                        e.setAttribute(n, "class", "mgroup");
                        var r = e.createElement("label");
                        e.setAttribute(r, "for", "username");
                        var a = e.createComment("");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createComment("");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createElement("p");
                        e.setAttribute(n, "class", "mgroup");
                        var r = e.createElement("label");
                        e.setAttribute(r, "for", "password");
                        var a = e.createComment("");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createComment("");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createElement("p");
                        e.setAttribute(n, "class", "mgroup");
                        var r = e.createElement("input");
                        e.setAttribute(r, "type", "submit"), e.setAttribute(r, "class", "mbtn cta_btn"), e.appendChild(n, r);
                        var r = e.createElement("span");
                        e.setAttribute(r, "class", "divider");
                        var a = e.createComment("");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createElement("span");
                        e.setAttribute(r, "class", "divider");
                        var a = e.createComment("");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("div");
                        e.setAttribute(r, "id", "appleid-signin"), e.setAttribute(r, "data-color", "black"), e.setAttribute(r, "data-border", "true"), e.setAttribute(r, "data-type", "sign in"), e.setAttribute(r, "class", "apple_btn"), e.appendChild(n, r);
                        var r = e.createElement("script");
                        return e.setAttribute(r, "type", "text/javascript"), e.setAttribute(r, "src", "https://appleid.cdn-apple.com/appleauth/static/jsapi/appleid/1/en_US/appleid.auth.js"), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = e.childAt(r, [0]),
                            l = e.childAt(t, [1]),
                            i = e.childAt(l, [0]),
                            o = e.childAt(t, [2]),
                            c = e.childAt(o, [0]),
                            s = new Array(10);
                        return s[0] = e.createAttrMorph(a, "class"), s[1] = e.createMorphAt(a, 0, 0), s[2] = e.createMorphAt(r, 1, 1), s[3] = e.createAttrMorph(i, "class"), s[4] = e.createMorphAt(i, 0, 0), s[5] = e.createMorphAt(l, 1, 1), s[6] = e.createAttrMorph(c, "value"), s[7] = e.createMorphAt(e.childAt(o, [1]), 0, 0), s[8] = e.createMorphAt(o, 2, 2), s[9] = e.createMorphAt(e.childAt(o, [3]), 0, 0), s
                    },
                    statements: [
                        ["attribute", "class", ["concat", ["mlabel ", ["subexpr", "if", [
                                ["get", "errors", ["loc", [null, [1, 1722],
                                    [1, 1728]
                                ]]], "error"
                            ],
                            [],
                            ["loc", [null, [1, 1717],
                                [1, 1738]
                            ]]
                        ]]]],
                        ["inline", "t", ["login.username"],
                            [],
                            ["loc", [null, [1, 1740],
                                [1, 1762]
                            ]]
                        ],
                        ["inline", "input", [],
                            ["type", "text", "name", "username", "placeholder", ["subexpr", "t", ["login.username"],
                                [],
                                ["loc", [null, [1, 1818],
                                    [1, 1838]
                                ]]
                            ], "id", "username", "value", ["subexpr", "@mut", [
                                    ["get", "username", ["loc", [null, [1, 1859],
                                        [1, 1867]
                                    ]]]
                                ],
                                [],
                                []
                            ], "class", "mfield"],
                            ["loc", [null, [1, 1770],
                                [1, 1884]
                            ]]
                        ],
                        ["attribute", "class", ["concat", ["mlabel ", ["subexpr", "if", [
                                ["get", "errors", ["loc", [null, [1, 1947],
                                    [1, 1953]
                                ]]], "error"
                            ],
                            [],
                            ["loc", [null, [1, 1942],
                                [1, 1963]
                            ]]
                        ]]]],
                        ["inline", "t", ["login.password"],
                            [],
                            ["loc", [null, [1, 1965],
                                [1, 1987]
                            ]]
                        ],
                        ["inline", "input", [],
                            ["type", "password", "name", "password", "placeholder", ["subexpr", "t", ["login.password"],
                                [],
                                ["loc", [null, [1, 2047],
                                    [1, 2067]
                                ]]
                            ], "value", ["subexpr", "@mut", [
                                    ["get", "password", ["loc", [null, [1, 2074],
                                        [1, 2082]
                                    ]]]
                                ],
                                [],
                                []
                            ], "class", "mfield"],
                            ["loc", [null, [1, 1995],
                                [1, 2099]
                            ]]
                        ],
                        ["attribute", "value", ["subexpr", "t", ["login.login"],
                            [],
                            ["loc", [null, [1, 2148],
                                [1, 2167]
                            ]]
                        ]],
                        ["inline", "t", ["login.or"],
                            [],
                            ["loc", [null, [1, 2211],
                                [1, 2227]
                            ]]
                        ],
                        ["block", "link-to", ["facebook.login"],
                            ["classNames", "mbtn fb_btn"], 0, null, ["loc", [null, [1, 2234],
                                [1, 2380]
                            ]]
                        ],
                        ["inline", "t", ["login.or"],
                            [],
                            ["loc", [null, [1, 2402],
                                [1, 2418]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e]
                }
            }(),
            l = function() {
                var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 2703
                                    },
                                    end: {
                                        line: 1,
                                        column: 2761
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["inline", "t", ["login.forgotPassword"],
                                    [],
                                    ["loc", [null, [1, 2733],
                                        [1, 2761]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }(),
                    t = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 2802
                                    },
                                    end: {
                                        line: 1,
                                        column: 2898
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createElement("strong"),
                                    r = e.createComment("");
                                e.appendChild(n, r);
                                var r = e.createTextNode("Â»");
                                return e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(2);
                                return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(e.childAt(t, [1]), 0, 0), e.insertBoundary(t, 0), r
                            },
                            statements: [
                                ["inline", "t", ["login.noAccount"],
                                    [],
                                    ["loc", [null, [1, 2834],
                                        [1, 2857]
                                    ]]
                                ],
                                ["inline", "t", ["login.signUpNow"],
                                    [],
                                    ["loc", [null, [1, 2865],
                                        [1, 2888]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 2681
                            },
                            end: {
                                line: 1,
                                column: 2914
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createElement("p");
                        e.setAttribute(n, "class", "registration_link");
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(2);
                        return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(e.childAt(t, [1]), 0, 0), e.insertBoundary(t, 0), r
                    },
                    statements: [
                        ["block", "link-to", ["forgot-password"],
                            [], 0, null, ["loc", [null, [1, 2703],
                                [1, 2773]
                            ]]
                        ],
                        ["block", "link-to", ["registration-flow"],
                            [], 1, null, ["loc", [null, [1, 2802],
                                [1, 2910]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t]
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 2931
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "mlogin_page");
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createElement("form");
                e.setAttribute(r, "autocapitalize", "off"), e.setAttribute(r, "autocorrect", "off"), e.setAttribute(r, "autocomplete", "off"), e.setAttribute(r, "class", "mform");
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createComment("");
                return e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = e.childAt(r, [1]),
                    l = new Array(6);
                return l[0] = e.createMorphAt(r, 0, 0), l[1] = e.createElementMorph(a), l[2] = e.createMorphAt(a, 0, 0), l[3] = e.createMorphAt(a, 1, 1), l[4] = e.createMorphAt(a, 2, 2), l[5] = e.createMorphAt(r, 2, 2), l
            },
            statements: [
                ["block", "page-title", [],
                    ["additionalClasses", "mpagetitle"], 0, null, ["loc", [null, [1, 25],
                        [1, 105]
                    ]]
                ],
                ["element", "action", ["submit"],
                    ["on", "submit"],
                    ["loc", [null, [1, 169],
                        [1, 200]
                    ]]
                ],
                ["block", "if", [
                        ["get", "notice", ["loc", [null, [1, 221],
                            [1, 227]
                        ]]]
                    ],
                    [], 1, null, ["loc", [null, [1, 215],
                        [1, 273]
                    ]]
                ],
                ["block", "if", [
                        ["get", "errors", ["loc", [null, [1, 279],
                            [1, 285]
                        ]]]
                    ],
                    [], 2, null, ["loc", [null, [1, 273],
                        [1, 387]
                    ]]
                ],
                ["block", "if", [
                        ["get", "pendingMfa", ["loc", [null, [1, 393],
                            [1, 403]
                        ]]]
                    ],
                    [], 3, 4, ["loc", [null, [1, 387],
                        [1, 2674]
                    ]]
                ],
                ["block", "unless", [
                        ["get", "pendingMfa", ["loc", [null, [1, 2691],
                            [1, 2701]
                        ]]]
                    ],
                    [], 5, null, ["loc", [null, [1, 2681],
                        [1, 2925]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t, n, r, a, l]
        }
    }())
}), define("mobile-panel/templates/manage-mfa", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
            var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 38
                                },
                                end: {
                                    line: 1,
                                    column: 125
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("div");
                            e.setAttribute(n, "id", "mfa-error"), e.setAttribute(n, "class", "error_block");
                            var r = e.createElement("p"),
                                a = e.createComment("");
                            return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(e.childAt(t, [0, 0]), 0, 0), r
                        },
                        statements: [
                            ["content", "model.error", ["loc", [null, [1, 100],
                                [1, 115]
                            ]]]
                        ],
                        locals: [],
                        templates: []
                    }
                }(),
                t = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 132
                                },
                                end: {
                                    line: 1,
                                    column: 210
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("p");
                            e.setAttribute(n, "id", "mfa-message"), e.setAttribute(n, "class", "mnotice");
                            var r = e.createComment("");
                            return e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                        },
                        statements: [
                            ["content", "model.message", ["loc", [null, [1, 189],
                                [1, 206]
                            ]]]
                        ],
                        locals: [],
                        templates: []
                    }
                }(),
                n = function() {
                    var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 246
                                    },
                                    end: {
                                        line: 1,
                                        column: 385
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("p");
                                e.setAttribute(n, "id", "email-mfa-enabled"), e.setAttribute(n, "class", "mgroup");
                                var r = e.createComment("");
                                return e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                            },
                            statements: [
                                ["inline", "t", ["manageMfa.emailEnabled"],
                                    ["email", ["subexpr", "@mut", [
                                            ["get", "activeUser.emailAddress", ["loc", [null, [1, 356],
                                                [1, 379]
                                            ]]]
                                        ],
                                        [],
                                        []
                                    ]],
                                    ["loc", [null, [1, 321],
                                        [1, 381]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 217
                                },
                                end: {
                                    line: 1,
                                    column: 539
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createElement("p");
                            e.setAttribute(n, "class", "mgroup");
                            var r = e.createElement("button");
                            e.setAttribute(r, "id", "disable-mfa"), e.setAttribute(r, "class", "mbtn cta_btn");
                            var a = e.createComment("");
                            return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = e.childAt(t, [1, 0]),
                                a = new Array(4);
                            return a[0] = e.createMorphAt(t, 0, 0, n), a[1] = e.createAttrMorph(r, "disabled"), a[2] = e.createElementMorph(r), a[3] = e.createMorphAt(r, 0, 0), e.insertBoundary(t, 0), a
                        },
                        statements: [
                            ["block", "if", [
                                    ["get", "activeUser.emailMfaEnabled", ["loc", [null, [1, 252],
                                        [1, 278]
                                    ]]]
                                ],
                                [], 0, null, ["loc", [null, [1, 246],
                                    [1, 392]
                                ]]
                            ],
                            ["attribute", "disabled", ["get", "model.busy", ["loc", [null, [1, 467],
                                [1, 477]
                            ]]]],
                            ["element", "action", ["disable"],
                                [],
                                ["loc", [null, [1, 418],
                                    [1, 438]
                                ]]
                            ],
                            ["inline", "t", ["manageMfa.disable"],
                                [],
                                ["loc", [null, [1, 501],
                                    [1, 526]
                                ]]
                            ]
                        ],
                        locals: [],
                        templates: [e]
                    }
                }(),
                r = function() {
                    var e = function() {
                            return {
                                meta: {
                                    revision: "Ember@1.13.12",
                                    loc: {
                                        source: null,
                                        start: {
                                            line: 1,
                                            column: 547
                                        },
                                        end: {
                                            line: 1,
                                            column: 1406
                                        }
                                    }
                                },
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function(e) {
                                    var t = e.createDocumentFragment(),
                                        n = e.createElement("p");
                                    e.setAttribute(n, "class", "mgroup");
                                    var r = e.createComment("");
                                    e.appendChild(n, r), e.appendChild(t, n);
                                    var n = e.createElement("p");
                                    e.setAttribute(n, "class", "mgroup");
                                    var r = e.createElement("form");
                                    e.setAttribute(r, "autocapitalize", "off"), e.setAttribute(r, "autocorrect", "off"), e.setAttribute(r, "autocomplete", "off");
                                    var a = e.createComment("");
                                    e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n);
                                    var n = e.createElement("p");
                                    e.setAttribute(n, "class", "mgroup");
                                    var r = e.createElement("button");
                                    e.setAttribute(r, "id", "resend-mfa"), e.setAttribute(r, "class", "mbtn");
                                    var a = e.createComment("");
                                    e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n);
                                    var n = e.createElement("p");
                                    e.setAttribute(n, "class", "mgroup");
                                    var r = e.createElement("a");
                                    e.setAttribute(r, "href", "#");
                                    var a = e.createComment("");
                                    e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n);
                                    var n = e.createElement("p");
                                    e.setAttribute(n, "class", "mgroup submit");
                                    var r = e.createElement("button");
                                    e.setAttribute(r, "id", "confirm-mfa"), e.setAttribute(r, "class", "mbtn cta_btn");
                                    var a = e.createComment("");
                                    e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n);
                                    var n = e.createElement("p");
                                    e.setAttribute(n, "class", "mgroup");
                                    var r = e.createElement("button");
                                    e.setAttribute(r, "id", "cancel-mfa"), e.setAttribute(r, "class", "mbtn");
                                    var a = e.createComment("");
                                    return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                                },
                                buildRenderNodes: function(e, t, n) {
                                    var r = e.childAt(t, [2, 0]),
                                        a = e.childAt(t, [3, 0]),
                                        l = e.childAt(t, [4, 0]),
                                        i = e.childAt(t, [5, 0]),
                                        o = new Array(13);
                                    return o[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), o[1] = e.createMorphAt(e.childAt(t, [1, 0]), 0, 0), o[2] = e.createAttrMorph(r, "disabled"), o[3] = e.createElementMorph(r), o[4] = e.createMorphAt(r, 0, 0), o[5] = e.createElementMorph(a), o[6] = e.createMorphAt(a, 0, 0), o[7] = e.createAttrMorph(l, "disabled"), o[8] = e.createElementMorph(l), o[9] = e.createMorphAt(l, 0, 0), o[10] = e.createAttrMorph(i, "disabled"), o[11] = e.createElementMorph(i), o[12] = e.createMorphAt(i, 0, 0), o
                                },
                                statements: [
                                    ["inline", "t", ["manageMfa.enterSecurityCode"],
                                        [],
                                        ["loc", [null, [1, 607],
                                            [1, 642]
                                        ]]
                                    ],
                                    ["inline", "input", [],
                                        ["value", ["subexpr", "@mut", [
                                                ["get", "model.mfaCode", ["loc", [null, [1, 742],
                                                    [1, 755]
                                                ]]]
                                            ],
                                            [],
                                            []
                                        ], "id", "mfa-code", "disabled", ["subexpr", "@mut", [
                                                ["get", "model.busy", ["loc", [null, [1, 779],
                                                    [1, 789]
                                                ]]]
                                            ],
                                            [],
                                            []
                                        ], "class", "mfield"],
                                        ["loc", [null, [1, 728],
                                            [1, 806]
                                        ]]
                                    ],
                                    ["attribute", "disabled", ["get", "model.busy", ["loc", [null, [1, 890],
                                        [1, 900]
                                    ]]]],
                                    ["element", "action", ["resend"],
                                        [],
                                        ["loc", [null, [1, 843],
                                            [1, 862]
                                        ]]
                                    ],
                                    ["inline", "t", ["manageMfa.resend"],
                                        [],
                                        ["loc", [null, [1, 916],
                                            [1, 940]
                                        ]]
                                    ],
                                    ["element", "action", ["externalLink", "https://kong.zendesk.com/hc/en-us/articles/360028091512", !0],
                                        [],
                                        ["loc", [null, [1, 974],
                                            [1, 1062]
                                        ]]
                                    ],
                                    ["inline", "t", ["login.securityCodeHelp"],
                                        [],
                                        ["loc", [null, [1, 1072],
                                            [1, 1102]
                                        ]]
                                    ],
                                    ["attribute", "disabled", ["get", "confirmDisabled", ["loc", [null, [1, 1192],
                                        [1, 1207]
                                    ]]]],
                                    ["element", "action", ["confirm"],
                                        [],
                                        ["loc", [null, [1, 1143],
                                            [1, 1163]
                                        ]]
                                    ],
                                    ["inline", "t", ["manageMfa.confirm"],
                                        [],
                                        ["loc", [null, [1, 1231],
                                            [1, 1256]
                                        ]]
                                    ],
                                    ["attribute", "disabled", ["get", "model.busy", ["loc", [null, [1, 1343],
                                        [1, 1353]
                                    ]]]],
                                    ["element", "action", ["disable"],
                                        [],
                                        ["loc", [null, [1, 1295],
                                            [1, 1315]
                                        ]]
                                    ],
                                    ["inline", "t", ["manageMfa.cancel"],
                                        [],
                                        ["loc", [null, [1, 1369],
                                            [1, 1393]
                                        ]]
                                    ]
                                ],
                                locals: [],
                                templates: []
                            }
                        }(),
                        t = function() {
                            return {
                                meta: {
                                    revision: "Ember@1.13.12",
                                    loc: {
                                        source: null,
                                        start: {
                                            line: 1,
                                            column: 1406
                                        },
                                        end: {
                                            line: 1,
                                            column: 1643
                                        }
                                    }
                                },
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function(e) {
                                    var t = e.createDocumentFragment(),
                                        n = e.createElement("p");
                                    e.setAttribute(n, "class", "mgroup");
                                    var r = e.createComment("");
                                    e.appendChild(n, r), e.appendChild(t, n);
                                    var n = e.createElement("p");
                                    e.setAttribute(n, "class", "mgroup");
                                    var r = e.createElement("button");
                                    e.setAttribute(r, "id", "enable-mfa"), e.setAttribute(r, "class", "mbtn cta_btn");
                                    var a = e.createComment("");
                                    return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                                },
                                buildRenderNodes: function(e, t, n) {
                                    var r = e.childAt(t, [1, 0]),
                                        a = new Array(4);
                                    return a[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), a[1] = e.createAttrMorph(r, "disabled"), a[2] = e.createElementMorph(r), a[3] = e.createMorphAt(r, 0, 0), a
                                },
                                statements: [
                                    ["inline", "t", ["manageMfa.emailLabel"],
                                        ["email", ["subexpr", "@mut", [
                                                ["get", "activeUser.emailAddress", ["loc", [null, [1, 1465],
                                                    [1, 1488]
                                                ]]]
                                            ],
                                            [],
                                            []
                                        ]],
                                        ["loc", [null, [1, 1432],
                                            [1, 1490]
                                        ]]
                                    ],
                                    ["attribute", "disabled", ["get", "model.busy", ["loc", [null, [1, 1567],
                                        [1, 1577]
                                    ]]]],
                                    ["element", "action", ["enable"],
                                        [],
                                        ["loc", [null, [1, 1520],
                                            [1, 1539]
                                        ]]
                                    ],
                                    ["inline", "t", ["manageMfa.emailEnable"],
                                        [],
                                        ["loc", [null, [1, 1601],
                                            [1, 1630]
                                        ]]
                                    ]
                                ],
                                locals: [],
                                templates: []
                            }
                        }();
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 539
                                },
                                end: {
                                    line: 1,
                                    column: 1650
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [
                            ["block", "if", [
                                    ["get", "activeUser.mfaConfirmationRequired", ["loc", [null, [1, 553],
                                        [1, 587]
                                    ]]]
                                ],
                                [], 0, 1, ["loc", [null, [1, 547],
                                    [1, 1650]
                                ]]
                            ]
                        ],
                        locals: [],
                        templates: [e, t]
                    }
                }();
            return {
                meta: {
                    revision: "Ember@1.13.12",
                    loc: {
                        source: null,
                        start: {
                            line: 1,
                            column: 0
                        },
                        end: {
                            line: 1,
                            column: 1657
                        }
                    }
                },
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function(e) {
                    var t = e.createDocumentFragment(),
                        n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function(e, t, n) {
                    var r = new Array(3);
                    return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 1, 1, n), r[2] = e.createMorphAt(t, 2, 2, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [
                    ["block", "if", [
                            ["get", "model.error", ["loc", [null, [1, 44],
                                [1, 55]
                            ]]]
                        ],
                        [], 0, null, ["loc", [null, [1, 38],
                            [1, 132]
                        ]]
                    ],
                    ["block", "if", [
                            ["get", "model.message", ["loc", [null, [1, 138],
                                [1, 151]
                            ]]]
                        ],
                        [], 1, null, ["loc", [null, [1, 132],
                            [1, 217]
                        ]]
                    ],
                    ["block", "if", [
                            ["get", "activeUser.mfaEnabled", ["loc", [null, [1, 223],
                                [1, 244]
                            ]]]
                        ],
                        [], 2, 3, ["loc", [null, [1, 217],
                            [1, 1657]
                        ]]
                    ]
                ],
                locals: [],
                templates: [e, t, n, r]
            }
        }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 1666
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [
                ["block", "view", ["modal"],
                    ["modalController", ["subexpr", "@mut", [
                            ["get", "this", ["loc", [null, [1, 32],
                                [1, 36]
                            ]]]
                        ],
                        [],
                        []
                    ]], 0, null, ["loc", [null, [1, 0],
                        [1, 1666]
                    ]]
                ]
            ],
            locals: [],
            templates: [e]
        }
    }())
}), define("mobile-panel/templates/menu", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 34
                            },
                            end: {
                                line: 1,
                                column: 271
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("a");
                        e.setAttribute(n, "href", "#");
                        var r = e.createElement("div");
                        e.setAttribute(r, "class", "mtinyprofile");
                        var a = e.createElement("img");
                        e.setAttribute(a, "class", "avatar"), e.appendChild(r, a);
                        var a = e.createElement("p");
                        e.setAttribute(a, "class", "name");
                        var l = e.createComment("");
                        return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = e.childAt(r, [0]),
                            l = e.childAt(a, [0]),
                            i = new Array(3);
                        return i[0] = e.createElementMorph(r), i[1] = e.createAttrMorph(l, "src"), i[2] = e.createMorphAt(e.childAt(a, [1]), 0, 0), i
                    },
                    statements: [
                        ["element", "action", ["profile"],
                            [],
                            ["loc", [null, [1, 71],
                                [1, 91]
                            ]]
                        ],
                        ["attribute", "src", ["get", "activeUser.avatarUrl", ["loc", [null, [1, 138],
                            [1, 158]
                        ]]]],
                        ["inline", "t", ["nav.signedInAs"],
                            ["user", ["subexpr", "username-with-level", [],
                                ["user", ["get", "activeUser", ["loc", [null, [1, 244],
                                    [1, 254]
                                ]]]],
                                ["loc", [null, [1, 218],
                                    [1, 255]
                                ]]
                            ]],
                            ["loc", [null, [1, 192],
                                [1, 257]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 335
                            },
                            end: {
                                line: 1,
                                column: 371
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "t", ["nav.home"],
                            [],
                            ["loc", [null, [1, 355],
                                [1, 371]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            n = function() {
                var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 448
                                },
                                end: {
                                    line: 1,
                                    column: 498
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [
                            ["inline", "t", ["nav.achievements"],
                                [],
                                ["loc", [null, [1, 474],
                                    [1, 498]
                                ]]
                            ]
                        ],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 388
                            },
                            end: {
                                line: 1,
                                column: 515
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("li");
                        e.setAttribute(n, "class", "menu_section achievements");
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                    },
                    statements: [
                        ["block", "link-to", ["game.badges"],
                            [], 0, null, ["loc", [null, [1, 448],
                                [1, 510]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e]
                }
            }(),
            r = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 522
                            },
                            end: {
                                line: 1,
                                column: 682
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("li");
                        e.setAttribute(n, "class", "menu_section scores");
                        var r = e.createElement("a");
                        e.setAttribute(r, "href", "#");
                        var a = e.createComment("");
                        return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0, 0]),
                            a = new Array(3);
                        return a[0] = e.createAttrMorph(r, "class"), a[1] = e.createElementMorph(r), a[2] = e.createMorphAt(r, 0, 0), a
                    },
                    statements: [
                        ["attribute", "class", ["subexpr", "if", [
                                ["get", "highScoresActive", ["loc", [null, [1, 623],
                                    [1, 639]
                                ]]], "active"
                            ],
                            [],
                            ["loc", [null, [1, 618],
                                [1, 650]
                            ]]
                        ]],
                        ["element", "action", ["scores"],
                            [],
                            ["loc", [null, [1, 583],
                                [1, 602]
                            ]]
                        ],
                        ["inline", "t", ["nav.highScores"],
                            [],
                            ["loc", [null, [1, 651],
                                [1, 673]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            a = function() {
                var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 742
                                },
                                end: {
                                    line: 1,
                                    column: 838
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [
                            ["inline", "t", ["nav.forums"],
                                [],
                                ["loc", [null, [1, 820],
                                    [1, 838]
                                ]]
                            ]
                        ],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 689
                            },
                            end: {
                                line: 1,
                                column: 855
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("li");
                        e.setAttribute(n, "class", "menu_section forums");
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                    },
                    statements: [
                        ["block", "link-to", ["game-forums"],
                            ["current-when", "forum forum-search topic game-forums"], 0, null, ["loc", [null, [1, 742],
                                [1, 850]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e]
                }
            }(),
            l = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 896
                            },
                            end: {
                                line: 1,
                                column: 943
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "t", ["nav.settings"],
                            [],
                            ["loc", [null, [1, 923],
                                [1, 943]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            i = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 993
                            },
                            end: {
                                line: 1,
                                column: 1072
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "t", ["nav.support"],
                            [],
                            ["loc", [null, [1, 1053],
                                [1, 1072]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            o = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 1125
                            },
                            end: {
                                line: 1,
                                column: 1171
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "t", ["nav.moreGames"],
                            [],
                            ["loc", [null, [1, 1150],
                                [1, 1171]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            c = function() {
                var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 1234
                                },
                                end: {
                                    line: 1,
                                    column: 1274
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [
                            ["inline", "t", ["nav.guildChat"],
                                [],
                                ["loc", [null, [1, 1253],
                                    [1, 1274]
                                ]]
                            ]
                        ],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 1188
                            },
                            end: {
                                line: 1,
                                column: 1291
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("li");
                        e.setAttribute(n, "class", "menu_section chat");
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                    },
                    statements: [
                        ["block", "link-to", ["chat"],
                            [], 0, null, ["loc", [null, [1, 1234],
                                [1, 1286]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e]
                }
            }(),
            s = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 1298
                            },
                            end: {
                                line: 1,
                                column: 1423
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("li");
                        e.setAttribute(n, "class", "menu_section logout");
                        var r = e.createElement("a");
                        e.setAttribute(r, "href", "#");
                        var a = e.createComment("");
                        return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0, 0]),
                            a = new Array(2);
                        return a[0] = e.createElementMorph(r), a[1] = e.createMorphAt(r, 0, 0), a
                    },
                    statements: [
                        ["element", "action", ["logout"],
                            [],
                            ["loc", [null, [1, 1367],
                                [1, 1386]
                            ]]
                        ],
                        ["inline", "t", ["nav.logout"],
                            [],
                            ["loc", [null, [1, 1396],
                                [1, 1414]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            u = function() {
                var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 1462
                                    },
                                    end: {
                                        line: 1,
                                        column: 1500
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["inline", "t", ["nav.signIn"],
                                    [],
                                    ["loc", [null, [1, 1482],
                                        [1, 1500]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }(),
                    t = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 1551
                                    },
                                    end: {
                                        line: 1,
                                        column: 1603
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["inline", "t", ["nav.register"],
                                    [],
                                    ["loc", [null, [1, 1583],
                                        [1, 1603]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 1423
                            },
                            end: {
                                line: 1,
                                column: 1620
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("li");
                        e.setAttribute(n, "class", "menu_section login");
                        var r = e.createComment("");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createElement("li");
                        e.setAttribute(n, "class", "menu_section register");
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(2);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r[1] = e.createMorphAt(e.childAt(t, [1]), 0, 0), r
                    },
                    statements: [
                        ["block", "link-to", ["login"],
                            [], 0, null, ["loc", [null, [1, 1462],
                                [1, 1512]
                            ]]
                        ],
                        ["block", "link-to", ["registration-flow"],
                            [], 1, null, ["loc", [null, [1, 1551],
                                [1, 1615]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t]
                }
            }(),
            d = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 1627
                            },
                            end: {
                                line: 1,
                                column: 1742
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("li");
                        e.setAttribute(n, "class", "menu_section reload");
                        var r = e.createElement("a");
                        e.setAttribute(r, "href", "#");
                        var a = e.createComment("");
                        return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0, 0]),
                            a = new Array(2);
                        return a[0] = e.createElementMorph(r), a[1] = e.createMorphAt(r, 0, 0), a
                    },
                    statements: [
                        ["element", "action", ["reload"],
                            [],
                            ["loc", [null, [1, 1686],
                                [1, 1705]
                            ]]
                        ],
                        ["inline", "t", ["nav.reload"],
                            [],
                            ["loc", [null, [1, 1715],
                                [1, 1733]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 1760
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "mmenu_inner scroller");
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createElement("ul");
                e.setAttribute(r, "class", "mmenu_sections");
                var a = e.createElement("li");
                e.setAttribute(a, "class", "menu_section home");
                var l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createElement("li");
                e.setAttribute(a, "class", "menu_section settings");
                var l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createElement("li");
                e.setAttribute(a, "class", "menu_section support");
                var l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createElement("li");
                e.setAttribute(a, "class", "menu_section more_games");
                var l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createComment("");
                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = e.childAt(r, [1]),
                    l = new Array(11);
                return l[0] = e.createMorphAt(r, 0, 0), l[1] = e.createMorphAt(e.childAt(a, [0]), 0, 0), l[2] = e.createMorphAt(a, 1, 1), l[3] = e.createMorphAt(a, 2, 2), l[4] = e.createMorphAt(a, 3, 3), l[5] = e.createMorphAt(e.childAt(a, [4]), 0, 0), l[6] = e.createMorphAt(e.childAt(a, [5]), 0, 0), l[7] = e.createMorphAt(e.childAt(a, [6]), 0, 0), l[8] = e.createMorphAt(a, 7, 7), l[9] = e.createMorphAt(a, 8, 8), l[10] = e.createMorphAt(a, 9, 9), l
            },
            statements: [
                ["block", "if", [
                        ["get", "activeUser.isAuthenticated", ["loc", [null, [1, 40],
                            [1, 66]
                        ]]]
                    ],
                    [], 0, null, ["loc", [null, [1, 34],
                        [1, 278]
                    ]]
                ],
                ["block", "link-to", ["index"],
                    [], 1, null, ["loc", [null, [1, 335],
                        [1, 383]
                    ]]
                ],
                ["block", "if", [
                        ["get", "game.hasBadges", ["loc", [null, [1, 394],
                            [1, 408]
                        ]]]
                    ],
                    [], 2, null, ["loc", [null, [1, 388],
                        [1, 522]
                    ]]
                ],
                ["block", "if", [
                        ["get", "game.hasHighScores", ["loc", [null, [1, 528],
                            [1, 546]
                        ]]]
                    ],
                    [], 3, null, ["loc", [null, [1, 522],
                        [1, 689]
                    ]]
                ],
                ["block", "if", [
                        ["get", "game.hasForum", ["loc", [null, [1, 695],
                            [1, 708]
                        ]]]
                    ],
                    [], 4, null, ["loc", [null, [1, 689],
                        [1, 862]
                    ]]
                ],
                ["block", "link-to", ["edit-profile"],
                    [], 5, null, ["loc", [null, [1, 896],
                        [1, 955]
                    ]]
                ],
                ["block", "link-to", ["game.faq"],
                    ["current-when", "game.faq game.support"], 6, null, ["loc", [null, [1, 993],
                        [1, 1084]
                    ]]
                ],
                ["block", "link-to", ["more-games"],
                    [], 7, null, ["loc", [null, [1, 1125],
                        [1, 1183]
                    ]]
                ],
                ["block", "if", [
                        ["get", "showChat", ["loc", [null, [1, 1194],
                            [1, 1202]
                        ]]]
                    ],
                    [], 8, null, ["loc", [null, [1, 1188],
                        [1, 1298]
                    ]]
                ],
                ["block", "if", [
                        ["get", "activeUser.isAuthenticated", ["loc", [null, [1, 1304],
                            [1, 1330]
                        ]]]
                    ],
                    [], 9, 10, ["loc", [null, [1, 1298],
                        [1, 1627]
                    ]]
                ],
                ["block", "if", [
                        ["get", "device.canReload", ["loc", [null, [1, 1633],
                            [1, 1649]
                        ]]]
                    ],
                    [], 11, null, ["loc", [null, [1, 1627],
                        [1, 1749]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t, n, r, a, l, i, o, c, s, u, d]
        }
    }())
}), define("mobile-panel/templates/messages", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 117
                                },
                                end: {
                                    line: 2,
                                    column: 21
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createTextNode("\n(");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode(" new)");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 1, 1, n), r
                        },
                        statements: [
                            ["content", "unreadCount", ["loc", [null, [2, 1],
                                [2, 16]
                            ]]]
                        ],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 67
                            },
                            end: {
                                line: 2,
                                column: 28
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createTextNode("My Messages");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["block", "if", [
                                ["get", "unreadCount", ["loc", [null, [1, 123],
                                    [1, 134]
                                ]]]
                            ],
                            [], 0, null, ["loc", [null, [1, 117],
                                [2, 28]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e]
                }
            }(),
            t = function() {
                var e = function() {
                        var e = function() {
                            return {
                                meta: {
                                    revision: "Ember@1.13.12",
                                    loc: {
                                        source: null,
                                        start: {
                                            line: 3,
                                            column: 6
                                        },
                                        end: {
                                            line: 3,
                                            column: 84
                                        }
                                    }
                                },
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function(e) {
                                    var t = e.createDocumentFragment(),
                                        n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function(e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [
                                    ["content", "message.sender.username", ["loc", [null, [3, 57],
                                        [3, 84]
                                    ]]]
                                ],
                                locals: [],
                                templates: []
                            }
                        }();
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 2,
                                        column: 87
                                    },
                                    end: {
                                        line: 4,
                                        column: 305
                                    }
                                }
                            },
                            arity: 1,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("li"),
                                    r = e.createElement("div");
                                e.setAttribute(r, "class", "reply-meta");
                                var a = e.createElement("p"),
                                    l = e.createTextNode("from\n");
                                e.appendChild(a, l);
                                var l = e.createElement("span"),
                                    i = e.createComment("");
                                e.appendChild(l, i), e.appendChild(a, l);
                                var l = e.createTextNode("\n");
                                e.appendChild(a, l);
                                var l = e.createElement("span"),
                                    i = e.createTextNode("on ");
                                e.appendChild(l, i);
                                var i = e.createComment("");
                                e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a);
                                var a = e.createElement("ul");
                                e.setAttribute(a, "class", "topic-ctrls");
                                var l = e.createElement("li"),
                                    i = e.createElement("a");
                                e.setAttribute(i, "class", "forum-btn quote-btn");
                                var o = e.createElement("span");
                                e.setAttribute(o, "class", "ico back");
                                var c = e.createTextNode("^");
                                e.appendChild(o, c), e.appendChild(i, o);
                                var o = e.createTextNode("Reply");
                                e.appendChild(i, o), e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                                var r = e.createElement("div");
                                e.setAttribute(r, "class", "reply-copy");
                                var a = e.createComment("");
                                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = e.childAt(t, [0]),
                                    a = e.childAt(r, [0]),
                                    l = e.childAt(a, [0]),
                                    i = e.childAt(a, [1, 0]),
                                    o = new Array(5);
                                return o[0] = e.createAttrMorph(r, "class"), o[1] = e.createMorphAt(e.childAt(l, [1]), 0, 0), o[2] = e.createMorphAt(e.childAt(l, [3]), 1, 1), o[3] = e.createElementMorph(i), o[4] = e.createUnsafeMorphAt(e.childAt(r, [1]), 0, 0), o
                            },
                            statements: [
                                ["attribute", "class", ["concat", ["thread ", ["subexpr", "if", [
                                        ["get", "message.unread", ["loc", [null, [2, 138],
                                            [2, 152]
                                        ]]], "new"
                                    ],
                                    [],
                                    ["loc", [null, [2, 133],
                                        [2, 160]
                                    ]]
                                ]]]],
                                ["block", "link-to", ["profile.show", ["get", "message.sender.username", ["loc", [null, [3, 32],
                                        [3, 55]
                                    ]]]],
                                    [], 0, null, ["loc", [null, [3, 6],
                                        [3, 96]
                                    ]]
                                ],
                                ["inline", "unbound", [
                                        ["subexpr", "medium-format-datetime", [
                                                ["get", "message.createdAt", ["loc", [null, [4, 43],
                                                    [4, 60]
                                                ]]]
                                            ],
                                            [],
                                            ["loc", [null, [4, 19],
                                                [4, 61]
                                            ]]
                                        ]
                                    ],
                                    [],
                                    ["loc", [null, [4, 9],
                                        [4, 63]
                                    ]]
                                ],
                                ["element", "action", ["sendMessage", ["get", "message.sender.username", ["loc", [null, [4, 125],
                                        [4, 148]
                                    ]]]],
                                    ["on", "click"],
                                    ["loc", [null, [4, 102],
                                        [4, 161]
                                    ]]
                                ],
                                ["content", "message.content", ["loc", [null, [4, 273],
                                    [4, 294]
                                ]]]
                            ],
                            locals: ["message"],
                            templates: [e]
                        }
                    }(),
                    t = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 4,
                                        column: 319
                                    },
                                    end: {
                                        line: 4,
                                        column: 425
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("a");
                                e.setAttribute(n, "href", "#"), e.setAttribute(n, "class", "load-more mbtn");
                                var r = e.createTextNode("Show More Messages");
                                return e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = e.childAt(t, [0]),
                                    a = new Array(1);
                                return a[0] = e.createElementMorph(r), a
                            },
                            statements: [
                                ["element", "action", ["loadMore"],
                                    ["on", "click"],
                                    ["loc", [null, [4, 347],
                                        [4, 379]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 2,
                                column: 43
                            },
                            end: {
                                line: 4,
                                column: 432
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("ul");
                        e.setAttribute(n, "class", "thread-list");
                        var r = e.createComment("");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(2);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r[1] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["block", "each", [
                                ["get", "model", ["loc", [null, [2, 95],
                                    [2, 100]
                                ]]]
                            ],
                            [], 0, null, ["loc", [null, [2, 87],
                                [4, 314]
                            ]]
                        ],
                        ["block", "if", [
                                ["get", "nextSrid", ["loc", [null, [4, 325],
                                    [4, 333]
                                ]]]
                            ],
                            [], 1, null, ["loc", [null, [4, 319],
                                [4, 432]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t]
                }
            }(),
            n = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 4,
                                column: 432
                            },
                            end: {
                                line: 4,
                                column: 508
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("p");
                        e.setAttribute(n, "class", "no-messages");
                        var r = e.createElement("span");
                        e.setAttribute(r, "class", "ico");
                        var a = e.createTextNode("w");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createTextNode("no messages yet");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function() {
                        return []
                    },
                    statements: [],
                    locals: [],
                    templates: []
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 4,
                        column: 521
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div"),
                    r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createComment("");
                return e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = new Array(3);
                return a[0] = e.createAttrMorph(r, "class"), a[1] = e.createMorphAt(r, 0, 0), a[2] = e.createMorphAt(r, 1, 1), a
            },
            statements: [
                ["attribute", "class", ["concat", ["profile messages ", ["subexpr", "if", [
                        ["get", "messageCount", ["loc", [null, [1, 34],
                            [1, 46]
                        ]]], "", "no-messages"
                    ],
                    [],
                    ["loc", [null, [1, 29],
                        [1, 65]
                    ]]
                ]]]],
                ["block", "page-title", [],
                    ["additionalClasses", "mh2"], 0, null, ["loc", [null, [1, 67],
                        [2, 43]
                    ]]
                ],
                ["block", "if", [
                        ["get", "messageCount", ["loc", [null, [2, 49],
                            [2, 61]
                        ]]]
                    ],
                    [], 1, 2, ["loc", [null, [2, 43],
                        [4, 515]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t, n]
        }
    }())
}), define("mobile-panel/templates/modal", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 26
                            },
                            end: {
                                line: 1,
                                column: 89
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("h1");
                        e.setAttribute(n, "class", "modal-title");
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                    },
                    statements: [
                        ["content", "title", ["loc", [null, [1, 75],
                            [1, 84]
                        ]]]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 222
                                },
                                end: {
                                    line: 1,
                                    column: 275
                                }
                            }
                        },
                        arity: 1,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("li"),
                                r = e.createComment("");
                            return e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                        },
                        statements: [
                            ["inline", "t-error", [
                                    ["get", "error", ["loc", [null, [1, 263],
                                        [1, 268]
                                    ]]]
                                ],
                                [],
                                ["loc", [null, [1, 253],
                                    [1, 270]
                                ]]
                            ]
                        ],
                        locals: ["error"],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 100
                            },
                            end: {
                                line: 1,
                                column: 295
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "id", "modal-error-block"), e.setAttribute(n, "class", "error_block");
                        var r = e.createElement("p"),
                            a = e.createComment("");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("ul");
                        e.setAttribute(r, "class", "error_list");
                        var a = e.createComment("");
                        return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = new Array(2);
                        return a[0] = e.createMorphAt(e.childAt(r, [0]), 0, 0), a[1] = e.createMorphAt(e.childAt(r, [1]), 0, 0), a
                    },
                    statements: [
                        ["inline", "t", ["modal.thereWasAProblem"],
                            [],
                            ["loc", [null, [1, 165],
                                [1, 195]
                            ]]
                        ],
                        ["block", "each", [
                                ["get", "errors", ["loc", [null, [1, 230],
                                    [1, 236]
                                ]]]
                            ],
                            [], 0, null, ["loc", [null, [1, 222],
                                [1, 284]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e]
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 399
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "modal-dialog");
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createElement("button");
                e.setAttribute(r, "type", "button"), e.setAttribute(r, "class", "modal-close");
                var a = e.createTextNode("Ã—");
                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = e.childAt(r, [3]),
                    l = new Array(4);
                return l[0] = e.createMorphAt(r, 0, 0), l[1] = e.createMorphAt(r, 1, 1), l[2] = e.createMorphAt(r, 2, 2), l[3] = e.createElementMorph(a), l
            },
            statements: [
                ["block", "unless", [
                        ["get", "model.noTitle", ["loc", [null, [1, 36],
                            [1, 49]
                        ]]]
                    ],
                    [], 0, null, ["loc", [null, [1, 26],
                        [1, 100]
                    ]]
                ],
                ["block", "if", [
                        ["get", "errors", ["loc", [null, [1, 106],
                            [1, 112]
                        ]]]
                    ],
                    [], 1, null, ["loc", [null, [1, 100],
                        [1, 302]
                    ]]
                ],
                ["content", "yield", ["loc", [null, [1, 302],
                    [1, 311]
                ]]],
                ["element", "action", ["close"],
                    ["on", "click"],
                    ["loc", [null, [1, 333],
                        [1, 362]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("mobile-panel/templates/more-games", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 44
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(2);
                return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createUnsafeMorphAt(t, 1, 1, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [
                ["inline", "render", ["back-button"],
                    [],
                    ["loc", [null, [1, 0],
                        [1, 24]
                    ]]
                ],
                ["content", "model.content", ["loc", [null, [1, 24],
                    [1, 44]
                ]]]
            ],
            locals: [],
            templates: []
        }
    }())
}), define("mobile-panel/templates/pages", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 11
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createUnsafeMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [
                ["content", "model", ["loc", [null, [1, 0],
                    [1, 11]
                ]]]
            ],
            locals: [],
            templates: []
        }
    }())
}), define("mobile-panel/templates/post-flag-modal", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
            var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 144
                            },
                            end: {
                                line: 1,
                                column: 357
                            }
                        }
                    },
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("li"),
                            r = e.createElement("label"),
                            a = e.createComment("");
                        e.appendChild(r, a);
                        var a = e.createComment("");
                        return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0, 0]),
                            a = new Array(3);
                        return a[0] = e.createAttrMorph(r, "class"), a[1] = e.createMorphAt(r, 0, 0), a[2] = e.createMorphAt(r, 1, 1), a
                    },
                    statements: [
                        ["attribute", "class", ["concat", ["forum-btn ", ["subexpr", "if", [
                                ["subexpr", "eq", [
                                        ["get", "reason.value", ["loc", [null, [1, 210],
                                            [1, 222]
                                        ]]],
                                        ["get", "selectedReason", ["loc", [null, [1, 223],
                                            [1, 237]
                                        ]]]
                                    ],
                                    [],
                                    ["loc", [null, [1, 206],
                                        [1, 238]
                                    ]]
                                ], "pressed"
                            ],
                            [],
                            ["loc", [null, [1, 201],
                                [1, 250]
                            ]]
                        ]]]],
                        ["inline", "radio-button", [],
                            ["value", ["subexpr", "@mut", [
                                    ["get", "reason.value", ["loc", [null, [1, 273],
                                        [1, 285]
                                    ]]]
                                ],
                                [],
                                []
                            ], "name", "reason", "selection", ["subexpr", "@mut", [
                                    ["get", "selectedReason", ["loc", [null, [1, 310],
                                        [1, 324]
                                    ]]]
                                ],
                                [],
                                []
                            ]],
                            ["loc", [null, [1, 252],
                                [1, 326]
                            ]]
                        ],
                        ["inline", "t", [
                                ["get", "reason.label", ["loc", [null, [1, 330],
                                    [1, 342]
                                ]]]
                            ],
                            [],
                            ["loc", [null, [1, 326],
                                [1, 344]
                            ]]
                        ]
                    ],
                    locals: ["reason"],
                    templates: []
                }
            }();
            return {
                meta: {
                    revision: "Ember@1.13.12",
                    loc: {
                        source: null,
                        start: {
                            line: 1,
                            column: 0
                        },
                        end: {
                            line: 1,
                            column: 473
                        }
                    }
                },
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function(e) {
                    var t = e.createDocumentFragment(),
                        n = e.createElement("div");
                    e.setAttribute(n, "class", "modal-content-inner modal-list");
                    var r = e.createElement("p");
                    e.setAttribute(r, "class", "h2");
                    var a = e.createComment("");
                    e.appendChild(r, a);
                    var a = e.createTextNode(":");
                    e.appendChild(r, a), e.appendChild(n, r);
                    var r = e.createElement("ul"),
                        a = e.createComment("");
                    e.appendChild(r, a), e.appendChild(n, r);
                    var r = e.createElement("p"),
                        a = e.createElement("a");
                    e.setAttribute(a, "class", "forum-btn action");
                    var l = e.createComment("");
                    return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                },
                buildRenderNodes: function(e, t, n) {
                    var r = e.childAt(t, [0]),
                        a = e.childAt(r, [2, 0]),
                        l = new Array(4);
                    return l[0] = e.createMorphAt(e.childAt(r, [0]), 0, 0), l[1] = e.createMorphAt(e.childAt(r, [1]), 0, 0), l[2] = e.createElementMorph(a), l[3] = e.createMorphAt(a, 0, 0), l
                },
                statements: [
                    ["inline", "t", ["postFlagModal.reasonForFlagging"],
                        [],
                        ["loc", [null, [1, 96],
                            [1, 135]
                        ]]
                    ],
                    ["block", "each", [
                            ["get", "reasons", ["loc", [null, [1, 152],
                                [1, 159]
                            ]]]
                        ],
                        [], 0, null, ["loc", [null, [1, 144],
                            [1, 366]
                        ]]
                    ],
                    ["element", "action", ["flag"],
                        ["on", "click"],
                        ["loc", [null, [1, 377],
                            [1, 405]
                        ]]
                    ],
                    ["inline", "t", ["postFlagModal.submit"],
                        [],
                        ["loc", [null, [1, 431],
                            [1, 459]
                        ]]
                    ]
                ],
                locals: [],
                templates: [e]
            }
        }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 482
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [
                ["block", "view", ["modal"],
                    ["modalController", ["subexpr", "@mut", [
                            ["get", "this", ["loc", [null, [1, 32],
                                [1, 36]
                            ]]]
                        ],
                        [],
                        []
                    ]], 0, null, ["loc", [null, [1, 0],
                        [1, 482]
                    ]]
                ]
            ],
            locals: [],
            templates: [e]
        }
    }())
}), define("mobile-panel/templates/post-list-item", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 40
                            },
                            end: {
                                line: 1,
                                column: 179
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "t", ["postListItem.postedBy"],
                            ["user", ["subexpr", "posted-by", [],
                                ["user", ["get", "user", ["loc", [null, [1, 109],
                                    [1, 113]
                                ]]], "displayName", ["get", "displayName", ["loc", [null, [1, 126],
                                    [1, 137]
                                ]]]],
                                ["loc", [null, [1, 93],
                                    [1, 138]
                                ]]
                            ], "time", ["subexpr", "medium-format-datetime", [
                                    ["get", "postedAt", ["loc", [null, [1, 168],
                                        [1, 176]
                                    ]]]
                                ],
                                [],
                                ["loc", [null, [1, 144],
                                    [1, 177]
                                ]]
                            ]],
                            ["loc", [null, [1, 60],
                                [1, 179]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 179
                            },
                            end: {
                                line: 1,
                                column: 222
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "medium-format-datetime", [
                                ["get", "postedAt", ["loc", [null, [1, 212],
                                    [1, 220]
                                ]]]
                            ],
                            [],
                            ["loc", [null, [1, 187],
                                [1, 222]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            n = function() {
                var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 281
                                    },
                                    end: {
                                        line: 1,
                                        column: 500
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("span");
                                e.setAttribute(n, "class", "ico back");
                                var r = e.createTextNode('"');
                                e.appendChild(n, r), e.appendChild(t, n);
                                var n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["inline", "t", ["postListItem.quotePost"],
                                    [],
                                    ["loc", [null, [1, 470],
                                        [1, 500]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }(),
                    t = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 518
                                    },
                                    end: {
                                        line: 1,
                                        column: 635
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("a");
                                e.setAttribute(n, "href", "#"), e.setAttribute(n, "class", "forum-btn mod-btn");
                                var r = e.createElement("span");
                                e.setAttribute(r, "class", "ico");
                                var a = e.createTextNode("*");
                                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = e.childAt(t, [0]),
                                    a = new Array(1);
                                return a[0] = e.createElementMorph(r), a
                            },
                            statements: [
                                ["element", "action", ["moderatePost", ["get", "model", ["loc", [null, [1, 562],
                                        [1, 567]
                                    ]]]],
                                    [],
                                    ["loc", [null, [1, 538],
                                        [1, 569]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }(),
                    n = function() {
                        var e = function() {
                                return {
                                    meta: {
                                        revision: "Ember@1.13.12",
                                        loc: {
                                            source: null,
                                            start: {
                                                line: 1,
                                                column: 643
                                            },
                                            end: {
                                                line: 1,
                                                column: 762
                                            }
                                        }
                                    },
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function(e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createElement("a");
                                        e.setAttribute(n, "href", "#"), e.setAttribute(n, "class", "forum-btn edit-btn");
                                        var r = e.createElement("span");
                                        e.setAttribute(r, "class", "ico");
                                        var a = e.createTextNode("*");
                                        return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function(e, t, n) {
                                        var r = e.childAt(t, [0]),
                                            a = new Array(1);
                                        return a[0] = e.createElementMorph(r), a
                                    },
                                    statements: [
                                        ["element", "action", ["editPost", ["get", "model", ["loc", [null, [1, 688],
                                                [1, 693]
                                            ]]]],
                                            [],
                                            ["loc", [null, [1, 668],
                                                [1, 695]
                                            ]]
                                        ]
                                    ],
                                    locals: [],
                                    templates: []
                                }
                            }(),
                            t = function() {
                                var e = function() {
                                        return {
                                            meta: {
                                                revision: "Ember@1.13.12",
                                                loc: {
                                                    source: null,
                                                    start: {
                                                        line: 1,
                                                        column: 770
                                                    },
                                                    end: {
                                                        line: 1,
                                                        column: 859
                                                    }
                                                }
                                            },
                                            arity: 0,
                                            cachedFragment: null,
                                            hasRendered: !1,
                                            buildFragment: function(e) {
                                                var t = e.createDocumentFragment(),
                                                    n = e.createElement("span");
                                                e.setAttribute(n, "class", "forum-btn flag-btn pressed");
                                                var r = e.createElement("span");
                                                e.setAttribute(r, "class", "ico");
                                                var a = e.createTextNode("f");
                                                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                                            },
                                            buildRenderNodes: function() {
                                                return []
                                            },
                                            statements: [],
                                            locals: [],
                                            templates: []
                                        }
                                    }(),
                                    t = function() {
                                        return {
                                            meta: {
                                                revision: "Ember@1.13.12",
                                                loc: {
                                                    source: null,
                                                    start: {
                                                        line: 1,
                                                        column: 859
                                                    },
                                                    end: {
                                                        line: 1,
                                                        column: 964
                                                    }
                                                }
                                            },
                                            arity: 0,
                                            cachedFragment: null,
                                            hasRendered: !1,
                                            buildFragment: function(e) {
                                                var t = e.createDocumentFragment(),
                                                    n = e.createElement("a");
                                                e.setAttribute(n, "href", "#"), e.setAttribute(n, "class", "forum-btn flag-btn");
                                                var r = e.createElement("span");
                                                e.setAttribute(r, "class", "ico");
                                                var a = e.createTextNode("f");
                                                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                                            },
                                            buildRenderNodes: function(e, t, n) {
                                                var r = e.childAt(t, [0]),
                                                    a = new Array(1);
                                                return a[0] = e.createElementMorph(r), a
                                            },
                                            statements: [
                                                ["element", "action", ["flagPost", ["get", "model", ["loc", [null, [1, 890],
                                                        [1, 895]
                                                    ]]]],
                                                    [],
                                                    ["loc", [null, [1, 870],
                                                        [1, 897]
                                                    ]]
                                                ]
                                            ],
                                            locals: [],
                                            templates: []
                                        }
                                    }();
                                return {
                                    meta: {
                                        revision: "Ember@1.13.12",
                                        loc: {
                                            source: null,
                                            start: {
                                                line: 1,
                                                column: 762
                                            },
                                            end: {
                                                line: 1,
                                                column: 971
                                            }
                                        }
                                    },
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function(e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createComment("");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function(e, t, n) {
                                        var r = new Array(1);
                                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                    },
                                    statements: [
                                        ["block", "if", [
                                                ["get", "flagged", ["loc", [null, [1, 776],
                                                    [1, 783]
                                                ]]]
                                            ],
                                            [], 0, 1, ["loc", [null, [1, 770],
                                                [1, 971]
                                            ]]
                                        ]
                                    ],
                                    locals: [],
                                    templates: [e, t]
                                }
                            }();
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 635
                                    },
                                    end: {
                                        line: 1,
                                        column: 978
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["block", "if", [
                                        ["get", "viewingOwnPost", ["loc", [null, [1, 649],
                                            [1, 663]
                                        ]]]
                                    ],
                                    [], 0, 1, ["loc", [null, [1, 643],
                                        [1, 978]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: [e, t]
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 233
                            },
                            end: {
                                line: 1,
                                column: 995
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("ul");
                        e.setAttribute(n, "class", "topic-ctrls");
                        var r = e.createElement("li"),
                            a = e.createComment("");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("li"),
                            a = e.createComment("");
                        return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = new Array(2);
                        return a[0] = e.createMorphAt(e.childAt(r, [0]), 0, 0), a[1] = e.createMorphAt(e.childAt(r, [1]), 0, 0), a
                    },
                    statements: [
                        ["block", "view", ["restricted-access-button"],
                            ["classNames", "forum-btn quote-btn", "action", "quotePost", "param", ["subexpr", "@mut", [
                                    ["get", "model", ["loc", [null, [1, 374],
                                        [1, 379]
                                    ]]]
                                ],
                                [],
                                []
                            ], "errorMessage", ["subexpr", "t", ["forums.restrictAccess"],
                                [],
                                ["loc", [null, [1, 393],
                                    [1, 420]
                                ]]
                            ], "_controller", ["subexpr", "@mut", [
                                    ["get", "this", ["loc", [null, [1, 433],
                                        [1, 437]
                                    ]]]
                                ],
                                [],
                                []
                            ]], 0, null, ["loc", [null, [1, 281],
                                [1, 509]
                            ]]
                        ],
                        ["block", "if", [
                                ["get", "moderator", ["loc", [null, [1, 524],
                                    [1, 533]
                                ]]]
                            ],
                            [], 1, 2, ["loc", [null, [1, 518],
                                [1, 985]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t, n]
                }
            }(),
            r = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 1032
                            },
                            end: {
                                line: 1,
                                column: 1087
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("em"),
                            r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                    },
                    statements: [
                        ["inline", "t", ["postListItem.postRemoved"],
                            [],
                            ["loc", [null, [1, 1050],
                                [1, 1082]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            a = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 1087
                            },
                            end: {
                                line: 1,
                                column: 1109
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createUnsafeMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["content", "bodyHtml", ["loc", [null, [1, 1095],
                            [1, 1109]
                        ]]]
                    ],
                    locals: [],
                    templates: []
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 1122
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "reply-meta");
                var r = e.createElement("p"),
                    a = e.createComment("");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createElement("div");
                e.setAttribute(n, "class", "reply-copy");
                var r = e.createComment("");
                return e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = new Array(4);
                return a[0] = e.createAttrMorph(r, "id"), a[1] = e.createMorphAt(e.childAt(r, [0]), 0, 0), a[2] = e.createMorphAt(r, 1, 1), a[3] = e.createMorphAt(e.childAt(t, [1]), 0, 0), a
            },
            statements: [
                ["attribute", "id", ["get", "domId", ["loc", [null, [1, 10],
                    [1, 15]
                ]]]],
                ["block", "if", [
                        ["get", "showPostedBy", ["loc", [null, [1, 46],
                            [1, 58]
                        ]]]
                    ],
                    [], 0, 1, ["loc", [null, [1, 40],
                        [1, 229]
                    ]]
                ],
                ["block", "if", [
                        ["get", "showControls", ["loc", [null, [1, 239],
                            [1, 251]
                        ]]]
                    ],
                    [], 2, null, ["loc", [null, [1, 233],
                        [1, 1002]
                    ]]
                ],
                ["block", "if", [
                        ["get", "hidden", ["loc", [null, [1, 1038],
                            [1, 1044]
                        ]]]
                    ],
                    [], 3, 4, ["loc", [null, [1, 1032],
                        [1, 1116]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t, n, r, a]
        }
    }())
}), define("mobile-panel/templates/post-moderate-modal", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
            return {
                meta: {
                    revision: "Ember@1.13.12",
                    loc: {
                        source: null,
                        start: {
                            line: 1,
                            column: 0
                        },
                        end: {
                            line: 1,
                            column: 556
                        }
                    }
                },
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function(e) {
                    var t = e.createDocumentFragment(),
                        n = e.createElement("div");
                    e.setAttribute(n, "class", "modal-content-inner modal-list");
                    var r = e.createElement("p");
                    e.setAttribute(r, "class", "h2");
                    var a = e.createTextNode(" ");
                    e.appendChild(r, a);
                    var a = e.createComment("");
                    e.appendChild(r, a);
                    var a = e.createTextNode(":");
                    e.appendChild(r, a), e.appendChild(n, r);
                    var r = e.createElement("ul"),
                        a = e.createElement("li"),
                        l = e.createElement("a");
                    e.setAttribute(l, "href", "#"), e.setAttribute(l, "class", "forum-btn");
                    var i = e.createComment("");
                    e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a);
                    var a = e.createElement("li"),
                        l = e.createElement("a");
                    e.setAttribute(l, "href", "#"), e.setAttribute(l, "class", "forum-btn");
                    var i = e.createComment("");
                    e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a);
                    var a = e.createElement("li"),
                        l = e.createElement("a");
                    e.setAttribute(l, "href", "#"), e.setAttribute(l, "class", "forum-btn");
                    var i = e.createComment("");
                    e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a);
                    var a = e.createElement("li"),
                        l = e.createElement("a");
                    e.setAttribute(l, "href", "#"), e.setAttribute(l, "class", "forum-btn");
                    var i = e.createComment("");
                    return e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                },
                buildRenderNodes: function(e, t, n) {
                    var r = e.childAt(t, [0]),
                        a = e.childAt(r, [1]),
                        l = e.childAt(a, [0, 0]),
                        i = e.childAt(a, [1, 0]),
                        o = e.childAt(a, [2, 0]),
                        c = e.childAt(a, [3, 0]),
                        s = new Array(9);
                    return s[0] = e.createMorphAt(e.childAt(r, [0]), 1, 1), s[1] = e.createElementMorph(l), s[2] = e.createMorphAt(l, 0, 0), s[3] = e.createElementMorph(i), s[4] = e.createMorphAt(i, 0, 0), s[5] = e.createElementMorph(o), s[6] = e.createMorphAt(o, 0, 0), s[7] = e.createElementMorph(c), s[8] = e.createMorphAt(c, 0, 0), s
                },
                statements: [
                    ["inline", "t", ["postModerateModal.moderationOptions"],
                        [],
                        ["loc", [null, [1, 97],
                            [1, 140]
                        ]]
                    ],
                    ["element", "action", ["editPost"],
                        [],
                        ["loc", [null, [1, 156],
                            [1, 177]
                        ]]
                    ],
                    ["inline", "t", ["postModerateModal.edit"],
                        [],
                        ["loc", [null, [1, 205],
                            [1, 235]
                        ]]
                    ],
                    ["element", "action", ["deletePost"],
                        [],
                        ["loc", [null, [1, 251],
                            [1, 274]
                        ]]
                    ],
                    ["inline", "t", ["postModerateModal.delete"],
                        [],
                        ["loc", [null, [1, 302],
                            [1, 334]
                        ]]
                    ],
                    ["element", "action", ["hidePost"],
                        [],
                        ["loc", [null, [1, 350],
                            [1, 371]
                        ]]
                    ],
                    ["inline", "t", ["postModerateModal.hide"],
                        [],
                        ["loc", [null, [1, 399],
                            [1, 429]
                        ]]
                    ],
                    ["element", "action", ["markPostAsSpam"],
                        [],
                        ["loc", [null, [1, 445],
                            [1, 472]
                        ]]
                    ],
                    ["inline", "t", ["postModerateModal.markAsSpam"],
                        [],
                        ["loc", [null, [1, 500],
                            [1, 536]
                        ]]
                    ]
                ],
                locals: [],
                templates: []
            }
        }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 565
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [
                ["block", "view", ["modal"],
                    ["modalController", ["subexpr", "@mut", [
                            ["get", "this", ["loc", [null, [1, 32],
                                [1, 36]
                            ]]]
                        ],
                        [],
                        []
                    ]], 0, null, ["loc", [null, [1, 0],
                        [1, 565]
                    ]]
                ]
            ],
            locals: [],
            templates: [e]
        }
    }())
}), define("mobile-panel/templates/privacy-policy-required", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 147
                                },
                                end: {
                                    line: 1,
                                    column: 274
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("div");
                            e.setAttribute(n, "class", "error_block");
                            var r = e.createElement("p"),
                                a = e.createElement("strong"),
                                l = e.createComment("");
                            return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(e.childAt(t, [0, 0, 0]), 0, 0), r
                        },
                        statements: [
                            ["inline", "t", ["privacyPolicyRequired.invalidParentEmail"],
                                [],
                                ["loc", [null, [1, 207],
                                    [1, 255]
                                ]]
                            ]
                        ],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 29
                            },
                            end: {
                                line: 1,
                                column: 750
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("form");
                        e.setAttribute(n, "class", "mform m-privacy__text");
                        var r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createElement("div");
                        e.setAttribute(r, "class", "mgroup");
                        var a = e.createElement("em");
                        e.setAttribute(a, "class", "msmallprint");
                        var l = e.createComment("");
                        e.appendChild(a, l), e.appendChild(r, a);
                        var a = e.createElement("br");
                        e.appendChild(r, a);
                        var a = e.createComment("");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("div");
                        e.setAttribute(r, "class", "mgroup actions");
                        var a = e.createElement("button");
                        e.setAttribute(a, "type", "submit"), e.setAttribute(a, "class", "mbtn cta_btn");
                        var l = e.createComment("");
                        e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("div");
                        e.setAttribute(r, "class", "m-privacy__form mform");
                        var a = e.createElement("a");
                        e.setAttribute(a, "href", "#"), e.setAttribute(a, "class", "mbtn");
                        var l = e.createComment("");
                        return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = e.childAt(r, [1]),
                            l = e.childAt(r, [3, 0]),
                            i = new Array(7);
                        return i[0] = e.createElementMorph(r), i[1] = e.createMorphAt(r, 0, 0), i[2] = e.createMorphAt(e.childAt(a, [0]), 0, 0), i[3] = e.createMorphAt(a, 2, 2), i[4] = e.createMorphAt(e.childAt(r, [2, 0]), 0, 0), i[5] = e.createElementMorph(l), i[6] = e.createMorphAt(l, 0, 0), i
                    },
                    statements: [
                        ["element", "action", ["submitParentEmail"],
                            ["on", "submit"],
                            ["loc", [null, [1, 74],
                                [1, 116]
                            ]]
                        ],
                        ["block", "if", [
                                ["get", "parentEmailError", ["loc", [null, [1, 153],
                                    [1, 169]
                                ]]]
                            ],
                            [], 0, null, ["loc", [null, [1, 147],
                                [1, 281]
                            ]]
                        ],
                        ["inline", "t", ["privacyPolicyRequired.parentEmailRequired"],
                            [],
                            ["loc", [null, [1, 325],
                                [1, 374]
                            ]]
                        ],
                        ["inline", "input", [],
                            ["value", ["subexpr", "@mut", [
                                    ["get", "parentEmail", ["loc", [null, [1, 397],
                                        [1, 408]
                                    ]]]
                                ],
                                [],
                                []
                            ], "id", "parentEmail", "placeholder", ["subexpr", "t", ["registrationFlow.parentEmail.placeholder"],
                                [],
                                ["loc", [null, [1, 438],
                                    [1, 484]
                                ]]
                            ], "class", "mfield"],
                            ["loc", [null, [1, 383],
                                [1, 501]
                            ]]
                        ],
                        ["inline", "t", ["privacyPolicyRequired.submitButton"],
                            [],
                            ["loc", [null, [1, 578],
                                [1, 620]
                            ]]
                        ],
                        ["element", "action", ["logout"],
                            [],
                            ["loc", [null, [1, 673],
                                [1, 692]
                            ]]
                        ],
                        ["inline", "t", ["nav.logout"],
                            [],
                            ["loc", [null, [1, 715],
                                [1, 733]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e]
                }
            }(),
            t = function() {
                var e = function() {
                        var e = function() {
                            return {
                                meta: {
                                    revision: "Ember@1.13.12",
                                    loc: {
                                        source: null,
                                        start: {
                                            line: 1,
                                            column: 825
                                        },
                                        end: {
                                            line: 1,
                                            column: 883
                                        }
                                    }
                                },
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function(e) {
                                    var t = e.createDocumentFragment(),
                                        n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function(e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [
                                    ["inline", "t", ["privacyPolicyRequired.thankYou"],
                                        [],
                                        ["loc", [null, [1, 845],
                                            [1, 883]
                                        ]]
                                    ]
                                ],
                                locals: [],
                                templates: []
                            }
                        }();
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 750
                                    },
                                    end: {
                                        line: 1,
                                        column: 1057
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("div");
                                e.setAttribute(n, "class", "m-privacy__text");
                                var r = e.createComment("");
                                e.appendChild(n, r);
                                var r = e.createComment("");
                                e.appendChild(n, r), e.appendChild(t, n);
                                var n = e.createElement("div");
                                e.setAttribute(n, "class", "m-privacy__form mform");
                                var r = e.createElement("a");
                                e.setAttribute(r, "href", "#"), e.setAttribute(r, "class", "mbtn cta_btn");
                                var a = e.createComment("");
                                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = e.childAt(t, [0]),
                                    a = e.childAt(t, [1, 0]),
                                    l = new Array(4);
                                return l[0] = e.createMorphAt(r, 0, 0), l[1] = e.createMorphAt(r, 1, 1), l[2] = e.createElementMorph(a), l[3] = e.createMorphAt(a, 0, 0), l
                            },
                            statements: [
                                ["block", "if", [
                                        ["get", "showThankYou", ["loc", [null, [1, 831],
                                            [1, 843]
                                        ]]]
                                    ],
                                    [], 0, null, ["loc", [null, [1, 825],
                                        [1, 890]
                                    ]]
                                ],
                                ["inline", "t", ["privacyPolicyRequired.parentalConsent"],
                                    [],
                                    ["loc", [null, [1, 890],
                                        [1, 935]
                                    ]]
                                ],
                                ["element", "action", ["logout"],
                                    [],
                                    ["loc", [null, [1, 979],
                                        [1, 998]
                                    ]]
                                ],
                                ["inline", "t", ["nav.logout"],
                                    [],
                                    ["loc", [null, [1, 1029],
                                        [1, 1047]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: [e]
                        }
                    }(),
                    t = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 1057
                                    },
                                    end: {
                                        line: 1,
                                        column: 1566
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("div");
                                e.setAttribute(n, "class", "m-privacy__text");
                                var r = e.createComment("");
                                e.appendChild(n, r), e.appendChild(t, n);
                                var n = e.createElement("form");
                                e.setAttribute(n, "class", "m-privacy__form mform");
                                var r = e.createElement("button");
                                e.setAttribute(r, "type", "submit"), e.setAttribute(r, "class", "mbtn cta_btn");
                                var a = e.createComment("");
                                e.appendChild(r, a), e.appendChild(n, r);
                                var r = e.createElement("a");
                                e.setAttribute(r, "href", "#"), e.setAttribute(r, "class", "mbtn");
                                var a = e.createComment("");
                                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = e.childAt(t, [1]),
                                    a = e.childAt(r, [1]),
                                    l = new Array(5);
                                return l[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), l[1] = e.createElementMorph(r), l[2] = e.createMorphAt(e.childAt(r, [0]), 0, 0), l[3] = e.createElementMorph(a), l[4] = e.createMorphAt(a, 0, 0), l
                            },
                            statements: [
                                ["inline", "t", ["privacyPolicyRequired.policyConsentRequired"],
                                    ["ppLink", ["subexpr", "tag-decorator", ["a"],
                                        ["class", "pp-link", "href", "#"],
                                        ["loc", [null, [1, 1151],
                                            [1, 1195]
                                        ]]
                                    ], "tosLink", ["subexpr", "tag-decorator", ["a"],
                                        ["class", "tos-link", "href", "#"],
                                        ["loc", [null, [1, 1204],
                                            [1, 1249]
                                        ]]
                                    ], "cookieLink", ["subexpr", "tag-decorator", ["a"],
                                        ["class", "cookie-link", "href", "#"],
                                        ["loc", [null, [1, 1261],
                                            [1, 1309]
                                        ]]
                                    ]],
                                    ["loc", [null, [1, 1094],
                                        [1, 1311]
                                    ]]
                                ],
                                ["element", "action", ["submitPolicyConsent"],
                                    ["on", "submit"],
                                    ["loc", [null, [1, 1323],
                                        [1, 1367]
                                    ]]
                                ],
                                ["inline", "t", ["privacyPolicyRequired.acceptButton"],
                                    [],
                                    ["loc", [null, [1, 1441],
                                        [1, 1483]
                                    ]]
                                ],
                                ["element", "action", ["logout"],
                                    [],
                                    ["loc", [null, [1, 1495],
                                        [1, 1514]
                                    ]]
                                ],
                                ["inline", "t", ["nav.logout"],
                                    [],
                                    ["loc", [null, [1, 1537],
                                        [1, 1555]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 750
                            },
                            end: {
                                line: 1,
                                column: 1566
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["block", "if", [
                                ["get", "activeUser.awaitingParentalConsent", ["loc", [null, [1, 760],
                                    [1, 794]
                                ]]]
                            ],
                            [], 0, 1, ["loc", [null, [1, 750],
                                [1, 1566]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t]
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 1579
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "m-privacy__page");
                var r = e.createComment("");
                return e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
            },
            statements: [
                ["block", "if", [
                        ["get", "activeUser.mustEnterParentEmail", ["loc", [null, [1, 35],
                            [1, 66]
                        ]]]
                    ],
                    [], 0, 1, ["loc", [null, [1, 29],
                        [1, 1573]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("mobile-panel/templates/profile/badges", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 69
                            },
                            end: {
                                line: 1,
                                column: 167
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("strong"),
                            r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createTextNode(" /");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createElement("span"),
                            r = e.createTextNode("Badges");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                    },
                    statements: [
                        ["content", "username", ["loc", [null, [1, 125],
                            [1, 137]
                        ]]]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 297
                                },
                                end: {
                                    line: 1,
                                    column: 581
                                }
                            }
                        },
                        arity: 1,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("li");
                            e.setAttribute(n, "class", "mbadge");
                            var r = e.createElement("p");
                            e.setAttribute(r, "class", "mbadgegraphic");
                            var a = e.createElement("img");
                            e.setAttribute(a, "class", "mbadgeimg"), e.appendChild(r, a);
                            var a = e.createElement("span");
                            e.setAttribute(a, "class", "mbadgedif");
                            var l = e.createComment("");
                            e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                            var r = e.createElement("div");
                            e.setAttribute(r, "class", "mbadgetxt");
                            var a = e.createElement("p");
                            e.setAttribute(a, "class", "mbadgeinfo");
                            var l = e.createElement("strong"),
                                i = e.createComment("");
                            e.appendChild(l, i), e.appendChild(a, l);
                            var l = e.createComment("");
                            return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = e.childAt(t, [0]),
                                a = e.childAt(r, [0]),
                                l = e.childAt(a, [0]),
                                i = e.childAt(r, [1, 0]),
                                o = new Array(4);
                            return o[0] = e.createAttrMorph(l, "src"), o[1] = e.createMorphAt(e.childAt(a, [1]), 0, 0), o[2] = e.createMorphAt(e.childAt(i, [0]), 0, 0), o[3] = e.createMorphAt(i, 1, 1), o
                        },
                        statements: [
                            ["attribute", "src", ["get", "badge.imageUrl", ["loc", [null, [1, 384],
                                [1, 398]
                            ]]]],
                            ["content", "badge.level", ["loc", [null, [1, 443],
                                [1, 458]
                            ]]],
                            ["content", "badge.name", ["loc", [null, [1, 522],
                                [1, 536]
                            ]]],
                            ["content", "badge.description", ["loc", [null, [1, 545],
                                [1, 566]
                            ]]]
                        ],
                        locals: ["badge"],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 206
                            },
                            end: {
                                line: 1,
                                column: 600
                            }
                        }
                    },
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("li");
                        e.setAttribute(n, "class", "game-group");
                        var r = e.createElement("h2"),
                            a = e.createComment("");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("ul");
                        e.setAttribute(r, "class", "mbadges");
                        var a = e.createComment("");
                        return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = new Array(2);
                        return a[0] = e.createMorphAt(e.childAt(r, [0]), 0, 0), a[1] = e.createMorphAt(e.childAt(r, [1]), 0, 0), a
                    },
                    statements: [
                        ["content", "game.title", ["loc", [null, [1, 258],
                            [1, 272]
                        ]]],
                        ["block", "each", [
                                ["get", "game.badges", ["loc", [null, [1, 305],
                                    [1, 316]
                                ]]]
                            ],
                            [], 0, null, ["loc", [null, [1, 297],
                                [1, 590]
                            ]]
                        ]
                    ],
                    locals: ["game"],
                    templates: [e]
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 855
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div"),
                    r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createElement("ul");
                e.setAttribute(r, "class", "game-groups");
                var a = e.createComment("");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "class", "badges_explanation");
                var a = e.createElement("h2"),
                    l = e.createTextNode("About Badges");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createElement("p"),
                    l = e.createTextNode("Complete in game tasks to earn Kongregate badges and points. Show off your gaming skills to friends by earning them in all Kongregate mobile games and on Kongregate.com!");
                return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = new Array(3);
                return a[0] = e.createAttrMorph(r, "class"), a[1] = e.createMorphAt(r, 0, 0), a[2] = e.createMorphAt(e.childAt(r, [1]), 0, 0), a
            },
            statements: [
                ["attribute", "class", ["concat", ["profile badges ", ["subexpr", "if", [
                        ["get", "showSuggessted", ["loc", [null, [1, 32],
                            [1, 46]
                        ]]], "", "no-recommends"
                    ],
                    [],
                    ["loc", [null, [1, 27],
                        [1, 67]
                    ]]
                ]]]],
                ["block", "page-title", [],
                    ["additionalClasses", "mini-profile"], 0, null, ["loc", [null, [1, 69],
                        [1, 182]
                    ]]
                ],
                ["block", "each", [
                        ["get", "games", ["loc", [null, [1, 214],
                            [1, 219]
                        ]]]
                    ],
                    [], 1, null, ["loc", [null, [1, 206],
                        [1, 609]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("mobile-panel/templates/profile/befriendings", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 115
                            },
                            end: {
                                line: 1,
                                column: 225
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("strong"),
                            r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createTextNode(" /");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createElement("span"),
                            r = e.createTextNode("Friends & Fans");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                    },
                    statements: [
                        ["content", "username", ["loc", [null, [1, 171],
                            [1, 183]
                        ]]]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 346
                                    },
                                    end: {
                                        line: 1,
                                        column: 381
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createTextNode("My Friends");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function() {
                                return []
                            },
                            statements: [],
                            locals: [],
                            templates: []
                        }
                    }(),
                    t = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 381
                                    },
                                    end: {
                                        line: 1,
                                        column: 411
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("'s Friends");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
                            },
                            statements: [
                                ["content", "username", ["loc", [null, [1, 389],
                                    [1, 401]
                                ]]]
                            ],
                            locals: [],
                            templates: []
                        }
                    }(),
                    n = function() {
                        var e = function() {
                            return {
                                meta: {
                                    revision: "Ember@1.13.12",
                                    loc: {
                                        source: null,
                                        start: {
                                            line: 1,
                                            column: 540
                                        },
                                        end: {
                                            line: 1,
                                            column: 919
                                        }
                                    }
                                },
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function(e) {
                                    var t = e.createDocumentFragment(),
                                        n = e.createElement("p");
                                    e.setAttribute(n, "class", "friend-inner");
                                    var r = e.createElement("img");
                                    e.setAttribute(r, "class", "avatar"), e.appendChild(n, r);
                                    var r = e.createElement("strong");
                                    e.setAttribute(r, "class", "username");
                                    var a = e.createElement("span");
                                    e.setAttribute(a, "class", "name truncate");
                                    var l = e.createComment("");
                                    e.appendChild(a, l), e.appendChild(r, a);
                                    var a = e.createElement("span");
                                    e.setAttribute(a, "class", "level");
                                    var l = e.createElement("span");
                                    e.setAttribute(l, "class", "mlvl");
                                    var i = e.createComment("");
                                    e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                                    var r = e.createElement("em");
                                    e.setAttribute(r, "class", "added-at truncate");
                                    var a = e.createTextNode("Added ");
                                    e.appendChild(r, a);
                                    var a = e.createComment("");
                                    return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                                },
                                buildRenderNodes: function(e, t, n) {
                                    var r = e.childAt(t, [0]),
                                        a = e.childAt(r, [0]),
                                        l = e.childAt(r, [1]),
                                        i = new Array(4);
                                    return i[0] = e.createAttrMorph(a, "src"), i[1] = e.createMorphAt(e.childAt(l, [0]), 0, 0), i[2] = e.createMorphAt(e.childAt(l, [1, 0]), 0, 0), i[3] = e.createMorphAt(e.childAt(r, [2]), 1, 1), i
                                },
                                statements: [
                                    ["attribute", "src", ["get", "friend.avatarUrl", ["loc", [null, [1, 646],
                                        [1, 662]
                                    ]]]],
                                    ["content", "friend.username", ["loc", [null, [1, 733],
                                        [1, 752]
                                    ]]],
                                    ["content", "friend.level", ["loc", [null, [1, 798],
                                        [1, 814]
                                    ]]],
                                    ["inline", "medium-format-date", [
                                            ["get", "friend.addedAt", ["loc", [null, [1, 894],
                                                [1, 908]
                                            ]]]
                                        ],
                                        [],
                                        ["loc", [null, [1, 873],
                                            [1, 910]
                                        ]]
                                    ]
                                ],
                                locals: [],
                                templates: []
                            }
                        }();
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 511
                                    },
                                    end: {
                                        line: 1,
                                        column: 931
                                    }
                                }
                            },
                            arity: 1,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["block", "link-to", ["profile.show", ["get", "friend.username", ["loc", [null, [1, 566],
                                        [1, 581]
                                    ]]]],
                                    ["class", "friend", "tagName", "li"], 0, null, ["loc", [null, [1, 540],
                                        [1, 931]
                                    ]]
                                ]
                            ],
                            locals: ["friend"],
                            templates: [e]
                        }
                    }(),
                    r = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 945
                                    },
                                    end: {
                                        line: 1,
                                        column: 1036
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("a");
                                e.setAttribute(n, "class", "mbtn");
                                var r = e.createTextNode("More Friends");
                                return e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = e.childAt(t, [0]),
                                    a = new Array(1);
                                return a[0] = e.createElementMorph(r), a
                            },
                            statements: [
                                ["element", "action", ["goToFriends"],
                                    ["on", "click"],
                                    ["loc", [null, [1, 971],
                                        [1, 1006]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 240
                            },
                            end: {
                                line: 1,
                                column: 1049
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "id", "befriendings-friends"), e.setAttribute(n, "class", "friending-list friends");
                        var r = e.createElement("h2");
                        e.setAttribute(r, "class", "mh2");
                        var a = e.createComment("");
                        e.appendChild(r, a);
                        var a = e.createElement("em"),
                            l = e.createComment("");
                        e.appendChild(a, l);
                        var l = e.createTextNode(" ");
                        e.appendChild(a, l);
                        var l = e.createComment("");
                        e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("ul");
                        e.setAttribute(r, "class", "friends-list");
                        var a = e.createComment("");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = e.childAt(r, [0]),
                            l = e.childAt(a, [1]),
                            i = new Array(5);
                        return i[0] = e.createMorphAt(a, 0, 0), i[1] = e.createMorphAt(l, 0, 0), i[2] = e.createMorphAt(l, 2, 2), i[3] = e.createMorphAt(e.childAt(r, [1]), 0, 0),
                            i[4] = e.createMorphAt(r, 2, 2), i
                    },
                    statements: [
                        ["block", "if", [
                                ["get", "viewingOwnProfile", ["loc", [null, [1, 352],
                                    [1, 369]
                                ]]]
                            ],
                            [], 0, 1, ["loc", [null, [1, 346],
                                [1, 418]
                            ]]
                        ],
                        ["content", "friendsCount", ["loc", [null, [1, 422],
                            [1, 438]
                        ]]],
                        ["inline", "k-pluralize", [
                                ["get", "friendsCount", ["loc", [null, [1, 453],
                                    [1, 465]
                                ]]], "friend"
                            ],
                            [],
                            ["loc", [null, [1, 439],
                                [1, 476]
                            ]]
                        ],
                        ["block", "each", [
                                ["get", "friends", ["loc", [null, [1, 519],
                                    [1, 526]
                                ]]]
                            ],
                            [], 2, null, ["loc", [null, [1, 511],
                                [1, 940]
                            ]]
                        ],
                        ["block", "if", [
                                ["get", "showFriendsLink", ["loc", [null, [1, 951],
                                    [1, 966]
                                ]]]
                            ],
                            [], 3, null, ["loc", [null, [1, 945],
                                [1, 1043]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t, n, r]
                }
            }(),
            n = function() {
                var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 1153
                                    },
                                    end: {
                                        line: 1,
                                        column: 1185
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createTextNode("My Fans");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function() {
                                return []
                            },
                            statements: [],
                            locals: [],
                            templates: []
                        }
                    }(),
                    t = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 1185
                                    },
                                    end: {
                                        line: 1,
                                        column: 1212
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("'s Fans");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
                            },
                            statements: [
                                ["content", "username", ["loc", [null, [1, 1193],
                                    [1, 1205]
                                ]]]
                            ],
                            locals: [],
                            templates: []
                        }
                    }(),
                    n = function() {
                        var e = function() {
                            return {
                                meta: {
                                    revision: "Ember@1.13.12",
                                    loc: {
                                        source: null,
                                        start: {
                                            line: 1,
                                            column: 1326
                                        },
                                        end: {
                                            line: 1,
                                            column: 1690
                                        }
                                    }
                                },
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function(e) {
                                    var t = e.createDocumentFragment(),
                                        n = e.createElement("p");
                                    e.setAttribute(n, "class", "friend-inner");
                                    var r = e.createElement("img");
                                    e.setAttribute(r, "class", "avatar"), e.appendChild(n, r);
                                    var r = e.createElement("strong");
                                    e.setAttribute(r, "class", "username");
                                    var a = e.createElement("span");
                                    e.setAttribute(a, "class", "name truncate");
                                    var l = e.createComment("");
                                    e.appendChild(a, l), e.appendChild(r, a);
                                    var a = e.createElement("span");
                                    e.setAttribute(a, "class", "level");
                                    var l = e.createElement("span");
                                    e.setAttribute(l, "class", "mlvl");
                                    var i = e.createComment("");
                                    e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                                    var r = e.createElement("em");
                                    e.setAttribute(r, "class", "added-at truncate");
                                    var a = e.createTextNode("Added ");
                                    e.appendChild(r, a);
                                    var a = e.createComment("");
                                    return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                                },
                                buildRenderNodes: function(e, t, n) {
                                    var r = e.childAt(t, [0]),
                                        a = e.childAt(r, [0]),
                                        l = e.childAt(r, [1]),
                                        i = new Array(4);
                                    return i[0] = e.createAttrMorph(a, "src"), i[1] = e.createMorphAt(e.childAt(l, [0]), 0, 0), i[2] = e.createMorphAt(e.childAt(l, [1, 0]), 0, 0), i[3] = e.createMorphAt(e.childAt(r, [2]), 1, 1), i
                                },
                                statements: [
                                    ["attribute", "src", ["get", "fan.avatarUrl", ["loc", [null, [1, 1429],
                                        [1, 1442]
                                    ]]]],
                                    ["content", "fan.username", ["loc", [null, [1, 1513],
                                        [1, 1529]
                                    ]]],
                                    ["content", "fan.level", ["loc", [null, [1, 1575],
                                        [1, 1588]
                                    ]]],
                                    ["inline", "medium-format-date", [
                                            ["get", "fan.addedAt", ["loc", [null, [1, 1668],
                                                [1, 1679]
                                            ]]]
                                        ],
                                        [],
                                        ["loc", [null, [1, 1647],
                                            [1, 1681]
                                        ]]
                                    ]
                                ],
                                locals: [],
                                templates: []
                            }
                        }();
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 1303
                                    },
                                    end: {
                                        line: 1,
                                        column: 1702
                                    }
                                }
                            },
                            arity: 1,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["block", "link-to", ["profile.show", ["get", "fan.username", ["loc", [null, [1, 1352],
                                        [1, 1364]
                                    ]]]],
                                    ["class", "friend", "tagName", "li"], 0, null, ["loc", [null, [1, 1326],
                                        [1, 1702]
                                    ]]
                                ]
                            ],
                            locals: ["fan"],
                            templates: [e]
                        }
                    }(),
                    r = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 1716
                                    },
                                    end: {
                                        line: 1,
                                        column: 1798
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("a");
                                e.setAttribute(n, "class", "mbtn");
                                var r = e.createTextNode("More Fans");
                                return e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = e.childAt(t, [0]),
                                    a = new Array(1);
                                return a[0] = e.createElementMorph(r), a
                            },
                            statements: [
                                ["element", "action", ["goToFans"],
                                    ["on", "click"],
                                    ["loc", [null, [1, 1739],
                                        [1, 1771]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 1056
                            },
                            end: {
                                line: 1,
                                column: 1811
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "id", "befriendings-fans"), e.setAttribute(n, "class", "friending-list fans");
                        var r = e.createElement("h2");
                        e.setAttribute(r, "class", "mh2");
                        var a = e.createComment("");
                        e.appendChild(r, a);
                        var a = e.createElement("em"),
                            l = e.createComment("");
                        e.appendChild(a, l);
                        var l = e.createTextNode(" ");
                        e.appendChild(a, l);
                        var l = e.createComment("");
                        e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("ul");
                        e.setAttribute(r, "class", "friends-list");
                        var a = e.createComment("");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = e.childAt(r, [0]),
                            l = e.childAt(a, [1]),
                            i = new Array(5);
                        return i[0] = e.createMorphAt(a, 0, 0), i[1] = e.createMorphAt(l, 0, 0), i[2] = e.createMorphAt(l, 2, 2), i[3] = e.createMorphAt(e.childAt(r, [1]), 0, 0), i[4] = e.createMorphAt(r, 2, 2), i
                    },
                    statements: [
                        ["block", "if", [
                                ["get", "viewingOwnProfile", ["loc", [null, [1, 1159],
                                    [1, 1176]
                                ]]]
                            ],
                            [], 0, 1, ["loc", [null, [1, 1153],
                                [1, 1219]
                            ]]
                        ],
                        ["content", "fansCount", ["loc", [null, [1, 1223],
                            [1, 1236]
                        ]]],
                        ["inline", "k-pluralize", [
                                ["get", "fansCount", ["loc", [null, [1, 1251],
                                    [1, 1260]
                                ]]], "fan"
                            ],
                            [],
                            ["loc", [null, [1, 1237],
                                [1, 1268]
                            ]]
                        ],
                        ["block", "each", [
                                ["get", "fans", ["loc", [null, [1, 1311],
                                    [1, 1315]
                                ]]]
                            ],
                            [], 2, null, ["loc", [null, [1, 1303],
                                [1, 1711]
                            ]]
                        ],
                        ["block", "if", [
                                ["get", "showFansLink", ["loc", [null, [1, 1722],
                                    [1, 1734]
                                ]]]
                            ],
                            [], 3, null, ["loc", [null, [1, 1716],
                                [1, 1805]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t, n, r]
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 1824
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div"),
                    r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createComment("");
                return e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = new Array(4);
                return a[0] = e.createAttrMorph(r, "class"), a[1] = e.createMorphAt(r, 0, 0), a[2] = e.createMorphAt(r, 1, 1), a[3] = e.createMorphAt(r, 2, 2), a
            },
            statements: [
                ["attribute", "class", ["concat", ["profile befriendings ", ["subexpr", "if", [
                        ["get", "showFriendsContainer", ["loc", [null, [1, 38],
                            [1, 58]
                        ]]], "", "one-list"
                    ],
                    [],
                    ["loc", [null, [1, 33],
                        [1, 74]
                    ]]
                ], " ", ["subexpr", "if", [
                        ["get", "showFansContainer", ["loc", [null, [1, 80],
                            [1, 97]
                        ]]], "", "one-list"
                    ],
                    [],
                    ["loc", [null, [1, 75],
                        [1, 113]
                    ]]
                ]]]],
                ["block", "page-title", [],
                    ["additionalClasses", "mini-profile"], 0, null, ["loc", [null, [1, 115],
                        [1, 240]
                    ]]
                ],
                ["block", "if", [
                        ["get", "showFriendsContainer", ["loc", [null, [1, 246],
                            [1, 266]
                        ]]]
                    ],
                    [], 1, null, ["loc", [null, [1, 240],
                        [1, 1056]
                    ]]
                ],
                ["block", "if", [
                        ["get", "showFansContainer", ["loc", [null, [1, 1062],
                            [1, 1079]
                        ]]]
                    ],
                    [], 2, null, ["loc", [null, [1, 1056],
                        [1, 1818]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t, n]
        }
    }())
}), define("mobile-panel/templates/profile/fans", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 43
                            },
                            end: {
                                line: 1,
                                column: 143
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("strong"),
                            r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createTextNode(" /");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createElement("span"),
                            r = e.createTextNode("All Fans");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                    },
                    statements: [
                        ["content", "username", ["loc", [null, [1, 99],
                            [1, 111]
                        ]]]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 230
                            },
                            end: {
                                line: 1,
                                column: 262
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createTextNode("My Fans");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function() {
                        return []
                    },
                    statements: [],
                    locals: [],
                    templates: []
                }
            }(),
            n = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 262
                            },
                            end: {
                                line: 1,
                                column: 289
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("'s Fans");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
                    },
                    statements: [
                        ["content", "username", ["loc", [null, [1, 270],
                            [1, 282]
                        ]]]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            r = function() {
                var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 410
                                },
                                end: {
                                    line: 1,
                                    column: 774
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("p");
                            e.setAttribute(n, "class", "friend-inner");
                            var r = e.createElement("img");
                            e.setAttribute(r, "class", "avatar"), e.appendChild(n, r);
                            var r = e.createElement("strong");
                            e.setAttribute(r, "class", "username");
                            var a = e.createElement("span");
                            e.setAttribute(a, "class", "name truncate");
                            var l = e.createComment("");
                            e.appendChild(a, l), e.appendChild(r, a);
                            var a = e.createElement("span");
                            e.setAttribute(a, "class", "level truncate");
                            var l = e.createElement("span");
                            e.setAttribute(l, "class", "mlvl");
                            var i = e.createComment("");
                            e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                            var r = e.createElement("em");
                            e.setAttribute(r, "class", "added-at");
                            var a = e.createTextNode("Added ");
                            e.appendChild(r, a);
                            var a = e.createComment("");
                            return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = e.childAt(t, [0]),
                                a = e.childAt(r, [0]),
                                l = e.childAt(r, [1]),
                                i = new Array(4);
                            return i[0] = e.createAttrMorph(a, "src"), i[1] = e.createMorphAt(e.childAt(l, [0]), 0, 0), i[2] = e.createMorphAt(e.childAt(l, [1, 0]), 0, 0), i[3] = e.createMorphAt(e.childAt(r, [2]), 1, 1), i
                        },
                        statements: [
                            ["attribute", "src", ["get", "fan.avatarUrl", ["loc", [null, [1, 513],
                                [1, 526]
                            ]]]],
                            ["content", "fan.username", ["loc", [null, [1, 597],
                                [1, 613]
                            ]]],
                            ["content", "fan.level", ["loc", [null, [1, 668],
                                [1, 681]
                            ]]],
                            ["inline", "medium-format-date", [
                                    ["get", "fan.addedAt", ["loc", [null, [1, 752],
                                        [1, 763]
                                    ]]]
                                ],
                                [],
                                ["loc", [null, [1, 731],
                                    [1, 765]
                                ]]
                            ]
                        ],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 380
                            },
                            end: {
                                line: 1,
                                column: 786
                            }
                        }
                    },
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["block", "link-to", ["profile.show", ["get", "fan.username", ["loc", [null, [1, 436],
                                [1, 448]
                            ]]]],
                            ["class", "friend", "tagName", "li"], 0, null, ["loc", [null, [1, 410],
                                [1, 786]
                            ]]
                        ]
                    ],
                    locals: ["fan"],
                    templates: [e]
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 836
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "profile befriendings one-list");
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "id", "befriendings-fans"), e.setAttribute(r, "class", "friending-list fans");
                var a = e.createElement("h2");
                e.setAttribute(a, "class", "mh2");
                var l = e.createComment("");
                e.appendChild(a, l);
                var l = e.createElement("em"),
                    i = e.createComment("");
                e.appendChild(l, i);
                var i = e.createTextNode(" ");
                e.appendChild(l, i);
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createElement("ul");
                e.setAttribute(a, "class", "friends-list");
                var l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createComment("");
                return e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = e.childAt(r, [1]),
                    l = e.childAt(a, [0]),
                    i = e.childAt(l, [1]),
                    o = new Array(6);
                return o[0] = e.createMorphAt(r, 0, 0), o[1] = e.createMorphAt(l, 0, 0), o[2] = e.createMorphAt(i, 0, 0), o[3] = e.createMorphAt(i, 2, 2), o[4] = e.createMorphAt(e.childAt(a, [1]), 0, 0), o[5] = e.createMorphAt(r, 2, 2), o
            },
            statements: [
                ["block", "page-title", [],
                    ["additionalClasses", "mini-profile"], 0, null, ["loc", [null, [1, 43],
                        [1, 158]
                    ]]
                ],
                ["block", "if", [
                        ["get", "viewingOwnProfile", ["loc", [null, [1, 236],
                            [1, 253]
                        ]]]
                    ],
                    [], 1, 2, ["loc", [null, [1, 230],
                        [1, 296]
                    ]]
                ],
                ["content", "fansCount", ["loc", [null, [1, 300],
                    [1, 313]
                ]]],
                ["inline", "k-pluralize", [
                        ["get", "fansCount", ["loc", [null, [1, 328],
                            [1, 337]
                        ]]], "fan"
                    ],
                    [],
                    ["loc", [null, [1, 314],
                        [1, 345]
                    ]]
                ],
                ["block", "each", [
                        ["get", "currentFans", ["loc", [null, [1, 388],
                            [1, 399]
                        ]]]
                    ],
                    [], 3, null, ["loc", [null, [1, 380],
                        [1, 795]
                    ]]
                ],
                ["inline", "partial", ["pagination"],
                    [],
                    ["loc", [null, [1, 806],
                        [1, 830]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t, n, r]
        }
    }())
}), define("mobile-panel/templates/profile/friends", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 43
                            },
                            end: {
                                line: 1,
                                column: 146
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("strong"),
                            r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createTextNode(" /");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createElement("span"),
                            r = e.createTextNode("All Friends");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                    },
                    statements: [
                        ["content", "username", ["loc", [null, [1, 99],
                            [1, 111]
                        ]]]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 239
                            },
                            end: {
                                line: 1,
                                column: 274
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createTextNode("My Friends");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function() {
                        return []
                    },
                    statements: [],
                    locals: [],
                    templates: []
                }
            }(),
            n = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 274
                            },
                            end: {
                                line: 1,
                                column: 304
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("'s Friends");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
                    },
                    statements: [
                        ["content", "username", ["loc", [null, [1, 282],
                            [1, 294]
                        ]]]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            r = function() {
                var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 440
                                },
                                end: {
                                    line: 1,
                                    column: 819
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("p");
                            e.setAttribute(n, "class", "friend-inner");
                            var r = e.createElement("img");
                            e.setAttribute(r, "class", "avatar"), e.appendChild(n, r);
                            var r = e.createElement("strong");
                            e.setAttribute(r, "class", "username");
                            var a = e.createElement("span");
                            e.setAttribute(a, "class", "name truncate");
                            var l = e.createComment("");
                            e.appendChild(a, l), e.appendChild(r, a);
                            var a = e.createElement("span");
                            e.setAttribute(a, "class", "level truncate");
                            var l = e.createElement("span");
                            e.setAttribute(l, "class", "mlvl");
                            var i = e.createComment("");
                            e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                            var r = e.createElement("em");
                            e.setAttribute(r, "class", "added-at");
                            var a = e.createTextNode("Added ");
                            e.appendChild(r, a);
                            var a = e.createComment("");
                            return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = e.childAt(t, [0]),
                                a = e.childAt(r, [0]),
                                l = e.childAt(r, [1]),
                                i = new Array(4);
                            return i[0] = e.createAttrMorph(a, "src"), i[1] = e.createMorphAt(e.childAt(l, [0]), 0, 0), i[2] = e.createMorphAt(e.childAt(l, [1, 0]), 0, 0), i[3] = e.createMorphAt(e.childAt(r, [2]), 1, 1), i
                        },
                        statements: [
                            ["attribute", "src", ["get", "friend.avatarUrl", ["loc", [null, [1, 546],
                                [1, 562]
                            ]]]],
                            ["content", "friend.username", ["loc", [null, [1, 633],
                                [1, 652]
                            ]]],
                            ["content", "friend.level", ["loc", [null, [1, 707],
                                [1, 723]
                            ]]],
                            ["inline", "medium-format-date", [
                                    ["get", "friend.addedAt", ["loc", [null, [1, 794],
                                        [1, 808]
                                    ]]]
                                ],
                                [],
                                ["loc", [null, [1, 773],
                                    [1, 810]
                                ]]
                            ]
                        ],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 404
                            },
                            end: {
                                line: 1,
                                column: 831
                            }
                        }
                    },
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["block", "link-to", ["profile.show", ["get", "friend.username", ["loc", [null, [1, 466],
                                [1, 481]
                            ]]]],
                            ["class", "friend", "tagName", "li"], 0, null, ["loc", [null, [1, 440],
                                [1, 831]
                            ]]
                        ]
                    ],
                    locals: ["friend"],
                    templates: [e]
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 881
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "profile befriendings one-list");
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "id", "befriendings-friends"), e.setAttribute(r, "class", "friending-list friends");
                var a = e.createElement("h2");
                e.setAttribute(a, "class", "mh2");
                var l = e.createComment("");
                e.appendChild(a, l);
                var l = e.createElement("em"),
                    i = e.createComment("");
                e.appendChild(l, i);
                var i = e.createTextNode(" ");
                e.appendChild(l, i);
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createElement("ul");
                e.setAttribute(a, "class", "friends-list");
                var l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createComment("");
                return e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = e.childAt(r, [1]),
                    l = e.childAt(a, [0]),
                    i = e.childAt(l, [1]),
                    o = new Array(6);
                return o[0] = e.createMorphAt(r, 0, 0), o[1] = e.createMorphAt(l, 0, 0), o[2] = e.createMorphAt(i, 0, 0), o[3] = e.createMorphAt(i, 2, 2), o[4] = e.createMorphAt(e.childAt(a, [1]), 0, 0), o[5] = e.createMorphAt(r, 2, 2), o
            },
            statements: [
                ["block", "page-title", [],
                    ["additionalClasses", "mini-profile"], 0, null, ["loc", [null, [1, 43],
                        [1, 161]
                    ]]
                ],
                ["block", "if", [
                        ["get", "viewingOwnProfile", ["loc", [null, [1, 245],
                            [1, 262]
                        ]]]
                    ],
                    [], 1, 2, ["loc", [null, [1, 239],
                        [1, 311]
                    ]]
                ],
                ["content", "friendsCount", ["loc", [null, [1, 315],
                    [1, 331]
                ]]],
                ["inline", "k-pluralize", [
                        ["get", "friendsCount", ["loc", [null, [1, 346],
                            [1, 358]
                        ]]], "friend"
                    ],
                    [],
                    ["loc", [null, [1, 332],
                        [1, 369]
                    ]]
                ],
                ["block", "each", [
                        ["get", "currentFriends", ["loc", [null, [1, 412],
                            [1, 426]
                        ]]]
                    ],
                    [], 3, null, ["loc", [null, [1, 404],
                        [1, 840]
                    ]]
                ],
                ["inline", "partial", ["pagination"],
                    [],
                    ["loc", [null, [1, 851],
                        [1, 875]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t, n, r]
        }
    }())
}), define("mobile-panel/templates/profile/games", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 68
                            },
                            end: {
                                line: 1,
                                column: 165
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("strong"),
                            r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createTextNode(" /");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createElement("span"),
                            r = e.createTextNode("Games");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                    },
                    statements: [
                        ["content", "username", ["loc", [null, [1, 124],
                            [1, 136]
                        ]]]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 243
                            },
                            end: {
                                line: 1,
                                column: 276
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createTextNode("My Games");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function() {
                        return []
                    },
                    statements: [],
                    locals: [],
                    templates: []
                }
            }(),
            n = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 276
                            },
                            end: {
                                line: 1,
                                column: 304
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("'s Games");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
                    },
                    statements: [
                        ["content", "username", ["loc", [null, [1, 284],
                            [1, 296]
                        ]]]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            r = function() {
                var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 580
                                    },
                                    end: {
                                        line: 1,
                                        column: 734
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("span");
                                e.setAttribute(n, "class", "info");
                                var r = e.createElement("em"),
                                    a = e.createComment("");
                                e.appendChild(r, a);
                                var a = e.createTextNode(" of ");
                                e.appendChild(r, a);
                                var a = e.createComment("");
                                e.appendChild(r, a);
                                var a = e.createTextNode(" ");
                                e.appendChild(r, a);
                                var a = e.createComment("");
                                e.appendChild(r, a);
                                var a = e.createTextNode(" earned. ");
                                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = e.childAt(t, [0, 0]),
                                    a = new Array(3);
                                return a[0] = e.createMorphAt(r, 0, 0), a[1] = e.createMorphAt(r, 2, 2), a[2] = e.createMorphAt(r, 4, 4), a
                            },
                            statements: [
                                ["content", "game.earnedBadges", ["loc", [null, [1, 627],
                                    [1, 648]
                                ]]],
                                ["content", "game.totalBadges", ["loc", [null, [1, 652],
                                    [1, 672]
                                ]]],
                                ["inline", "k-pluralize", [
                                        ["get", "game.totalBadges", ["loc", [null, [1, 687],
                                            [1, 703]
                                        ]]], "badge"
                                    ],
                                    [],
                                    ["loc", [null, [1, 673],
                                        [1, 713]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }(),
                    t = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 734
                                    },
                                    end: {
                                        line: 1,
                                        column: 796
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("span");
                                e.setAttribute(n, "class", "info");
                                var r = e.createTextNode("Check back later for badges!");
                                return e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function() {
                                return []
                            },
                            statements: [],
                            locals: [],
                            templates: []
                        }
                    }(),
                    n = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 803
                                    },
                                    end: {
                                        line: 1,
                                        column: 918
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("a");
                                e.setAttribute(n, "href", "#"), e.setAttribute(n, "class", "user-btn");
                                var r = e.createTextNode("Play Now");
                                return e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = e.childAt(t, [0]),
                                    a = new Array(1);
                                return a[0] = e.createElementMorph(r), a
                            },
                            statements: [
                                ["element", "action", ["externalLink", ["get", "game.appStoreLink", ["loc", [null, [1, 855],
                                        [1, 872]
                                    ]]], !0],
                                    [],
                                    ["loc", [null, [1, 831],
                                        [1, 879]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }(),
                    r = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 918
                                    },
                                    end: {
                                        line: 1,
                                        column: 1025
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("a");
                                e.setAttribute(n, "href", "#"), e.setAttribute(n, "class", "user-btn alt");
                                var r = e.createTextNode("Download Free");
                                return e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = e.childAt(t, [0]),
                                    a = new Array(1);
                                return a[0] = e.createElementMorph(r), a
                            },
                            statements: [
                                ["element", "action", ["externalLink", ["get", "game.appStoreLink", ["loc", [null, [1, 953],
                                        [1, 970]
                                    ]]], !0],
                                    [],
                                    ["loc", [null, [1, 929],
                                        [1, 977]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 407
                            },
                            end: {
                                line: 1,
                                column: 1041
                            }
                        }
                    },
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("li");
                        e.setAttribute(n, "class", "game");
                        var r = e.createElement("p");
                        e.setAttribute(r, "class", "game-inner");
                        var a = e.createElement("strong");
                        e.setAttribute(a, "class", "game-title truncate");
                        var l = e.createComment("");
                        e.appendChild(a, l), e.appendChild(r, a);
                        var a = e.createElement("img");
                        e.setAttribute(a, "class", "game-icon"), e.appendChild(r, a);
                        var a = e.createComment("");
                        e.appendChild(r, a);
                        var a = e.createComment("");
                        return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0, 0]),
                            a = e.childAt(r, [1]),
                            l = new Array(4);
                        return l[0] = e.createMorphAt(e.childAt(r, [0]), 0, 0), l[1] = e.createAttrMorph(a, "src"), l[2] = e.createMorphAt(r, 2, 2), l[3] = e.createMorphAt(r, 3, 3), l
                    },
                    statements: [
                        ["content", "game.title", ["loc", [null, [1, 513],
                            [1, 527]
                        ]]],
                        ["attribute", "src", ["get", "game.iconUrl", ["loc", [null, [1, 547],
                            [1, 559]
                        ]]]],
                        ["block", "if", [
                                ["get", "game.totalBadges", ["loc", [null, [1, 586],
                                    [1, 602]
                                ]]]
                            ],
                            [], 0, 1, ["loc", [null, [1, 580],
                                [1, 803]
                            ]]
                        ],
                        ["block", "if", [
                                ["get", "viewingOwnProfile", ["loc", [null, [1, 809],
                                    [1, 826]
                                ]]]
                            ],
                            [], 2, 3, ["loc", [null, [1, 803],
                                [1, 1032]
                            ]]
                        ]
                    ],
                    locals: ["game"],
                    templates: [e, t, n, r]
                }
            }(),
            a = function() {
                var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 1190
                                },
                                end: {
                                    line: 1,
                                    column: 1522
                                }
                            }
                        },
                        arity: 1,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("li");
                            e.setAttribute(n, "class", "game");
                            var r = e.createElement("p");
                            e.setAttribute(r, "class", "game-inner");
                            var a = e.createElement("strong");
                            e.setAttribute(a, "class", "game-title truncate");
                            var l = e.createComment("");
                            e.appendChild(a, l), e.appendChild(r, a);
                            var a = e.createElement("img");
                            e.setAttribute(a, "class", "game-icon"), e.appendChild(r, a);
                            var a = e.createElement("span");
                            e.setAttribute(a, "class", "info");
                            var l = e.createComment("");
                            e.appendChild(a, l), e.appendChild(r, a);
                            var a = e.createElement("a");
                            e.setAttribute(a, "href", "#"), e.setAttribute(a, "class", "user-btn alt");
                            var l = e.createTextNode("Download Free");
                            return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = e.childAt(t, [0, 0]),
                                a = e.childAt(r, [1]),
                                l = e.childAt(r, [3]),
                                i = new Array(4);
                            return i[0] = e.createMorphAt(e.childAt(r, [0]), 0, 0), i[1] = e.createAttrMorph(a, "src"), i[2] = e.createMorphAt(e.childAt(r, [2]), 0, 0), i[3] = e.createElementMorph(l), i
                        },
                        statements: [
                            ["content", "game.title", ["loc", [null, [1, 1299],
                                [1, 1313]
                            ]]],
                            ["attribute", "src", ["get", "game.iconUrl", ["loc", [null, [1, 1333],
                                [1, 1345]
                            ]]]],
                            ["content", "game.marketingText", ["loc", [null, [1, 1385],
                                [1, 1407]
                            ]]],
                            ["element", "action", ["externalLink", ["get", "game.appStoreLink", ["loc", [null, [1, 1441],
                                    [1, 1458]
                                ]]], !0],
                                [],
                                ["loc", [null, [1, 1417],
                                    [1, 1465]
                                ]]
                            ]
                        ],
                        locals: ["game"],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 1061
                            },
                            end: {
                                line: 1,
                                column: 1542
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "id", "games-suggested"), e.setAttribute(n, "class", "game-list-outer");
                        var r = e.createElement("h2");
                        e.setAttribute(r, "class", "mh2");
                        var a = e.createTextNode("Suggested Games");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("ul");
                        e.setAttribute(r, "class", "game-list");
                        var a = e.createComment("");
                        return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0, 1]), 0, 0), r
                    },
                    statements: [
                        ["block", "each", [
                                ["get", "gamesSuggested", ["loc", [null, [1, 1198],
                                    [1, 1212]
                                ]]]
                            ],
                            [], 0, null, ["loc", [null, [1, 1190],
                                [1, 1531]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e]
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 1555
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div"),
                    r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "id", "games-played"), e.setAttribute(r, "class", "game-list-outer");
                var a = e.createElement("h2");
                e.setAttribute(a, "class", "mh2");
                var l = e.createComment("");
                e.appendChild(a, l);
                var l = e.createElement("em"),
                    i = e.createComment("");
                e.appendChild(l, i);
                var i = e.createTextNode(" ");
                e.appendChild(l, i);
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createElement("ul");
                e.setAttribute(a, "class", "game-list");
                var l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createComment("");
                return e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = e.childAt(r, [1]),
                    l = e.childAt(a, [0]),
                    i = e.childAt(l, [1]),
                    o = new Array(7);
                return o[0] = e.createAttrMorph(r, "class"), o[1] = e.createMorphAt(r, 0, 0), o[2] = e.createMorphAt(l, 0, 0), o[3] = e.createMorphAt(i, 0, 0), o[4] = e.createMorphAt(i, 2, 2), o[5] = e.createMorphAt(e.childAt(a, [1]), 0, 0), o[6] = e.createMorphAt(r, 2, 2), o
            },
            statements: [
                ["attribute", "class", ["concat", ["profile games ", ["subexpr", "if", [
                        ["get", "showSuggessted", ["loc", [null, [1, 31],
                            [1, 45]
                        ]]], "", "no-recommends"
                    ],
                    [],
                    ["loc", [null, [1, 26],
                        [1, 66]
                    ]]
                ]]]],
                ["block", "page-title", [],
                    ["additionalClasses", "mini-profile"], 0, null, ["loc", [null, [1, 68],
                        [1, 180]
                    ]]
                ],
                ["block", "if", [
                        ["get", "viewingOwnProfile", ["loc", [null, [1, 249],
                            [1, 266]
                        ]]]
                    ],
                    [], 1, 2, ["loc", [null, [1, 243],
                        [1, 311]
                    ]]
                ],
                ["content", "gamesPlayedCount", ["loc", [null, [1, 315],
                    [1, 335]
                ]]],
                ["inline", "k-pluralize", [
                        ["get", "gamesPlayedCount", ["loc", [null, [1, 350],
                            [1, 366]
                        ]]], "game"
                    ],
                    [],
                    ["loc", [null, [1, 336],
                        [1, 375]
                    ]]
                ],
                ["block", "each", [
                        ["get", "gamesPlayed", ["loc", [null, [1, 415],
                            [1, 426]
                        ]]]
                    ],
                    [], 3, null, ["loc", [null, [1, 407],
                        [1, 1050]
                    ]]
                ],
                ["block", "if", [
                        ["get", "showSuggested", ["loc", [null, [1, 1067],
                            [1, 1080]
                        ]]]
                    ],
                    [], 4, null, ["loc", [null, [1, 1061],
                        [1, 1549]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t, n, r, a]
        }
    }())
}), define("mobile-panel/templates/profile/posts", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 110
                                },
                                end: {
                                    line: 1,
                                    column: 207
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("em"),
                                r = e.createComment("");
                            e.appendChild(n, r);
                            var r = e.createTextNode(" ");
                            e.appendChild(n, r);
                            var r = e.createComment("");
                            return e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = e.childAt(t, [0]),
                                a = new Array(2);
                            return a[0] = e.createMorphAt(r, 0, 0), a[1] = e.createMorphAt(r, 2, 2), a
                        },
                        statements: [
                            ["inline", "number-with-delimiter", [
                                    ["get", "postsCount", ["loc", [null, [1, 156],
                                        [1, 166]
                                    ]]]
                                ],
                                [],
                                ["loc", [null, [1, 132],
                                    [1, 168]
                                ]]
                            ],
                            ["inline", "k-pluralize", [
                                    ["get", "postsCount", ["loc", [null, [1, 183],
                                        [1, 193]
                                    ]]], "post"
                                ],
                                [],
                                ["loc", [null, [1, 169],
                                    [1, 202]
                                ]]
                            ]
                        ],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 27
                            },
                            end: {
                                line: 1,
                                column: 221
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("span");
                        e.setAttribute(n, "class", "truncate");
                        var r = e.createTextNode("Posts by ");
                        e.appendChild(n, r);
                        var r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = new Array(2);
                        return a[0] = e.createMorphAt(r, 1, 1), a[1] = e.createMorphAt(r, 2, 2), a
                    },
                    statements: [
                        ["content", "username", ["loc", [null, [1, 98],
                            [1, 110]
                        ]]],
                        ["block", "if", [
                                ["get", "postsCount", ["loc", [null, [1, 116],
                                    [1, 126]
                                ]]]
                            ],
                            [], 0, null, ["loc", [null, [1, 110],
                                [1, 214]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e]
                }
            }(),
            t = function() {
                var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 528
                                    },
                                    end: {
                                        line: 1,
                                        column: 622
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("p"),
                                    r = e.createElement("em"),
                                    a = e.createTextNode("This post has been removed by an administrator or moderator");
                                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function() {
                                return [];
                            },
                            statements: [],
                            locals: [],
                            templates: []
                        }
                    }(),
                    t = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 622
                                    },
                                    end: {
                                        line: 1,
                                        column: 649
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createUnsafeMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["content", "post.bodyHtml", ["loc", [null, [1, 630],
                                    [1, 649]
                                ]]]
                            ],
                            locals: [],
                            templates: []
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 260
                            },
                            end: {
                                line: 1,
                                column: 667
                            }
                        }
                    },
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("li");
                        e.setAttribute(n, "class", "thread");
                        var r = e.createElement("div");
                        e.setAttribute(r, "class", "reply-meta");
                        var a = e.createElement("p"),
                            l = e.createTextNode("Posted in ");
                        e.appendChild(a, l);
                        var l = e.createElement("strong"),
                            i = e.createComment("");
                        e.appendChild(l, i), e.appendChild(a, l);
                        var l = e.createTextNode(" on ");
                        e.appendChild(a, l);
                        var l = e.createElement("strong"),
                            i = e.createComment("");
                        e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("div");
                        e.setAttribute(r, "class", "reply-copy");
                        var a = e.createComment("");
                        return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = e.childAt(r, [0, 0]),
                            l = new Array(4);
                        return l[0] = e.createElementMorph(r), l[1] = e.createMorphAt(e.childAt(a, [1]), 0, 0), l[2] = e.createMorphAt(e.childAt(a, [3]), 0, 0), l[3] = e.createMorphAt(e.childAt(r, [1]), 0, 0), l
                    },
                    statements: [
                        ["element", "action", ["viewPost", ["get", "post", ["loc", [null, [1, 316],
                                [1, 320]
                            ]]]],
                            ["on", "click"],
                            ["loc", [null, [1, 296],
                                [1, 333]
                            ]]
                        ],
                        ["content", "post.topic.title", ["loc", [null, [1, 394],
                            [1, 414]
                        ]]],
                        ["inline", "unbound", [
                                ["subexpr", "medium-format-datetime", [
                                        ["get", "post.postedAt", ["loc", [null, [1, 469],
                                            [1, 482]
                                        ]]]
                                    ],
                                    [],
                                    ["loc", [null, [1, 445],
                                        [1, 483]
                                    ]]
                                ]
                            ],
                            [],
                            ["loc", [null, [1, 435],
                                [1, 485]
                            ]]
                        ],
                        ["block", "if", [
                                ["get", "post.hidden", ["loc", [null, [1, 534],
                                    [1, 545]
                                ]]]
                            ],
                            [], 0, 1, ["loc", [null, [1, 528],
                                [1, 656]
                            ]]
                        ]
                    ],
                    locals: ["post"],
                    templates: [e, t]
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 711
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "profile posts");
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createElement("ul");
                e.setAttribute(r, "class", "thread-list");
                var a = e.createComment("");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createComment("");
                return e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = new Array(3);
                return a[0] = e.createMorphAt(r, 0, 0), a[1] = e.createMorphAt(e.childAt(r, [1]), 0, 0), a[2] = e.createMorphAt(r, 2, 2), a
            },
            statements: [
                ["block", "page-title", [],
                    ["additionalClasses", "mh2"], 0, null, ["loc", [null, [1, 27],
                        [1, 236]
                    ]]
                ],
                ["block", "each", [
                        ["get", "currentPosts", ["loc", [null, [1, 268],
                            [1, 280]
                        ]]]
                    ],
                    [], 1, null, ["loc", [null, [1, 260],
                        [1, 676]
                    ]]
                ],
                ["inline", "partial", ["pagination"],
                    [],
                    ["loc", [null, [1, 681],
                        [1, 705]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("mobile-panel/templates/profile/send-message", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
            return {
                meta: {
                    revision: "Ember@1.13.12",
                    loc: {
                        source: null,
                        start: {
                            line: 1,
                            column: 0
                        },
                        end: {
                            line: 1,
                            column: 320
                        }
                    }
                },
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function(e) {
                    var t = e.createDocumentFragment(),
                        n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createElement("input");
                    e.setAttribute(n, "type", "submit"), e.setAttribute(n, "class", "mbtn cta_btn"), e.appendChild(t, n);
                    var n = e.createElement("a");
                    e.setAttribute(n, "class", "back-link");
                    var r = e.createComment("");
                    return e.appendChild(n, r), e.appendChild(t, n), t
                },
                buildRenderNodes: function(e, t, n) {
                    var r = e.childAt(t, [1]),
                        a = e.childAt(t, [2]),
                        l = new Array(5);
                    return l[0] = e.createMorphAt(t, 0, 0, n), l[1] = e.createAttrMorph(r, "value"), l[2] = e.createElementMorph(r), l[3] = e.createElementMorph(a), l[4] = e.createMorphAt(a, 0, 0), e.insertBoundary(t, 0), l
                },
                statements: [
                    ["inline", "auto-expanding-textarea", [],
                        ["id", "message", "value", ["subexpr", "@mut", [
                                ["get", "message", ["loc", [null, [1, 83],
                                    [1, 90]
                                ]]]
                            ],
                            [],
                            []
                        ], "class", "mfield"],
                        ["loc", [null, [1, 38],
                            [1, 107]
                        ]]
                    ],
                    ["attribute", "value", ["subexpr", "t", ["profile.sendMessage.sendMessage"],
                        [],
                        ["loc", [null, [1, 134],
                            [1, 173]
                        ]]
                    ]],
                    ["element", "action", ["sendMessage"],
                        ["on", "click"],
                        ["loc", [null, [1, 174],
                            [1, 209]
                        ]]
                    ],
                    ["element", "action", ["close"],
                        ["on", "click"],
                        ["loc", [null, [1, 234],
                            [1, 263]
                        ]]
                    ],
                    ["inline", "t", ["profile.sendMessage.cancel"],
                        [],
                        ["loc", [null, [1, 282],
                            [1, 316]
                        ]]
                    ]
                ],
                locals: [],
                templates: []
            }
        }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 329
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [
                ["block", "view", ["modal"],
                    ["modalController", ["subexpr", "@mut", [
                            ["get", "this", ["loc", [null, [1, 32],
                                [1, 36]
                            ]]]
                        ],
                        [],
                        []
                    ]], 0, null, ["loc", [null, [1, 0],
                        [1, 329]
                    ]]
                ]
            ],
            locals: [],
            templates: [e]
        }
    }())
}), define("mobile-panel/templates/profile/show", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 132
                            },
                            end: {
                                line: 1,
                                column: 269
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("a");
                        e.setAttribute(n, "href", "#"), e.setAttribute(n, "class", "avatar-outer");
                        var r = e.createElement("img");
                        return e.setAttribute(r, "class", "avatar"), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = e.childAt(r, [0]),
                            l = new Array(2);
                        return l[0] = e.createElementMorph(r), l[1] = e.createAttrMorph(a, "src"), l
                    },
                    statements: [
                        ["element", "action", ["changeAvatar"],
                            ["on", "click"],
                            ["loc", [null, [1, 169],
                                [1, 205]
                            ]]
                        ],
                        ["attribute", "src", ["get", "avatarUrl", ["loc", [null, [1, 238],
                            [1, 247]
                        ]]]]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 269
                            },
                            end: {
                                line: 1,
                                column: 349
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("span");
                        e.setAttribute(n, "class", "avatar-outer");
                        var r = e.createElement("img");
                        return e.setAttribute(r, "class", "avatar"), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0, 0]),
                            a = new Array(1);
                        return a[0] = e.createAttrMorph(r, "src"), a
                    },
                    statements: [
                        ["attribute", "src", ["get", "avatarUrl", ["loc", [null, [1, 315],
                            [1, 324]
                        ]]]]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            n = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 459
                            },
                            end: {
                                line: 1,
                                column: 549
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("em");
                        e.setAttribute(n, "class", "game-name truncate");
                        var r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createTextNode(" in ");
                        e.appendChild(n, r);
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = new Array(2);
                        return a[0] = e.createMorphAt(r, 0, 0), a[1] = e.createMorphAt(r, 2, 2), a
                    },
                    statements: [
                        ["content", "inGameName", ["loc", [null, [1, 512],
                            [1, 526]
                        ]]],
                        ["content", "game.title", ["loc", [null, [1, 530],
                            [1, 544]
                        ]]]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            r = function() {
                var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 602
                                    },
                                    end: {
                                        line: 1,
                                        column: 654
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createTextNode("Settings");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function() {
                                return []
                            },
                            statements: [],
                            locals: [],
                            templates: []
                        }
                    }(),
                    t = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 675
                                    },
                                    end: {
                                        line: 1,
                                        column: 730
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createTextNode("My Messages");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function() {
                                return []
                            },
                            statements: [],
                            locals: [],
                            templates: []
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 573
                            },
                            end: {
                                line: 1,
                                column: 747
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("li"),
                            r = e.createComment("");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createElement("li"),
                            r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(2);
                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r[1] = e.createMorphAt(e.childAt(t, [1]), 0, 0), r
                    },
                    statements: [
                        ["block", "link-to", ["edit-profile"],
                            ["class", "user-btn"], 0, null, ["loc", [null, [1, 602],
                                [1, 666]
                            ]]
                        ],
                        ["block", "link-to", ["messages"],
                            ["class", "user-btn alt"], 1, null, ["loc", [null, [1, 675],
                                [1, 742]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t]
                }
            }(),
            a = function() {
                var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 755
                                    },
                                    end: {
                                        line: 1,
                                        column: 844
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("li"),
                                    r = e.createElement("a");
                                e.setAttribute(r, "class", "user-btn");
                                var a = e.createTextNode("Unfriend");
                                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = e.childAt(t, [0, 0]),
                                    a = new Array(1);
                                return a[0] = e.createElementMorph(r), a
                            },
                            statements: [
                                ["element", "action", ["unfriend"],
                                    ["on", "click"],
                                    ["loc", [null, [1, 777],
                                        [1, 809]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }(),
                    t = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 844
                                    },
                                    end: {
                                        line: 1,
                                        column: 932
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("li"),
                                    r = e.createElement("a");
                                e.setAttribute(r, "class", "user-btn alt");
                                var a = e.createTextNode("Add friend");
                                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = e.childAt(t, [0, 0]),
                                    a = new Array(1);
                                return a[0] = e.createElementMorph(r), a
                            },
                            statements: [
                                ["element", "action", ["befriend"],
                                    ["on", "click"],
                                    ["loc", [null, [1, 859],
                                        [1, 891]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 747
                            },
                            end: {
                                line: 1,
                                column: 1019
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createElement("li"),
                            r = e.createElement("a");
                        e.setAttribute(r, "class", "user-btn alt");
                        var a = e.createTextNode("Message");
                        return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [1, 0]),
                            a = new Array(2);
                        return a[0] = e.createMorphAt(t, 0, 0, n), a[1] = e.createElementMorph(r), e.insertBoundary(t, 0), a
                    },
                    statements: [
                        ["block", "if", [
                                ["get", "friends", ["loc", [null, [1, 761],
                                    [1, 768]
                                ]]]
                            ],
                            [], 0, 1, ["loc", [null, [1, 755],
                                [1, 939]
                            ]]
                        ],
                        ["element", "action", ["sendMessage"],
                            ["on", "click"],
                            ["loc", [null, [1, 946],
                                [1, 981]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t]
                }
            }(),
            l = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 1037
                            },
                            end: {
                                line: 1,
                                column: 1126
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("p");
                        e.setAttribute(n, "class", "private-message alert");
                        var r = e.createTextNode("This userâ€™s profile is private");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function() {
                        return []
                    },
                    statements: [],
                    locals: [],
                    templates: []
                }
            }(),
            i = function() {
                var e = function() {
                    var e = function() {
                            return {
                                meta: {
                                    revision: "Ember@1.13.12",
                                    loc: {
                                        source: null,
                                        start: {
                                            line: 1,
                                            column: 1265
                                        },
                                        end: {
                                            line: 1,
                                            column: 1289
                                        }
                                    }
                                },
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function(e) {
                                    var t = e.createDocumentFragment(),
                                        n = e.createTextNode("Read Less");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function() {
                                    return []
                                },
                                statements: [],
                                locals: [],
                                templates: []
                            }
                        }(),
                        t = function() {
                            return {
                                meta: {
                                    revision: "Ember@1.13.12",
                                    loc: {
                                        source: null,
                                        start: {
                                            line: 1,
                                            column: 1289
                                        },
                                        end: {
                                            line: 1,
                                            column: 1306
                                        }
                                    }
                                },
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function(e) {
                                    var t = e.createDocumentFragment(),
                                        n = e.createTextNode("Read More");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function() {
                                    return []
                                },
                                statements: [],
                                locals: [],
                                templates: []
                            }
                        }();
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 1134
                                },
                                end: {
                                    line: 1,
                                    column: 1317
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("div"),
                                r = e.createComment("");
                            e.appendChild(n, r), e.appendChild(t, n);
                            var n = e.createElement("a");
                            e.setAttribute(n, "class", "bio-link");
                            var r = e.createComment("");
                            return e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = e.childAt(t, [0]),
                                a = e.childAt(t, [1]),
                                l = new Array(4);
                            return l[0] = e.createAttrMorph(r, "class"), l[1] = e.createUnsafeMorphAt(r, 0, 0), l[2] = e.createElementMorph(a), l[3] = e.createMorphAt(a, 0, 0), l
                        },
                        statements: [
                            ["attribute", "class", ["concat", ["bio ", ["subexpr", "if", [
                                    ["get", "showAll", ["loc", [null, [1, 1168],
                                        [1, 1175]
                                    ]]], "show-all"
                                ],
                                [],
                                ["loc", [null, [1, 1163],
                                    [1, 1188]
                                ]]
                            ]]]],
                            ["content", "about", ["loc", [null, [1, 1190],
                                [1, 1201]
                            ]]],
                            ["element", "action", ["toggleShowAll"],
                                ["on", "click"],
                                ["loc", [null, [1, 1210],
                                    [1, 1247]
                                ]]
                            ],
                            ["block", "if", [
                                    ["get", "showAll", ["loc", [null, [1, 1271],
                                        [1, 1278]
                                    ]]]
                                ],
                                [], 0, 1, ["loc", [null, [1, 1265],
                                    [1, 1313]
                                ]]
                            ]
                        ],
                        locals: [],
                        templates: [e, t]
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 1126
                            },
                            end: {
                                line: 1,
                                column: 1324
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["block", "if", [
                                ["get", "about", ["loc", [null, [1, 1140],
                                    [1, 1145]
                                ]]]
                            ],
                            [], 0, null, ["loc", [null, [1, 1134],
                                [1, 1324]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e]
                }
            }(),
            o = function() {
                var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 1576
                                    },
                                    end: {
                                        line: 1,
                                        column: 1662
                                    }
                                }
                            },
                            arity: 1,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("li");
                                e.setAttribute(n, "class", "game");
                                var r = e.createElement("img");
                                return e.setAttribute(r, "class", "game-ico"), e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = e.childAt(t, [0, 0]),
                                    a = new Array(1);
                                return a[0] = e.createAttrMorph(r, "src"), a
                            },
                            statements: [
                                ["attribute", "src", ["get", "icon", ["loc", [null, [1, 1633],
                                    [1, 1637]
                                ]]]]
                            ],
                            locals: ["icon"],
                            templates: []
                        }
                    }(),
                    t = function() {
                        var e = function() {
                            return {
                                meta: {
                                    revision: "Ember@1.13.12",
                                    loc: {
                                        source: null,
                                        start: {
                                            line: 1,
                                            column: 2163
                                        },
                                        end: {
                                            line: 1,
                                            column: 2274
                                        }
                                    }
                                },
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function(e) {
                                    var t = e.createDocumentFragment(),
                                        n = e.createElement("li"),
                                        r = e.createElement("img");
                                    return e.appendChild(n, r), e.appendChild(t, n), t
                                },
                                buildRenderNodes: function(e, t, n) {
                                    var r = e.childAt(t, [0]),
                                        a = e.childAt(r, [0]),
                                        l = new Array(2);
                                    return l[0] = e.createAttrMorph(r, "class"), l[1] = e.createAttrMorph(a, "src"), l
                                },
                                statements: [
                                    ["attribute", "class", ["concat", ["badge completed ", ["get", "icon.level", ["loc", [null, [1, 2228],
                                        [1, 2238]
                                    ]]]]]],
                                    ["attribute", "src", ["get", "icon.imageUrl", ["loc", [null, [1, 2253],
                                        [1, 2266]
                                    ]]]]
                                ],
                                locals: ["icon"],
                                templates: []
                            }
                        }();
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 2065
                                    },
                                    end: {
                                        line: 1,
                                        column: 2288
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("em");
                                e.setAttribute(n, "class", "subtitle");
                                var r = e.createComment("");
                                e.appendChild(n, r);
                                var r = e.createTextNode(" earned");
                                e.appendChild(n, r), e.appendChild(t, n);
                                var n = e.createElement("ul");
                                e.setAttribute(n, "class", "badges");
                                var r = e.createComment("");
                                return e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(2);
                                return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r[1] = e.createMorphAt(e.childAt(t, [1]), 0, 0), r
                            },
                            statements: [
                                ["content", "earnedBadgesCount", ["loc", [null, [1, 2111],
                                    [1, 2132]
                                ]]],
                                ["block", "each", [
                                        ["get", "earnedBadgeIcons", ["loc", [null, [1, 2171],
                                            [1, 2187]
                                        ]]]
                                    ],
                                    [], 0, null, ["loc", [null, [1, 2163],
                                        [1, 2283]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: [e]
                        }
                    }(),
                    n = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 2288
                                    },
                                    end: {
                                        line: 1,
                                        column: 2341
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("em");
                                e.setAttribute(n, "class", "subtitle guest");
                                var r = e.createTextNode("No badges yet");
                                return e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function() {
                                return []
                            },
                            statements: [],
                            locals: [],
                            templates: []
                        }
                    }(),
                    r = function() {
                        var e = function() {
                                return {
                                    meta: {
                                        revision: "Ember@1.13.12",
                                        loc: {
                                            source: null,
                                            start: {
                                                line: 1,
                                                column: 2508
                                            },
                                            end: {
                                                line: 1,
                                                column: 2566
                                            }
                                        }
                                    },
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function(e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createElement("span"),
                                            r = e.createTextNode("Friends ");
                                        e.appendChild(n, r);
                                        var r = e.createComment("");
                                        e.appendChild(n, r);
                                        var r = e.createTextNode(" ");
                                        return e.appendChild(n, r), e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function(e, t, n) {
                                        var r = new Array(1);
                                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 1, 1), r
                                    },
                                    statements: [
                                        ["content", "friendsCount", ["loc", [null, [1, 2542],
                                            [1, 2558]
                                        ]]]
                                    ],
                                    locals: [],
                                    templates: []
                                }
                            }(),
                            t = function() {
                                return {
                                    meta: {
                                        revision: "Ember@1.13.12",
                                        loc: {
                                            source: null,
                                            start: {
                                                line: 1,
                                                column: 2573
                                            },
                                            end: {
                                                line: 1,
                                                column: 2621
                                            }
                                        }
                                    },
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function(e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createElement("span"),
                                            r = e.createTextNode("Fans ");
                                        e.appendChild(n, r);
                                        var r = e.createComment("");
                                        return e.appendChild(n, r), e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function(e, t, n) {
                                        var r = new Array(1);
                                        return r[0] = e.createMorphAt(e.childAt(t, [0]), 1, 1), r
                                    },
                                    statements: [
                                        ["content", "fansCount", ["loc", [null, [1, 2601],
                                            [1, 2614]
                                        ]]]
                                    ],
                                    locals: [],
                                    templates: []
                                }
                            }(),
                            n = function() {
                                return {
                                    meta: {
                                        revision: "Ember@1.13.12",
                                        loc: {
                                            source: null,
                                            start: {
                                                line: 1,
                                                column: 2653
                                            },
                                            end: {
                                                line: 1,
                                                column: 2752
                                            }
                                        }
                                    },
                                    arity: 1,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function(e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createElement("li");
                                        e.setAttribute(n, "class", "friend");
                                        var r = e.createElement("img");
                                        return e.setAttribute(r, "class", "avatar"), e.appendChild(n, r), e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function(e, t, n) {
                                        var r = e.childAt(t, [0, 0]),
                                            a = new Array(1);
                                        return a[0] = e.createAttrMorph(r, "src"), a
                                    },
                                    statements: [
                                        ["attribute", "src", ["get", "avatar", ["loc", [null, [1, 2723],
                                            [1, 2729]
                                        ]]]]
                                    ],
                                    locals: ["avatar"],
                                    templates: []
                                }
                            }();
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 2461
                                    },
                                    end: {
                                        line: 1,
                                        column: 2766
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("em");
                                e.setAttribute(n, "class", "subtitle");
                                var r = e.createComment("");
                                e.appendChild(n, r);
                                var r = e.createComment("");
                                e.appendChild(n, r), e.appendChild(t, n);
                                var n = e.createElement("ul");
                                e.setAttribute(n, "class", "friends");
                                var r = e.createComment("");
                                return e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = e.childAt(t, [0]),
                                    a = new Array(3);
                                return a[0] = e.createMorphAt(r, 0, 0), a[1] = e.createMorphAt(r, 1, 1), a[2] = e.createMorphAt(e.childAt(t, [1]), 0, 0), a
                            },
                            statements: [
                                ["block", "if", [
                                        ["get", "friendsCount", ["loc", [null, [1, 2514],
                                            [1, 2526]
                                        ]]]
                                    ],
                                    [], 0, null, ["loc", [null, [1, 2508],
                                        [1, 2573]
                                    ]]
                                ],
                                ["block", "if", [
                                        ["get", "fansCount", ["loc", [null, [1, 2579],
                                            [1, 2588]
                                        ]]]
                                    ],
                                    [], 1, null, ["loc", [null, [1, 2573],
                                        [1, 2628]
                                    ]]
                                ],
                                ["block", "each", [
                                        ["get", "friendOrFanAvatars", ["loc", [null, [1, 2661],
                                            [1, 2679]
                                        ]]]
                                    ],
                                    [], 2, null, ["loc", [null, [1, 2653],
                                        [1, 2761]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: [e, t, n]
                        }
                    }(),
                    a = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 2766
                                    },
                                    end: {
                                        line: 1,
                                        column: 2820
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("em");
                                e.setAttribute(n, "class", "subtitle guest");
                                var r = e.createTextNode("No friends yet");
                                return e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function() {
                                return []
                            },
                            statements: [],
                            locals: [],
                            templates: []
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 1337
                            },
                            end: {
                                line: 1,
                                column: 2837
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("ul");
                        e.setAttribute(n, "class", "profile-grid");
                        var r = e.createElement("li");
                        e.setAttribute(r, "class", "block my-games");
                        var a = e.createElement("strong");
                        e.setAttribute(a, "class", "title");
                        var l = e.createTextNode("My Games");
                        e.appendChild(a, l), e.appendChild(r, a);
                        var a = e.createElement("em");
                        e.setAttribute(a, "class", "subtitle");
                        var l = e.createComment("");
                        e.appendChild(a, l);
                        var l = e.createTextNode(" ");
                        e.appendChild(a, l);
                        var l = e.createComment("");
                        e.appendChild(a, l), e.appendChild(r, a);
                        var a = e.createElement("ul");
                        e.setAttribute(a, "class", "games");
                        var l = e.createComment("");
                        e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("li");
                        e.setAttribute(r, "class", "block forum-posts");
                        var a = e.createElement("strong");
                        e.setAttribute(a, "class", "title");
                        var l = e.createTextNode("Forum Posts");
                        e.appendChild(a, l), e.appendChild(r, a);
                        var a = e.createElement("em");
                        e.setAttribute(a, "class", "subtitle");
                        var l = e.createComment("");
                        e.appendChild(a, l);
                        var l = e.createTextNode(" ");
                        e.appendChild(a, l);
                        var l = e.createComment("");
                        e.appendChild(a, l), e.appendChild(r, a);
                        var a = e.createElement("span");
                        e.setAttribute(a, "class", "count");
                        var l = e.createElement("span");
                        e.setAttribute(l, "class", "num"), e.appendChild(a, l);
                        var l = e.createElement("span");
                        e.setAttribute(l, "aria-hidden", "true"), e.setAttribute(l, "class", "ico");
                        var i = e.createTextNode("'");
                        e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("li");
                        e.setAttribute(r, "class", "block badges");
                        var a = e.createElement("strong");
                        e.setAttribute(a, "class", "title");
                        var l = e.createTextNode("Badges");
                        e.appendChild(a, l), e.appendChild(r, a);
                        var a = e.createComment("");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("li");
                        e.setAttribute(r, "class", "block my-friends");
                        var a = e.createElement("strong");
                        e.setAttribute(a, "class", "title");
                        var l = e.createTextNode("My Friends");
                        e.appendChild(a, l), e.appendChild(r, a);
                        var a = e.createComment("");
                        return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = e.childAt(r, [0]),
                            l = e.childAt(a, [1]),
                            i = e.childAt(r, [1]),
                            o = e.childAt(i, [1]),
                            c = e.childAt(r, [2]),
                            s = e.childAt(r, [3]),
                            u = new Array(11);
                        return u[0] = e.createElementMorph(a), u[1] = e.createMorphAt(l, 0, 0), u[2] = e.createMorphAt(l, 2, 2), u[3] = e.createMorphAt(e.childAt(a, [2]), 0, 0), u[4] = e.createElementMorph(i), u[5] = e.createMorphAt(o, 0, 0), u[6] = e.createMorphAt(o, 2, 2), u[7] = e.createElementMorph(c), u[8] = e.createMorphAt(c, 1, 1), u[9] = e.createElementMorph(s), u[10] = e.createMorphAt(s, 1, 1), u
                    },
                    statements: [
                        ["element", "action", ["goToMyGames"],
                            ["on", "click"],
                            ["loc", [null, [1, 1386],
                                [1, 1421]
                            ]]
                        ],
                        ["content", "gamesCount", ["loc", [null, [1, 1505],
                            [1, 1519]
                        ]]],
                        ["inline", "k-pluralize", [
                                ["get", "gamesCount", ["loc", [null, [1, 1534],
                                    [1, 1544]
                                ]]], "game"
                            ],
                            [],
                            ["loc", [null, [1, 1520],
                                [1, 1553]
                            ]]
                        ],
                        ["block", "each", [
                                ["get", "gameIcons", ["loc", [null, [1, 1584],
                                    [1, 1593]
                                ]]]
                            ],
                            [], 0, null, ["loc", [null, [1, 1576],
                                [1, 1671]
                            ]]
                        ],
                        ["element", "action", ["goToForumPosts"],
                            ["on", "click"],
                            ["loc", [null, [1, 1685],
                                [1, 1723]
                            ]]
                        ],
                        ["content", "postsCount", ["loc", [null, [1, 1813],
                            [1, 1827]
                        ]]],
                        ["inline", "k-pluralize", [
                                ["get", "postsCount", ["loc", [null, [1, 1842],
                                    [1, 1852]
                                ]]], "post"
                            ],
                            [],
                            ["loc", [null, [1, 1828],
                                [1, 1861]
                            ]]
                        ],
                        ["element", "action", ["goToBadges"],
                            ["on", "click"],
                            ["loc", [null, [1, 1972],
                                [1, 2006]
                            ]]
                        ],
                        ["block", "if", [
                                ["get", "earnedBadgesCount", ["loc", [null, [1, 2071],
                                    [1, 2088]
                                ]]]
                            ],
                            [], 1, 2, ["loc", [null, [1, 2065],
                                [1, 2348]
                            ]]
                        ],
                        ["element", "action", ["goToMyFriends"],
                            ["on", "click"],
                            ["loc", [null, [1, 2357],
                                [1, 2394]
                            ]]
                        ],
                        ["block", "if", [
                                ["get", "friendOrFanAvatars", ["loc", [null, [1, 2467],
                                    [1, 2485]
                                ]]]
                            ],
                            [], 3, 4, ["loc", [null, [1, 2461],
                                [1, 2827]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t, n, r, a]
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 2854
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "profile home");
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "class", "user-masthead");
                var a = e.createElement("div"),
                    l = e.createComment("");
                e.appendChild(a, l);
                var l = e.createElement("h1");
                e.setAttribute(l, "class", "mh2");
                var i = e.createElement("span");
                e.setAttribute(i, "class", "name truncate");
                var o = e.createComment("");
                e.appendChild(i, o), e.appendChild(l, i);
                var i = e.createElement("span");
                e.setAttribute(i, "class", "mlvl");
                var o = e.createComment("");
                e.appendChild(i, o), e.appendChild(l, i), e.appendChild(a, l);
                var l = e.createComment("");
                e.appendChild(a, l);
                var l = e.createElement("ul");
                e.setAttribute(l, "class", "btns");
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createComment("");
                return e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = e.childAt(r, [1]),
                    l = e.childAt(a, [0]),
                    i = e.childAt(l, [1]),
                    o = new Array(9);
                return o[0] = e.createMorphAt(r, 0, 0), o[1] = e.createAttrMorph(l, "class"), o[2] = e.createMorphAt(l, 0, 0), o[3] = e.createMorphAt(e.childAt(i, [0]), 0, 0), o[4] = e.createMorphAt(e.childAt(i, [1]), 0, 0), o[5] = e.createMorphAt(l, 2, 2), o[6] = e.createMorphAt(e.childAt(l, [3]), 0, 0), o[7] = e.createMorphAt(a, 1, 1), o[8] = e.createMorphAt(r, 2, 2), o
            },
            statements: [
                ["inline", "render", ["back-button"],
                    [],
                    ["loc", [null, [1, 26],
                        [1, 50]
                    ]]
                ],
                ["attribute", "class", ["concat", ["user-info ", ["subexpr", "if", [
                        ["get", "inGameName", ["loc", [null, [1, 104],
                            [1, 114]
                        ]]], "w-game-name"
                    ],
                    [],
                    ["loc", [null, [1, 99],
                        [1, 130]
                    ]]
                ]]]],
                ["block", "if", [
                        ["get", "viewingOwnProfile", ["loc", [null, [1, 138],
                            [1, 155]
                        ]]]
                    ],
                    [], 0, 1, ["loc", [null, [1, 132],
                        [1, 356]
                    ]]
                ],
                ["content", "username", ["loc", [null, [1, 400],
                    [1, 412]
                ]]],
                ["content", "level", ["loc", [null, [1, 438],
                    [1, 447]
                ]]],
                ["block", "if", [
                        ["get", "showInGameName", ["loc", [null, [1, 465],
                            [1, 479]
                        ]]]
                    ],
                    [], 2, null, ["loc", [null, [1, 459],
                        [1, 556]
                    ]]
                ],
                ["block", "if", [
                        ["get", "viewingOwnProfile", ["loc", [null, [1, 579],
                            [1, 596]
                        ]]]
                    ],
                    [], 3, 4, ["loc", [null, [1, 573],
                        [1, 1026]
                    ]]
                ],
                ["block", "if", [
                        ["get", "hideInfo", ["loc", [null, [1, 1043],
                            [1, 1051]
                        ]]]
                    ],
                    [], 5, 6, ["loc", [null, [1, 1037],
                        [1, 1331]
                    ]]
                ],
                ["block", "unless", [
                        ["get", "hideInfo", ["loc", [null, [1, 1347],
                            [1, 1355]
                        ]]]
                    ],
                    [], 7, null, ["loc", [null, [1, 1337],
                        [1, 2848]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t, n, r, a, l, i, o]
        }
    }())
}), define("mobile-panel/templates/registration-flow/birthdate", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 66
                                    },
                                    end: {
                                        line: 1,
                                        column: 92
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["content", "message", ["loc", [null, [1, 81],
                                    [1, 92]
                                ]]]
                            ],
                            locals: [],
                            templates: []
                        }
                    }(),
                    t = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 92
                                    },
                                    end: {
                                        line: 1,
                                        column: 130
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["inline", "t", ["registrationFlow.title"],
                                    [],
                                    ["loc", [null, [1, 100],
                                        [1, 130]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 27
                            },
                            end: {
                                line: 1,
                                column: 137
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["block", "if", [
                                ["get", "message", ["loc", [null, [1, 72],
                                    [1, 79]
                                ]]]
                            ],
                            [], 0, 1, ["loc", [null, [1, 66],
                                [1, 137]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t]
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 190
                            },
                            end: {
                                line: 1,
                                column: 309
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "class", "error_block");
                        var r = e.createElement("p"),
                            a = e.createElement("strong"),
                            l = e.createComment("");
                        return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0, 0, 0]), 0, 0), r
                    },
                    statements: [
                        ["inline", "t", ["registrationFlow.birthdate.invalidError"],
                            [],
                            ["loc", [null, [1, 243],
                                [1, 290]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            n = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 316
                            },
                            end: {
                                line: 1,
                                column: 444
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "class", "error_block");
                        var r = e.createElement("p"),
                            a = e.createElement("strong"),
                            l = e.createComment("");
                        return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0, 0, 0]), 0, 0), r
                    },
                    statements: [
                        ["inline", "t", ["registrationFlow.parentEmail.invalidError"],
                            [],
                            ["loc", [null, [1, 376],
                                [1, 425]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            r = function() {
                var e = function() {
                    var e = function() {
                            return {
                                meta: {
                                    revision: "Ember@1.13.12",
                                    loc: {
                                        source: null,
                                        start: {
                                            line: 1,
                                            column: 670
                                        },
                                        end: {
                                            line: 1,
                                            column: 723
                                        }
                                    }
                                },
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function(e) {
                                    var t = e.createDocumentFragment(),
                                        n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function(e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [
                                    ["inline", "t", ["registrationFlow.birthdate.month"],
                                        [],
                                        ["loc", [null, [1, 683],
                                            [1, 723]
                                        ]]
                                    ]
                                ],
                                locals: [],
                                templates: []
                            }
                        }(),
                        t = function() {
                            var e = function() {
                                return {
                                    meta: {
                                        revision: "Ember@1.13.12",
                                        loc: {
                                            source: null,
                                            start: {
                                                line: 1,
                                                column: 763
                                            },
                                            end: {
                                                line: 1,
                                                column: 830
                                            }
                                        }
                                    },
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function(e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createComment("");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function(e, t, n) {
                                        var r = new Array(1);
                                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                    },
                                    statements: [
                                        ["inline", "t", [
                                                ["subexpr", "concat", ["months.", ["get", "month.name", ["loc", [null, [1, 817],
                                                        [1, 827]
                                                    ]]]],
                                                    [],
                                                    ["loc", [null, [1, 799],
                                                        [1, 828]
                                                    ]]
                                                ]
                                            ],
                                            [],
                                            ["loc", [null, [1, 795],
                                                [1, 830]
                                            ]]
                                        ]
                                    ],
                                    locals: [],
                                    templates: []
                                }
                            }();
                            return {
                                meta: {
                                    revision: "Ember@1.13.12",
                                    loc: {
                                        source: null,
                                        start: {
                                            line: 1,
                                            column: 736
                                        },
                                        end: {
                                            line: 1,
                                            column: 843
                                        }
                                    }
                                },
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function(e) {
                                    var t = e.createDocumentFragment(),
                                        n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function(e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [
                                    ["block", "x-option", [],
                                        ["value", ["subexpr", "@mut", [
                                                ["get", "month.number", ["loc", [null, [1, 781],
                                                    [1, 793]
                                                ]]]
                                            ],
                                            [],
                                            []
                                        ]], 0, null, ["loc", [null, [1, 763],
                                            [1, 843]
                                        ]]
                                    ]
                                ],
                                locals: ["month"],
                                templates: [e]
                            }
                        }();
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 609
                                },
                                end: {
                                    line: 1,
                                    column: 852
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(2);
                            return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 1, 1, n),
                                e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [
                            ["block", "x-option", [],
                                [], 0, null, ["loc", [null, [1, 670],
                                    [1, 736]
                                ]]
                            ],
                            ["block", "each", [
                                    ["get", "months", ["loc", [null, [1, 744],
                                        [1, 750]
                                    ]]]
                                ],
                                [], 1, null, ["loc", [null, [1, 736],
                                    [1, 852]
                                ]]
                            ]
                        ],
                        locals: [],
                        templates: [e, t]
                    }
                }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 586
                            },
                            end: {
                                line: 1,
                                column: 987
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(2);
                        return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["block", "x-select", [],
                            ["class", "mfield", "value", ["subexpr", "@mut", [
                                    ["get", "birthMonth", ["loc", [null, [1, 642],
                                        [1, 652]
                                    ]]]
                                ],
                                [],
                                []
                            ], "id", "birthMonth"], 0, null, ["loc", [null, [1, 609],
                                [1, 865]
                            ]]
                        ],
                        ["inline", "view", ["select"],
                            ["id", "birthDay", "content", ["subexpr", "@mut", [
                                    ["get", "days", ["loc", [null, [1, 903],
                                        [1, 907]
                                    ]]]
                                ],
                                [],
                                []
                            ], "selection", ["subexpr", "@mut", [
                                    ["get", "birthDay", ["loc", [null, [1, 918],
                                        [1, 926]
                                    ]]]
                                ],
                                [],
                                []
                            ], "prompt", ["subexpr", "t", ["registrationFlow.birthdate.day"],
                                [],
                                ["loc", [null, [1, 934],
                                    [1, 970]
                                ]]
                            ], "class", "mfield"],
                            ["loc", [null, [1, 865],
                                [1, 987]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e]
                }
            }(),
            a = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 1180
                            },
                            end: {
                                line: 1,
                                column: 1514
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "class", "mgroup");
                        var r = e.createElement("label");
                        e.setAttribute(r, "for", "parentEmail"), e.setAttribute(r, "class", "mlabel");
                        var a = e.createComment("");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("em");
                        e.setAttribute(r, "class", "msmallprint");
                        var a = e.createComment("");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = new Array(3);
                        return a[0] = e.createMorphAt(e.childAt(r, [0]), 0, 0), a[1] = e.createMorphAt(e.childAt(r, [1]), 0, 0), a[2] = e.createMorphAt(r, 2, 2), a
                    },
                    statements: [
                        ["inline", "t", ["registrationFlow.parentEmail.label"],
                            [],
                            ["loc", [null, [1, 1263],
                                [1, 1305]
                            ]]
                        ],
                        ["inline", "t", ["registrationFlow.parentEmail.explanation"],
                            [],
                            ["loc", [null, [1, 1337],
                                [1, 1385]
                            ]]
                        ],
                        ["inline", "input", [],
                            ["value", ["subexpr", "@mut", [
                                    ["get", "parentEmail", ["loc", [null, [1, 1404],
                                        [1, 1415]
                                    ]]]
                                ],
                                [],
                                []
                            ], "id", "parentEmail", "placeholder", ["subexpr", "t", ["registrationFlow.parentEmail.placeholder"],
                                [],
                                ["loc", [null, [1, 1445],
                                    [1, 1491]
                                ]]
                            ], "class", "mfield"],
                            ["loc", [null, [1, 1390],
                                [1, 1508]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 1947
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "reg_flow date");
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createElement("form"),
                    a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createElement("div");
                e.setAttribute(a, "class", "mgroup");
                var l = e.createElement("label");
                e.setAttribute(l, "for", "birthYear"), e.setAttribute(l, "class", "mlabel");
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l);
                var l = e.createElement("div");
                e.setAttribute(l, "class", "birthday_fields");
                var i = e.createComment("");
                e.appendChild(l, i);
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createElement("div");
                e.setAttribute(a, "class", "mgroup actions");
                var l = e.createElement("button");
                e.setAttribute(l, "type", "submit"), e.setAttribute(l, "class", "mbtn cta_btn");
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "class", "reg_steps");
                var a = e.createElement("ul");
                e.setAttribute(a, "class", "current_step");
                var l = e.createElement("li");
                e.appendChild(a, l);
                var l = e.createElement("li");
                e.appendChild(a, l);
                var l = e.createElement("li");
                e.setAttribute(l, "class", "current"), e.appendChild(a, l);
                var l = e.createElement("li");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createElement("p");
                e.setAttribute(a, "class", "next_step");
                var l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "class", "footer");
                var a = e.createElement("p");
                e.setAttribute(a, "class", "direction_note");
                var l = e.createTextNode("Â«");
                e.appendChild(a, l);
                var l = e.createComment("");
                return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = e.childAt(r, [1]),
                    l = e.childAt(a, [2]),
                    i = e.childAt(l, [1]),
                    o = new Array(11);
                return o[0] = e.createMorphAt(r, 0, 0), o[1] = e.createElementMorph(a), o[2] = e.createMorphAt(a, 0, 0), o[3] = e.createMorphAt(a, 1, 1), o[4] = e.createMorphAt(e.childAt(l, [0]), 0, 0), o[5] = e.createMorphAt(i, 0, 0), o[6] = e.createMorphAt(i, 1, 1), o[7] = e.createMorphAt(a, 3, 3), o[8] = e.createMorphAt(e.childAt(a, [4, 0]), 0, 0), o[9] = e.createMorphAt(e.childAt(r, [2, 1]), 0, 0), o[10] = e.createMorphAt(e.childAt(r, [3, 0]), 1, 1), o
            },
            statements: [
                ["block", "page-title", [],
                    ["additionalClasses", "mh2"], 0, null, ["loc", [null, [1, 27],
                        [1, 152]
                    ]]
                ],
                ["element", "action", ["submit"],
                    ["on", "submit"],
                    ["loc", [null, [1, 158],
                        [1, 189]
                    ]]
                ],
                ["block", "if", [
                        ["get", "dateError", ["loc", [null, [1, 196],
                            [1, 205]
                        ]]]
                    ],
                    [], 1, null, ["loc", [null, [1, 190],
                        [1, 316]
                    ]]
                ],
                ["block", "if", [
                        ["get", "parentEmailError", ["loc", [null, [1, 322],
                            [1, 338]
                        ]]]
                    ],
                    [], 2, null, ["loc", [null, [1, 316],
                        [1, 451]
                    ]]
                ],
                ["inline", "t", ["registrationFlow.birthdate.label"],
                    [],
                    ["loc", [null, [1, 509],
                        [1, 549]
                    ]]
                ],
                ["block", "if", [
                        ["get", "showMonthAndDay", ["loc", [null, [1, 592],
                            [1, 607]
                        ]]]
                    ],
                    [], 3, null, ["loc", [null, [1, 586],
                        [1, 994]
                    ]]
                ],
                ["inline", "view", ["select"],
                    ["id", "birthYear", "content", ["subexpr", "@mut", [
                            ["get", "years", ["loc", [null, [1, 1033],
                                [1, 1038]
                            ]]]
                        ],
                        [],
                        []
                    ], "selection", ["subexpr", "@mut", [
                            ["get", "birthYear", ["loc", [null, [1, 1049],
                                [1, 1058]
                            ]]]
                        ],
                        [],
                        []
                    ], "prompt", ["subexpr", "t", ["registrationFlow.birthdate.year"],
                        [],
                        ["loc", [null, [1, 1066],
                            [1, 1103]
                        ]]
                    ], "class", ["subexpr", "concat", ["mfield", " ", ["subexpr", "if", [
                                ["get", "showMonthAndDay", []],
                                ["subexpr", "-normalize-class", ["showMonthAndDay", ["get", "showMonthAndDay", []]],
                                    ["activeClass", "", "inactiveClass", "full-width"],
                                    []
                                ], "full-width"
                            ],
                            [],
                            []
                        ], " "],
                        [],
                        []
                    ]],
                    ["loc", [null, [1, 994],
                        [1, 1168]
                    ]]
                ],
                ["block", "if", [
                        ["get", "showParentEmail", ["loc", [null, [1, 1186],
                            [1, 1201]
                        ]]]
                    ],
                    [], 4, null, ["loc", [null, [1, 1180],
                        [1, 1521]
                    ]]
                ],
                ["inline", "t", ["registrationFlow.birthdate.submitButton"],
                    [],
                    ["loc", [null, [1, 1592],
                        [1, 1639]
                    ]]
                ],
                ["inline", "t", ["registrationFlow.birthdate.nextStep"],
                    [],
                    ["loc", [null, [1, 1787],
                        [1, 1830]
                    ]]
                ],
                ["inline", "t", ["registrationFlow.swipeToGoBack"],
                    [],
                    ["loc", [null, [1, 1893],
                        [1, 1931]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t, n, r, a]
        }
    }())
}), define("mobile-panel/templates/registration-flow/email-address", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 72
                                    },
                                    end: {
                                        line: 1,
                                        column: 98
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["content", "message", ["loc", [null, [1, 87],
                                    [1, 98]
                                ]]]
                            ],
                            locals: [],
                            templates: []
                        }
                    }(),
                    t = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 98
                                    },
                                    end: {
                                        line: 1,
                                        column: 136
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["inline", "t", ["registrationFlow.title"],
                                    [],
                                    ["loc", [null, [1, 106],
                                        [1, 136]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 33
                            },
                            end: {
                                line: 1,
                                column: 143
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["block", "if", [
                                ["get", "message", ["loc", [null, [1, 78],
                                    [1, 85]
                                ]]]
                            ],
                            [], 0, 1, ["loc", [null, [1, 72],
                                [1, 143]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t]
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 196
                            },
                            end: {
                                line: 1,
                                column: 267
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "email-taken", [],
                            ["emailAddress", ["subexpr", "@mut", [
                                    ["get", "takenEmailAddress", ["loc", [null, [1, 248],
                                        [1, 265]
                                    ]]]
                                ],
                                [],
                                []
                            ]],
                            ["loc", [null, [1, 221],
                                [1, 267]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            n = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 274
                            },
                            end: {
                                line: 1,
                                column: 393
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "class", "error_block");
                        var r = e.createElement("p"),
                            a = e.createElement("strong"),
                            l = e.createComment("");
                        return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0, 0, 0]), 0, 0), r
                    },
                    statements: [
                        ["inline", "t", ["registrationFlow.emailAddress.invalidError"],
                            [],
                            ["loc", [null, [1, 324],
                                [1, 374]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            r = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 869
                            },
                            end: {
                                line: 1,
                                column: 1027
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("span");
                        e.setAttribute(n, "class", "ico"), e.appendChild(t, n);
                        var n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "t", ["registrationFlow.emailAddress.loginWithFacebook"],
                            ["em", ["subexpr", "tag-decorator", ["em"],
                                [],
                                ["loc", [null, [1, 1005],
                                    [1, 1025]
                                ]]
                            ]],
                            ["loc", [null, [1, 948],
                                [1, 1027]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            a = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 1061
                            },
                            end: {
                                line: 1,
                                column: 1195
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createElement("strong"),
                            r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createTextNode("Â»");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(2);
                        return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(e.childAt(t, [1]), 0, 0), e.insertBoundary(t, 0), r
                    },
                    statements: [
                        ["inline", "t", ["registrationFlow.emailAddress.haveAccount"],
                            [],
                            ["loc", [null, [1, 1081],
                                [1, 1130]
                            ]]
                        ],
                        ["inline", "t", ["registrationFlow.emailAddress.signInNow"],
                            [],
                            ["loc", [null, [1, 1138],
                                [1, 1185]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 1217
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "reg_flow first_step");
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createElement("form"),
                    a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createElement("div");
                e.setAttribute(a, "class", "mgroup email");
                var l = e.createElement("label");
                e.setAttribute(l, "for", "emailAddress"), e.setAttribute(l, "class", "mlabel");
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l);
                var l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createElement("div");
                e.setAttribute(a, "class", "mgroup actions");
                var l = e.createElement("button");
                e.setAttribute(l, "type", "submit"), e.setAttribute(l, "class", "mbtn cta_btn");
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "class", "divider");
                var a = e.createComment("");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createElement("p");
                e.setAttribute(r, "class", "login_link");
                var a = e.createComment("");
                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = e.childAt(r, [1]),
                    l = e.childAt(a, [2]),
                    i = new Array(10);
                return i[0] = e.createMorphAt(r, 0, 0), i[1] = e.createElementMorph(a), i[2] = e.createMorphAt(a, 0, 0), i[3] = e.createMorphAt(a, 1, 1), i[4] = e.createMorphAt(e.childAt(l, [0]), 0, 0), i[5] = e.createMorphAt(l, 1, 1), i[6] = e.createMorphAt(e.childAt(a, [3, 0]), 0, 0), i[7] = e.createMorphAt(e.childAt(r, [2]), 0, 0), i[8] = e.createMorphAt(r, 3, 3), i[9] = e.createMorphAt(e.childAt(r, [4]), 0, 0), i
            },
            statements: [
                ["block", "page-title", [],
                    ["additionalClasses", "mh2"], 0, null, ["loc", [null, [1, 33],
                        [1, 158]
                    ]]
                ],
                ["element", "action", ["submit"],
                    ["on", "submit"],
                    ["loc", [null, [1, 164],
                        [1, 195]
                    ]]
                ],
                ["block", "if", [
                        ["get", "takenEmailAddress", ["loc", [null, [1, 202],
                            [1, 219]
                        ]]]
                    ],
                    [], 1, null, ["loc", [null, [1, 196],
                        [1, 274]
                    ]]
                ],
                ["block", "if", [
                        ["get", "errors", ["loc", [null, [1, 280],
                            [1, 286]
                        ]]]
                    ],
                    [], 2, null, ["loc", [null, [1, 274],
                        [1, 400]
                    ]]
                ],
                ["inline", "t", ["registrationFlow.emailAddress.label"],
                    [],
                    ["loc", [null, [1, 467],
                        [1, 510]
                    ]]
                ],
                ["inline", "input", [],
                    ["value", ["subexpr", "@mut", [
                            ["get", "emailAddress", ["loc", [null, [1, 532],
                                [1, 544]
                            ]]]
                        ],
                        [],
                        []
                    ], "type", "email", "id", "email_address", "placeholder", ["subexpr", "t", ["registrationFlow.emailAddress.placeholder"],
                        [],
                        ["loc", [null, [1, 589],
                            [1, 636]
                        ]]
                    ], "class", "mfield"],
                    ["loc", [null, [1, 518],
                        [1, 653]
                    ]]
                ],
                ["inline", "t", ["registrationFlow.emailAddress.submitButton"],
                    [],
                    ["loc", [null, [1, 730],
                        [1, 780]
                    ]]
                ],
                ["inline", "t", ["registrationFlow.emailAddress.or"],
                    [],
                    ["loc", [null, [1, 823],
                        [1, 863]
                    ]]
                ],
                ["block", "link-to", ["facebook.login"],
                    ["classNames", "mbtn fb_btn"], 3, null, ["loc", [null, [1, 869],
                        [1, 1039]
                    ]]
                ],
                ["block", "link-to", ["login"],
                    [], 4, null, ["loc", [null, [1, 1061],
                        [1, 1207]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t, n, r, a]
        }
    }())
}), define("mobile-panel/templates/registration-flow/password", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 70
                                    },
                                    end: {
                                        line: 1,
                                        column: 96
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["content", "message", ["loc", [null, [1, 85],
                                    [1, 96]
                                ]]]
                            ],
                            locals: [],
                            templates: []
                        }
                    }(),
                    t = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 96
                                    },
                                    end: {
                                        line: 1,
                                        column: 134
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["inline", "t", ["registrationFlow.title"],
                                    [],
                                    ["loc", [null, [1, 104],
                                        [1, 134]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 31
                            },
                            end: {
                                line: 1,
                                column: 141
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["block", "if", [
                                ["get", "message", ["loc", [null, [1, 76],
                                    [1, 83]
                                ]]]
                            ],
                            [], 0, 1, ["loc", [null, [1, 70],
                                [1, 141]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t]
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 194
                            },
                            end: {
                                line: 1,
                                column: 308
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "class", "error_block");
                        var r = e.createElement("p"),
                            a = e.createElement("strong"),
                            l = e.createComment("");
                        return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0, 0, 0]), 0, 0), r
                    },
                    statements: [
                        ["inline", "t", ["registrationFlow.password.lengthError"],
                            [],
                            ["loc", [null, [1, 244],
                                [1, 289]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 990
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "reg_flow password");
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createElement("form"),
                    a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createElement("div");
                e.setAttribute(a, "class", "mgroup");
                var l = e.createElement("label");
                e.setAttribute(l, "for", "password"), e.setAttribute(l, "class", "mlabel");
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l);
                var l = e.createElement("em");
                e.setAttribute(l, "class", "msmallprint");
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l);
                var l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createElement("div");
                e.setAttribute(a, "class", "mgroup actions");
                var l = e.createElement("button");
                e.setAttribute(l, "type", "submit"), e.setAttribute(l, "class", "mbtn cta_btn");
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "class", "reg_steps");
                var a = e.createElement("ul");
                e.setAttribute(a, "class", "current_step");
                var l = e.createElement("li");
                e.appendChild(a, l);
                var l = e.createElement("li");
                e.setAttribute(l, "class", "current"), e.appendChild(a, l);
                var l = e.createElement("li");
                e.appendChild(a, l);
                var l = e.createElement("li");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createElement("p");
                e.setAttribute(a, "class", "next_step");
                var l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "class", "footer");
                var a = e.createElement("p");
                e.setAttribute(a, "class", "direction_note");
                var l = e.createTextNode("Â«");
                e.appendChild(a, l);
                var l = e.createComment("");
                return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = e.childAt(r, [1]),
                    l = e.childAt(a, [1]),
                    i = new Array(9);
                return i[0] = e.createMorphAt(r, 0, 0), i[1] = e.createElementMorph(a), i[2] = e.createMorphAt(a, 0, 0), i[3] = e.createMorphAt(e.childAt(l, [0]), 0, 0), i[4] = e.createMorphAt(e.childAt(l, [1]), 0, 0), i[5] = e.createMorphAt(l, 2, 2), i[6] = e.createMorphAt(e.childAt(a, [2, 0]), 0, 0), i[7] = e.createMorphAt(e.childAt(r, [2, 1]), 0, 0), i[8] = e.createMorphAt(e.childAt(r, [3, 0]), 1, 1), i
            },
            statements: [
                ["block", "page-title", [],
                    ["additionalClasses", "mh2"], 0, null, ["loc", [null, [1, 31],
                        [1, 156]
                    ]]
                ],
                ["element", "action", ["submit"],
                    ["on", "submit"],
                    ["loc", [null, [1, 162],
                        [1, 193]
                    ]]
                ],
                ["block", "if", [
                        ["get", "errors", ["loc", [null, [1, 200],
                            [1, 206]
                        ]]]
                    ],
                    [], 1, null, ["loc", [null, [1, 194],
                        [1, 315]
                    ]]
                ],
                ["inline", "t", ["registrationFlow.password.label"],
                    [],
                    ["loc", [null, [1, 372],
                        [1, 411]
                    ]]
                ],
                ["inline", "t", ["registrationFlow.password.minLength"],
                    [],
                    ["loc", [null, [1, 443],
                        [1, 486]
                    ]]
                ],
                ["inline", "input", [],
                    ["value", ["subexpr", "@mut", [
                            ["get", "password", ["loc", [null, [1, 505],
                                [1, 513]
                            ]]]
                        ],
                        [],
                        []
                    ], "id", "password", "type", "password", "class", "mfield"],
                    ["loc", [null, [1, 491],
                        [1, 560]
                    ]]
                ],
                ["inline", "t", ["registrationFlow.password.submitButton"],
                    [],
                    ["loc", [null, [1, 637],
                        [1, 683]
                    ]]
                ],
                ["inline", "t", ["registrationFlow.password.nextStep"],
                    [],
                    ["loc", [null, [1, 831],
                        [1, 873]
                    ]]
                ],
                ["inline", "t", ["registrationFlow.swipeToGoBack"],
                    [],
                    ["loc", [null, [1, 936],
                        [1, 974]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("mobile-panel/templates/registration-flow/underage", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 75
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("h1");
                e.setAttribute(n, "class", "warning");
                var r = e.createElement("strong"),
                    a = e.createComment("");
                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(e.childAt(t, [0, 0]), 0, 0), r
            },
            statements: [
                ["inline", "t", ["registrationFlow.underage"],
                    [],
                    ["loc", [null, [1, 28],
                        [1, 61]
                    ]]
                ]
            ],
            locals: [],
            templates: []
        }
    }())
}), define("mobile-panel/templates/registration-flow/username", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 70
                                    },
                                    end: {
                                        line: 1,
                                        column: 96
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["content", "message", ["loc", [null, [1, 85],
                                    [1, 96]
                                ]]]
                            ],
                            locals: [],
                            templates: []
                        }
                    }(),
                    t = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 96
                                    },
                                    end: {
                                        line: 1,
                                        column: 134
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["inline", "t", ["registrationFlow.title"],
                                    [],
                                    ["loc", [null, [1, 104],
                                        [1, 134]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 31
                            },
                            end: {
                                line: 1,
                                column: 141
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["block", "if", [
                                ["get", "message", ["loc", [null, [1, 76],
                                    [1, 83]
                                ]]]
                            ],
                            [], 0, 1, ["loc", [null, [1, 70],
                                [1, 141]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t]
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 194
                            },
                            end: {
                                line: 1,
                                column: 294
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "class", "error_block");
                        var r = e.createElement("h1"),
                            a = e.createComment("");
                        return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(e.childAt(t, [0, 0]), 0, 0), r
                    },
                    statements: [
                        ["inline", "t", ["registrationFlow.underage"],
                            [],
                            ["loc", [null, [1, 250],
                                [1, 283]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            n = function() {
                var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 302
                                    },
                                    end: {
                                        line: 1,
                                        column: 373
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [
                                ["inline", "email-taken", [],
                                    ["emailAddress", ["subexpr", "@mut", [
                                            ["get", "takenEmailAddress", ["loc", [null, [1, 354],
                                                [1, 371]
                                            ]]]
                                        ],
                                        [],
                                        []
                                    ]],
                                    ["loc", [null, [1, 327],
                                        [1, 373]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: []
                        }
                    }(),
                    t = function() {
                        var e = function() {
                            return {
                                meta: {
                                    revision: "Ember@1.13.12",
                                    loc: {
                                        source: null,
                                        start: {
                                            line: 1,
                                            column: 511
                                        },
                                        end: {
                                            line: 1,
                                            column: 571
                                        }
                                    }
                                },
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function(e) {
                                    var t = e.createDocumentFragment(),
                                        n = e.createElement("li"),
                                        r = e.createComment("");
                                    return e.appendChild(n, r), e.appendChild(t, n), t
                                },
                                buildRenderNodes: function(e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                                },
                                statements: [
                                    ["inline", "t-error", [
                                            ["get", "error", ["loc", [null, [1, 559],
                                                [1, 564]
                                            ]]]
                                        ],
                                        [],
                                        ["loc", [null, [1, 549],
                                            [1, 566]
                                        ]]
                                    ]
                                ],
                                locals: ["error"],
                                templates: []
                            }
                        }();
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 380
                                    },
                                    end: {
                                        line: 1,
                                        column: 591
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("div");
                                e.setAttribute(n, "class", "error_block");
                                var r = e.createElement("p"),
                                    a = e.createElement("strong"),
                                    l = e.createComment("");
                                e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                                var r = e.createElement("ul");
                                e.setAttribute(r, "class", "error_list");
                                var a = e.createComment("");
                                return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function(e, t, n) {
                                var r = e.childAt(t, [0]),
                                    a = new Array(2);
                                return a[0] = e.createMorphAt(e.childAt(r, [0, 0]), 0, 0), a[1] = e.createMorphAt(e.childAt(r, [1]), 0, 0), a
                            },
                            statements: [
                                ["inline", "t", ["registrationFlow.username.errorHeader"],
                                    [],
                                    ["loc", [null, [1, 430],
                                        [1, 475]
                                    ]]
                                ],
                                ["block", "each", [
                                        ["get", "errorMessages", ["loc", [null, [1, 519],
                                            [1, 532]
                                        ]]]
                                    ],
                                    [], 0, null, ["loc", [null, [1, 511],
                                        [1, 580]
                                    ]]
                                ]
                            ],
                            locals: [],
                            templates: [e]
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 294
                            },
                            end: {
                                line: 1,
                                column: 598
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(2);
                        return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["block", "if", [
                                ["get", "takenEmailAddress", ["loc", [null, [1, 308],
                                    [1, 325]
                                ]]]
                            ],
                            [], 0, null, ["loc", [null, [1, 302],
                                [1, 380]
                            ]]
                        ],
                        ["block", "if", [
                                ["get", "errors", ["loc", [null, [1, 386],
                                    [1, 392]
                                ]]]
                            ],
                            [], 1, null, ["loc", [null, [1, 380],
                                [1, 598]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t]
                }
            }(),
            r = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 1057
                            },
                            end: {
                                line: 1,
                                column: 1464
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("div");
                        e.setAttribute(n, "class", "mgroup");
                        var r = e.createElement("label");
                        e.setAttribute(r, "class", "mcheckbox");
                        var a = e.createComment("");
                        e.appendChild(r, a);
                        var a = e.createComment("");
                        return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0, 0]),
                            a = new Array(2);
                        return a[0] = e.createMorphAt(r, 0, 0), a[1] = e.createMorphAt(r, 1, 1), a
                    },
                    statements: [
                        ["inline", "input", [],
                            ["type", "checkbox", "id", "privacy_policy", "checked", ["subexpr", "@mut", [
                                    ["get", "privacyPolicyConsent", ["loc", [null, [1, 1200],
                                        [1, 1220]
                                    ]]]
                                ],
                                [],
                                []
                            ], "class", "mfield"],
                            ["loc", [null, [1, 1148],
                                [1, 1237]
                            ]]
                        ],
                        ["inline", "t", ["registrationFlow.username.privacyPolicy"],
                            ["ppLink", ["subexpr", "tag-decorator", ["a"],
                                ["class", "pp-link", "href", "#"],
                                ["loc", [null, [1, 1290],
                                    [1, 1334]
                                ]]
                            ], "tosLink", ["subexpr", "tag-decorator", ["a"],
                                ["class", "tos-link", "href", "#"],
                                ["loc", [null, [1, 1343],
                                    [1, 1388]
                                ]]
                            ], "cookieLink", ["subexpr", "tag-decorator", ["a"],
                                ["class", "cookie-link", "href", "#"],
                                ["loc", [null, [1, 1400],
                                    [1, 1448]
                                ]]
                            ]],
                            ["loc", [null, [1, 1237],
                                [1, 1450]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 1899
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "reg_flow username");
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createElement("form"),
                    a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createElement("div");
                e.setAttribute(a, "class", "mgroup");
                var l = e.createElement("label");
                e.setAttribute(l, "for", "username"), e.setAttribute(l, "class", "mlabel");
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l);
                var l = e.createElement("p");
                e.setAttribute(l, "class", "msmallprint");
                var i = e.createComment("");
                e.appendChild(l, i);
                var i = e.createElement("em"),
                    o = e.createTextNode("(");
                e.appendChild(i, o);
                var o = e.createComment("");
                e.appendChild(i, o);
                var o = e.createTextNode(")");
                e.appendChild(i, o), e.appendChild(l, i), e.appendChild(a, l);
                var l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createElement("div");
                e.setAttribute(a, "class", "mgroup");
                var l = e.createElement("label");
                e.setAttribute(l, "class", "mcheckbox");
                var i = e.createComment("");
                e.appendChild(l, i);
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createElement("div");
                e.setAttribute(a, "class", "mgroup actions");
                var l = e.createElement("button");
                e.setAttribute(l, "type", "submit"), e.setAttribute(l, "class", "mbtn cta_btn");
                var i = e.createComment("");
                e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "class", "reg_steps");
                var a = e.createElement("ul");
                e.setAttribute(a, "class", "current_step");
                var l = e.createElement("li");
                e.appendChild(a, l);
                var l = e.createElement("li");
                e.appendChild(a, l);
                var l = e.createElement("li");
                e.appendChild(a, l);
                var l = e.createElement("li");
                e.setAttribute(l, "class", "current"), e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createElement("p");
                e.setAttribute(a, "class", "next_step");
                var l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "class", "footer");
                var a = e.createElement("p");
                e.setAttribute(a, "class", "direction_note");
                var l = e.createTextNode("Â«");
                e.appendChild(a, l);
                var l = e.createComment("");
                return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = e.childAt(r, [1]),
                    l = e.childAt(a, [1]),
                    i = e.childAt(l, [1]),
                    o = e.childAt(a, [2, 0]),
                    c = new Array(13);
                return c[0] = e.createMorphAt(r, 0, 0), c[1] = e.createElementMorph(a), c[2] = e.createMorphAt(a, 0, 0), c[3] = e.createMorphAt(e.childAt(l, [0]), 0, 0), c[4] = e.createMorphAt(i, 0, 0), c[5] = e.createMorphAt(e.childAt(i, [1]), 1, 1), c[6] = e.createMorphAt(l, 2, 2), c[7] = e.createMorphAt(o, 0, 0), c[8] = e.createMorphAt(o, 1, 1), c[9] = e.createMorphAt(a, 3, 3), c[10] = e.createMorphAt(e.childAt(a, [4, 0]), 0, 0), c[11] = e.createMorphAt(e.childAt(r, [2, 1]), 0, 0), c[12] = e.createMorphAt(e.childAt(r, [3, 0]), 1, 1), c
            },
            statements: [
                ["block", "page-title", [],
                    ["additionalClasses", "mh2"], 0, null, ["loc", [null, [1, 31],
                        [1, 156]
                    ]]
                ],
                ["element", "action", ["submit"],
                    ["on", "submit"],
                    ["loc", [null, [1, 162],
                        [1, 193]
                    ]]
                ],
                ["block", "if", [
                        ["get", "activeUser.underage", ["loc", [null, [1, 200],
                            [1, 219]
                        ]]]
                    ],
                    [], 1, 2, ["loc", [null, [1, 194],
                        [1, 605]
                    ]]
                ],
                ["inline", "t", ["registrationFlow.username.label"],
                    [],
                    ["loc", [null, [1, 662],
                        [1, 701]
                    ]]
                ],
                ["inline", "t", ["registrationFlow.username.suggestion"],
                    [],
                    ["loc", [null, [1, 732],
                        [1, 776]
                    ]]
                ],
                ["inline", "t", ["registrationFlow.username.maxLength"],
                    [],
                    ["loc", [null, [1, 781],
                        [1, 824]
                    ]]
                ],
                ["inline", "input", [],
                    ["value", ["subexpr", "@mut", [
                            ["get", "username", ["loc", [null, [1, 848],
                                [1, 856]
                            ]]]
                        ],
                        [],
                        []
                    ], "id", "username", "class", "mfield"],
                    ["loc", [null, [1, 834],
                        [1, 887]
                    ]]
                ],
                ["inline", "input", [],
                    ["type", "checkbox", "id", "opt_in", "checked", ["subexpr", "@mut", [
                            ["get", "optIn", ["loc", [null, [1, 982],
                                [1, 987]
                            ]]]
                        ],
                        [],
                        []
                    ], "class", "mfield"],
                    ["loc", [null, [1, 938],
                        [1, 1004]
                    ]]
                ],
                ["inline", "t", ["registrationFlow.username.optIn"],
                    [],
                    ["loc", [null, [1, 1004],
                        [1, 1043]
                    ]]
                ],
                ["block", "unless", [
                        ["get", "activeUser.parentalConsentRequired", ["loc", [null, [1, 1067],
                            [1, 1101]
                        ]]]
                    ],
                    [], 3, null, ["loc", [null, [1, 1057],
                        [1, 1475]
                    ]]
                ],
                ["inline", "t", ["registrationFlow.username.submitButton"],
                    [],
                    ["loc", [null, [1, 1546],
                        [1, 1592]
                    ]]
                ],
                ["inline", "t", ["registrationFlow.username.nextStep"],
                    [],
                    ["loc", [null, [1, 1740],
                        [1, 1782]
                    ]]
                ],
                ["inline", "t", ["registrationFlow.swipeToGoBack"],
                    [],
                    ["loc", [null, [1, 1845],
                        [1, 1883]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t, n, r]
        }
    }())
}), define("mobile-panel/templates/registration-flow", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 12
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createUnsafeMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [
                ["content", "outlet", ["loc", [null, [1, 0],
                    [1, 12]
                ]]]
            ],
            locals: [],
            templates: []
        }
    }())
}), define("mobile-panel/templates/room-list-modal", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
            var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 43
                                },
                                end: {
                                    line: 1,
                                    column: 196
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("div");
                            e.setAttribute(n, "class", "motd hyphenate");
                            var r = e.createElement("h1");
                            e.setAttribute(r, "class", "motd-header");
                            var a = e.createTextNode("Guild Message of the Day:");
                            e.appendChild(r, a), e.appendChild(n, r);
                            var r = e.createElement("div");
                            e.setAttribute(r, "class", "message");
                            var a = e.createComment("");
                            return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createUnsafeMorphAt(e.childAt(t, [0, 1]), 0, 0), r
                        },
                        statements: [
                            ["content", "motd.message", ["loc", [null, [1, 166],
                                [1, 184]
                            ]]]
                        ],
                        locals: [],
                        templates: []
                    }
                }(),
                t = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 349
                                },
                                end: {
                                    line: 2,
                                    column: 28
                                }
                            }
                        },
                        arity: 1,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("li"),
                                r = e.createComment("");
                            e.appendChild(n, r);
                            var r = e.createComment("");
                            e.appendChild(n, r);
                            var r = e.createTextNode("\n");
                            e.appendChild(n, r);
                            var r = e.createComment("");
                            return e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = e.childAt(t, [0]),
                                a = new Array(5);
                            return a[0] = e.createAttrMorph(r, "class"), a[1] = e.createElementMorph(r), a[2] = e.createMorphAt(r, 0, 0), a[3] = e.createMorphAt(r, 1, 1), a[4] = e.createMorphAt(r, 3, 3), a
                        },
                        statements: [
                            ["attribute", "class", ["concat", ["user ", ["subexpr", "if", [
                                    ["get", "c.active", ["loc", [null, [1, 436],
                                        [1, 444]
                                    ]]], "", "inactive"
                                ],
                                [],
                                ["loc", [null, [1, 431],
                                    [1, 460]
                                ]]
                            ]]]],
                            ["element", "action", ["visitProfile", ["get", "c", ["loc", [null, [1, 404],
                                    [1, 405]
                                ]]]],
                                ["on", "click"],
                                ["loc", [null, [1, 380],
                                    [1, 418]
                                ]]
                            ],
                            ["inline", "avatar-image", [],
                                ["username", ["subexpr", "@mut", [
                                        ["get", "c.username", ["loc", [null, [1, 486],
                                            [1, 496]
                                        ]]]
                                    ],
                                    [],
                                    []
                                ], "kuid", ["subexpr", "@mut", [
                                        ["get", "c.kuid", ["loc", [null, [1, 502],
                                            [1, 508]
                                        ]]]
                                    ],
                                    [],
                                    []
                                ]],
                                ["loc", [null, [1, 462],
                                    [1, 510]
                                ]]
                            ],
                            ["content", "c.characterName", ["loc", [null, [1, 510],
                                [1, 529]
                            ]]],
                            ["inline", "user-details", [],
                                ["user", ["subexpr", "@mut", [
                                        ["get", "c", ["loc", [null, [2, 20],
                                            [2, 21]
                                        ]]]
                                    ],
                                    [],
                                    []
                                ]],
                                ["loc", [null, [2, 0],
                                    [2, 23]
                                ]]
                            ]
                        ],
                        locals: ["c"],
                        templates: []
                    }
                }();
            return {
                meta: {
                    revision: "Ember@1.13.12",
                    loc: {
                        source: null,
                        start: {
                            line: 1,
                            column: 0
                        },
                        end: {
                            line: 2,
                            column: 42
                        }
                    }
                },
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function(e) {
                    var t = e.createDocumentFragment(),
                        n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createElement("h1");
                    e.setAttribute(n, "class", "chat-user-list-header");
                    var r = e.createTextNode("Room participants ");
                    e.appendChild(n, r);
                    var r = e.createElement("em"),
                        a = e.createTextNode("(");
                    e.appendChild(r, a);
                    var a = e.createComment("");
                    e.appendChild(r, a);
                    var a = e.createTextNode(")");
                    e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createElement("ul");
                    e.setAttribute(n, "class", "chat-user-list");
                    var r = e.createComment("");
                    return e.appendChild(n, r), e.appendChild(t, n), t
                },
                buildRenderNodes: function(e, t, n) {
                    var r = new Array(3);
                    return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(e.childAt(t, [1, 1]), 1, 1), r[2] = e.createMorphAt(e.childAt(t, [2]), 0, 0), e.insertBoundary(t, 0), r
                },
                statements: [
                    ["block", "if", [
                            ["get", "motd.message", ["loc", [null, [1, 49],
                                [1, 61]
                            ]]]
                        ],
                        [], 0, null, ["loc", [null, [1, 43],
                            [1, 203]
                        ]]
                    ],
                    ["inline", "t", ["roomListModal.onlineCount"],
                        ["count", ["subexpr", "@mut", [
                                ["get", "onlineCount", ["loc", [null, [1, 298],
                                    [1, 309]
                                ]]]
                            ],
                            [],
                            []
                        ]],
                        ["loc", [null, [1, 260],
                            [1, 311]
                        ]]
                    ],
                    ["block", "each", [
                            ["get", "characters", ["loc", [null, [1, 357],
                                [1, 367]
                            ]]]
                        ],
                        [], 1, null, ["loc", [null, [1, 349],
                            [2, 37]
                        ]]
                    ]
                ],
                locals: [],
                templates: [e, t]
            }
        }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 2,
                        column: 51
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [
                ["block", "view", ["chat-modal"],
                    ["modalController", ["subexpr", "@mut", [
                            ["get", "this", ["loc", [null, [1, 37],
                                [1, 41]
                            ]]]
                        ],
                        [],
                        []
                    ]], 0, null, ["loc", [null, [1, 0],
                        [2, 51]
                    ]]
                ]
            ],
            locals: [],
            templates: [e]
        }
    }())
}), define("mobile-panel/templates/search-toolbar", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
            return {
                meta: {
                    revision: "Ember@1.13.12",
                    loc: {
                        source: null,
                        start: {
                            line: 1,
                            column: 28
                        },
                        end: {
                            line: 1,
                            column: 150
                        }
                    }
                },
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function(e) {
                    var t = e.createDocumentFragment(),
                        n = e.createElement("span");
                    e.setAttribute(n, "class", "ico back");
                    var r = e.createTextNode("<");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function(e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, null), r
                },
                statements: [
                    ["inline", "t", ["searchToolbar.backToForum"],
                        [],
                        ["loc", [null, [1, 117],
                            [1, 150]
                        ]]
                    ]
                ],
                locals: [],
                templates: []
            }
        }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 168
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "ctrl back-ctrl");
                var r = e.createComment("");
                return e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
            },
            statements: [
                ["block", "link-to", ["forum", ["get", "game.gameForumId", ["loc", [null, [1, 47],
                        [1, 63]
                    ]]]],
                    ["class", "forum-btn"], 0, null, ["loc", [null, [1, 28],
                        [1, 162]
                    ]]
                ]
            ],
            locals: [],
            templates: [e]
        }
    }())
}), define("mobile-panel/templates/sleep", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 28
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [
                ["inline", "render", ["asset-preloader"],
                    [],
                    ["loc", [null, [1, 0],
                        [1, 28]
                    ]]
                ]
            ],
            locals: [],
            templates: []
        }
    }())
}), define("mobile-panel/templates/topic-list-item", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
            var e = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 107
                                },
                                end: {
                                    line: 1,
                                    column: 173
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("span");
                            e.setAttribute(n, "aria-hidden", "true"), e.setAttribute(n, "class", "ico pinned");
                            var r = e.createTextNode("p");
                            return e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function() {
                            return []
                        },
                        statements: [],
                        locals: [],
                        templates: []
                    }
                }(),
                t = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 180
                                },
                                end: {
                                    line: 1,
                                    column: 244
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createElement("span");
                            e.setAttribute(n, "aria-hidden", "true"), e.setAttribute(n, "class", "ico lock");
                            var r = e.createTextNode("l");
                            return e.appendChild(n, r), e.appendChild(t, n), t
                        },
                        buildRenderNodes: function() {
                            return []
                        },
                        statements: [],
                        locals: [],
                        templates: []
                    }
                }(),
                n = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 277
                                },
                                end: {
                                    line: 1,
                                    column: 537
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [
                            ["inline", "t", ["topicListItem.latestPostWithCharacterName"],
                                ["user", ["subexpr", "tag", ["strong", ["get", "latestPostBy", ["loc", [null, [1, 370],
                                        [1, 382]
                                    ]]]],
                                    ["class", "user"],
                                    ["loc", [null, [1, 356],
                                        [1, 396]
                                    ]]
                                ], "time", ["subexpr", "tag", ["strong", ["subexpr", "medium-format-datetime", [
                                            ["get", "latestPostAt", ["loc", [null, [1, 440],
                                                [1, 452]
                                            ]]]
                                        ],
                                        [],
                                        ["loc", [null, [1, 416],
                                            [1, 453]
                                        ]]
                                    ]],
                                    ["class", "date"],
                                    ["loc", [null, [1, 402],
                                        [1, 467]
                                    ]]
                                ], "characterName", ["subexpr", "tag", ["em", ["subexpr", "concat", ["(", ["get", "latestPostByCharacterName", ["loc", [null, [1, 504],
                                            [1, 529]
                                        ]]], ")"],
                                        [],
                                        ["loc", [null, [1, 492],
                                            [1, 534]
                                        ]]
                                    ]],
                                    [],
                                    ["loc", [null, [1, 482],
                                        [1, 535]
                                    ]]
                                ]],
                                ["loc", [null, [1, 303],
                                    [1, 537]
                                ]]
                            ]
                        ],
                        locals: [],
                        templates: []
                    }
                }(),
                r = function() {
                    return {
                        meta: {
                            revision: "Ember@1.13.12",
                            loc: {
                                source: null,
                                start: {
                                    line: 1,
                                    column: 537
                                },
                                end: {
                                    line: 1,
                                    column: 694
                                }
                            }
                        },
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function(e) {
                            var t = e.createDocumentFragment(),
                                n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function(e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [
                            ["inline", "t", ["topicListItem.latestPost"],
                                ["user", ["subexpr", "tag", ["strong", ["get", "latestPostBy", ["loc", [null, [1, 595],
                                        [1, 607]
                                    ]]]],
                                    ["class", "user"],
                                    ["loc", [null, [1, 581],
                                        [1, 621]
                                    ]]
                                ], "time", ["subexpr", "tag", ["strong", ["subexpr", "medium-format-datetime", [
                                            ["get", "latestPostAt", ["loc", [null, [1, 665],
                                                [1, 677]
                                            ]]]
                                        ],
                                        [],
                                        ["loc", [null, [1, 641],
                                            [1, 678]
                                        ]]
                                    ]],
                                    ["class", "date"],
                                    ["loc", [null, [1, 627],
                                        [1, 692]
                                    ]]
                                ]],
                                ["loc", [null, [1, 545],
                                    [1, 694]
                                ]]
                            ]
                        ],
                        locals: [],
                        templates: []
                    }
                }();
            return {
                meta: {
                    revision: "Ember@1.13.12",
                    loc: {
                        source: null,
                        start: {
                            line: 1,
                            column: 0
                        },
                        end: {
                            line: 1,
                            column: 1071
                        }
                    }
                },
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function(e) {
                    var t = e.createDocumentFragment(),
                        n = e.createElement("div");
                    e.setAttribute(n, "class", "forum-info-block");
                    var r = e.createElement("p");
                    e.setAttribute(r, "class", "forum-title");
                    var a = e.createComment("");
                    e.appendChild(r, a);
                    var a = e.createComment("");
                    e.appendChild(r, a);
                    var a = e.createComment("");
                    e.appendChild(r, a), e.appendChild(n, r);
                    var r = e.createElement("p");
                    e.setAttribute(r, "class", "forum-meta");
                    var a = e.createComment("");
                    e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createElement("div");
                    e.setAttribute(n, "class", "forum-info-block");
                    var r = e.createElement("p");
                    e.setAttribute(r, "class", "forum-count");
                    var a = e.createComment("");
                    e.appendChild(r, a), e.appendChild(n, r);
                    var r = e.createElement("p");
                    e.setAttribute(r, "class", "forum-count-label");
                    var a = e.createComment("");
                    e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createElement("div");
                    e.setAttribute(n, "class", "forum-info-block");
                    var r = e.createElement("p");
                    e.setAttribute(r, "class", "forum-count");
                    var a = e.createComment("");
                    e.appendChild(r, a), e.appendChild(n, r);
                    var r = e.createElement("p");
                    e.setAttribute(r, "class", "forum-count-label");
                    var a = e.createComment("");
                    return e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                },
                buildRenderNodes: function(e, t, n) {
                    var r = e.childAt(t, [0]),
                        a = e.childAt(r, [0]),
                        l = e.childAt(t, [1]),
                        i = e.childAt(t, [2]),
                        o = new Array(8);
                    return o[0] = e.createMorphAt(a, 0, 0), o[1] = e.createMorphAt(a, 1, 1), o[2] = e.createMorphAt(a, 2, 2), o[3] = e.createMorphAt(e.childAt(r, [1]), 0, 0), o[4] = e.createMorphAt(e.childAt(l, [0]), 0, 0), o[5] = e.createMorphAt(e.childAt(l, [1]), 0, 0), o[6] = e.createMorphAt(e.childAt(i, [0]), 0, 0), o[7] = e.createMorphAt(e.childAt(i, [1]), 0, 0), o
                },
                statements: [
                    ["content", "title", ["loc", [null, [1, 98],
                        [1, 107]
                    ]]],
                    ["block", "if", [
                            ["get", "sticky", ["loc", [null, [1, 113],
                                [1, 119]
                            ]]]
                        ],
                        [], 0, null, ["loc", [null, [1, 107],
                            [1, 180]
                        ]]
                    ],
                    ["block", "if", [
                            ["get", "locked", ["loc", [null, [1, 186],
                                [1, 192]
                            ]]]
                        ],
                        [], 1, null, ["loc", [null, [1, 180],
                            [1, 251]
                        ]]
                    ],
                    ["block", "if", [
                            ["get", "forum.isGuildForum", ["loc", [null, [1, 283],
                                [1, 301]
                            ]]]
                        ],
                        [], 2, 3, ["loc", [null, [1, 277],
                            [1, 701]
                        ]]
                    ],
                    ["inline", "unbound", [
                            ["subexpr", "number-with-delimiter", [
                                    ["get", "postsCount", ["loc", [null, [1, 797],
                                        [1, 807]
                                    ]]]
                                ],
                                [],
                                ["loc", [null, [1, 774],
                                    [1, 808]
                                ]]
                            ]
                        ],
                        [],
                        ["loc", [null, [1, 764],
                            [1, 810]
                        ]]
                    ],
                    ["inline", "t", ["topicListItem.posts"],
                        ["count", ["subexpr", "@mut", [
                                ["get", "postsCount", ["loc", [null, [1, 875],
                                    [1, 885]
                                ]]]
                            ],
                            [],
                            []
                        ]],
                        ["loc", [null, [1, 843],
                            [1, 887]
                        ]]
                    ],
                    ["inline", "unbound", [
                            ["subexpr", "number-with-delimiter", [
                                    ["get", "hits", ["loc", [null, [1, 983],
                                        [1, 987]
                                    ]]]
                                ],
                                [],
                                ["loc", [null, [1, 960],
                                    [1, 988]
                                ]]
                            ]
                        ],
                        [],
                        ["loc", [null, [1, 950],
                            [1, 990]
                        ]]
                    ],
                    ["inline", "t", ["topicListItem.views"],
                        ["count", ["subexpr", "@mut", [
                                ["get", "hits", ["loc", [null, [1, 1055],
                                    [1, 1059]
                                ]]]
                            ],
                            [],
                            []
                        ]],
                        ["loc", [null, [1, 1023],
                            [1, 1061]
                        ]]
                    ]
                ],
                locals: [],
                templates: [e, t, n, r]
            }
        }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 1083
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [
                ["block", "link-to", ["topic", ["get", "model", ["loc", [null, [1, 19],
                        [1, 24]
                    ]]]],
                    ["class", "forum-link"], 0, null, ["loc", [null, [1, 0],
                        [1, 1083]
                    ]]
                ]
            ],
            locals: [],
            templates: [e]
        }
    }())
}), define("mobile-panel/templates/topic-moderate-modal", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
            return {
                meta: {
                    revision: "Ember@1.13.12",
                    loc: {
                        source: null,
                        start: {
                            line: 1,
                            column: 0
                        },
                        end: {
                            line: 1,
                            column: 970
                        }
                    }
                },
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function(e) {
                    var t = e.createDocumentFragment(),
                        n = e.createElement("div");
                    e.setAttribute(n, "class", "modal-content-inner");
                    var r = e.createElement("p");
                    e.setAttribute(r, "class", "label");
                    var a = e.createComment("");
                    e.appendChild(r, a), e.appendChild(n, r);
                    var r = e.createComment("");
                    e.appendChild(n, r);
                    var r = e.createElement("ul");
                    e.setAttribute(r, "class", "thread-ctrls");
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "ctrl");
                    var l = e.createComment("");
                    e.appendChild(a, l);
                    var l = e.createElement("label");
                    e.setAttribute(l, "for", "sticky"), e.setAttribute(l, "class", "mlabel");
                    var i = e.createComment("");
                    e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "ctrl");
                    var l = e.createComment("");
                    e.appendChild(a, l);
                    var l = e.createElement("label");
                    e.setAttribute(l, "for", "locked"), e.setAttribute(l, "class", "mlabel");
                    var i = e.createComment("");
                    e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a);
                    var a = e.createElement("li");
                    e.setAttribute(a, "class", "ctrl");
                    var l = e.createComment("");
                    e.appendChild(a, l);
                    var l = e.createElement("label");
                    e.setAttribute(l, "for", "sink"), e.setAttribute(l, "class", "mlabel");
                    var i = e.createComment("");
                    e.appendChild(l, i), e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                    var r = e.createElement("p");
                    e.setAttribute(r, "class", "controls");
                    var a = e.createElement("a");
                    e.setAttribute(a, "id", "save"), e.setAttribute(a, "class", "btn");
                    var l = e.createComment("");
                    e.appendChild(a, l), e.appendChild(r, a);
                    var a = e.createElement("a");
                    e.setAttribute(a, "id", "cancel");
                    var l = e.createComment("");
                    return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                },
                buildRenderNodes: function(e, t, n) {
                    var r = e.childAt(t, [0]),
                        a = e.childAt(r, [2]),
                        l = e.childAt(a, [0]),
                        i = e.childAt(a, [1]),
                        o = e.childAt(a, [2]),
                        c = e.childAt(r, [3]),
                        s = e.childAt(c, [0]),
                        u = e.childAt(c, [1]),
                        d = new Array(12);
                    return d[0] = e.createMorphAt(e.childAt(r, [0]), 0, 0), d[1] = e.createMorphAt(r, 1, 1), d[2] = e.createMorphAt(l, 0, 0), d[3] = e.createMorphAt(e.childAt(l, [1]), 0, 0), d[4] = e.createMorphAt(i, 0, 0), d[5] = e.createMorphAt(e.childAt(i, [1]), 0, 0), d[6] = e.createMorphAt(o, 0, 0), d[7] = e.createMorphAt(e.childAt(o, [1]), 0, 0), d[8] = e.createElementMorph(s), d[9] = e.createMorphAt(s, 0, 0), d[10] = e.createElementMorph(u), d[11] = e.createMorphAt(u, 0, 0), d
                },
                statements: [
                    ["inline", "t", ["topicModerateModal.topicTitle"],
                        [],
                        ["loc", [null, [1, 88],
                            [1, 125]
                        ]]
                    ],
                    ["inline", "input", [],
                        ["elementId", "title", "class", "input", "value", ["subexpr", "@mut", [
                                ["get", "object.title", ["loc", [null, [1, 175],
                                    [1, 187]
                                ]]]
                            ],
                            [],
                            []
                        ]],
                        ["loc", [null, [1, 129],
                            [1, 189]
                        ]]
                    ],
                    ["inline", "input", [],
                        ["type", "checkbox", "id", "sticky", "name", "sticky", "checked", ["subexpr", "@mut", [
                                ["get", "object.sticky", ["loc", [null, [1, 289],
                                    [1, 302]
                                ]]]
                            ],
                            [],
                            []
                        ], "class", "mfield"],
                        ["loc", [null, [1, 231],
                            [1, 319]
                        ]]
                    ],
                    ["inline", "t", ["topicModerateModal.sticky"],
                        [],
                        ["loc", [null, [1, 354],
                            [1, 387]
                        ]]
                    ],
                    ["inline", "input", [],
                        ["type", "checkbox", "id", "locked", "name", "locked", "checked", ["subexpr", "@mut", [
                                ["get", "object.locked", ["loc", [null, [1, 475],
                                    [1, 488]
                                ]]]
                            ],
                            [],
                            []
                        ], "class", "mfield"],
                        ["loc", [null, [1, 417],
                            [1, 505]
                        ]]
                    ],
                    ["inline", "t", ["topicModerateModal.locked"],
                        [],
                        ["loc", [null, [1, 540],
                            [1, 573]
                        ]]
                    ],
                    ["inline", "input", [],
                        ["type", "checkbox", "id", "sink", "name", "sink", "checked", ["subexpr", "@mut", [
                                ["get", "object.sink", ["loc", [null, [1, 657],
                                    [1, 668]
                                ]]]
                            ],
                            [],
                            []
                        ], "class", "mfield"],
                        ["loc", [null, [1, 603],
                            [1, 685]
                        ]]
                    ],
                    ["inline", "t", ["topicModerateModal.sink"],
                        [],
                        ["loc", [null, [1, 718],
                            [1, 749]
                        ]]
                    ],
                    ["element", "action", ["save"],
                        ["on", "click"],
                        ["loc", [null, [1, 800],
                            [1, 828]
                        ]]
                    ],
                    ["inline", "t", ["topicModerateModal.update"],
                        [],
                        ["loc", [null, [1, 841],
                            [1, 874]
                        ]]
                    ],
                    ["element", "action", ["close"],
                        ["on", "click"],
                        ["loc", [null, [1, 893],
                            [1, 922]
                        ]]
                    ],
                    ["inline", "t", ["topicModerateModal.cancel"],
                        [],
                        ["loc", [null, [1, 923],
                            [1, 956]
                        ]]
                    ]
                ],
                locals: [],
                templates: []
            }
        }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 979
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [
                ["block", "view", ["modal"],
                    ["modalController", ["subexpr", "@mut", [
                            ["get", "this", ["loc", [null, [1, 32],
                                [1, 36]
                            ]]]
                        ],
                        [],
                        []
                    ]], 0, null, ["loc", [null, [1, 0],
                        [1, 979]
                    ]]
                ]
            ],
            locals: [],
            templates: [e]
        }
    }())
}), define("mobile-panel/templates/topic-toolbar", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
            return {
                meta: {
                    revision: "Ember@1.13.12",
                    loc: {
                        source: null,
                        start: {
                            line: 1,
                            column: 92
                        },
                        end: {
                            line: 1,
                            column: 287
                        }
                    }
                },
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function(e) {
                    var t = e.createDocumentFragment(),
                        n = e.createElement("span");
                    e.setAttribute(n, "class", "ico chat");
                    var r = e.createTextNode("r");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function(e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, null), r
                },
                statements: [
                    ["inline", "t", ["topicToolbar.reply"],
                        [],
                        ["loc", [null, [1, 261],
                            [1, 287]
                        ]]
                    ]
                ],
                locals: [],
                templates: []
            }
        }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 488
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "ctrl search-ctrl");
                var r = e.createComment("");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createElement("div");
                e.setAttribute(n, "class", "ctrl reply-ctrl");
                var r = e.createComment("");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createElement("div");
                e.setAttribute(n, "class", "ctrl last-post-ctrl");
                var r = e.createElement("a");
                e.setAttribute(r, "href", "#"), e.setAttribute(r, "class", "forum-btn last-post");
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createElement("span");
                e.setAttribute(a, "class", "ico forward");
                var l = e.createTextNode(">");
                return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [2, 0]),
                    a = new Array(4);
                return a[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), a[1] = e.createMorphAt(e.childAt(t, [1]), 0, 0), a[2] = e.createElementMorph(r), a[3] = e.createMorphAt(r, 0, 0), a
            },
            statements: [
                ["inline", "view", ["forum-search-box"],
                    [],
                    ["loc", [null, [1, 30],
                        [1, 57]
                    ]]
                ],
                ["block", "view", ["restricted-access-button"],
                    ["classNames", "forum-btn reply", "action", "reply", "errorMessage", ["subexpr", "t", ["forums.restrictAccess"],
                        [],
                        ["loc", [null, [1, 184],
                            [1, 211]
                        ]]
                    ], "_controller", ["subexpr", "@mut", [
                            ["get", "this", ["loc", [null, [1, 224],
                                [1, 228]
                            ]]]
                        ],
                        [],
                        []
                    ]], 0, null, ["loc", [null, [1, 92],
                        [1, 296]
                    ]]
                ],
                ["element", "action", ["loadLastPost"],
                    ["on", "click"],
                    ["loc", [null, [1, 347],
                        [1, 383]
                    ]]
                ],
                ["inline", "t", ["topicToolbar.lastPost"],
                    [],
                    ["loc", [null, [1, 412],
                        [1, 441]
                    ]]
                ]
            ],
            locals: [],
            templates: [e]
        }
    }())
}), define("mobile-panel/templates/topic", ["exports"], function(e) {
    e["default"] = Ember.HTMLBars.template(function() {
        var e = function() {
                var e = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 117
                                    },
                                    end: {
                                        line: 1,
                                        column: 183
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("span");
                                e.setAttribute(n, "aria-hidden", "true"), e.setAttribute(n, "class", "ico pinned");
                                var r = e.createTextNode("p");
                                return e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function() {
                                return []
                            },
                            statements: [],
                            locals: [],
                            templates: []
                        }
                    }(),
                    t = function() {
                        return {
                            meta: {
                                revision: "Ember@1.13.12",
                                loc: {
                                    source: null,
                                    start: {
                                        line: 1,
                                        column: 190
                                    },
                                    end: {
                                        line: 1,
                                        column: 254
                                    }
                                }
                            },
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function(e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createElement("span");
                                e.setAttribute(n, "aria-hidden", "true"), e.setAttribute(n, "class", "ico lock");
                                var r = e.createTextNode("l");
                                return e.appendChild(n, r), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function() {
                                return []
                            },
                            statements: [],
                            locals: [],
                            templates: []
                        }
                    }();
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 51
                            },
                            end: {
                                line: 1,
                                column: 366
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createElement("span");
                        e.setAttribute(n, "class", "icos");
                        var r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createComment("");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createElement("em"),
                            r = e.createTextNode("(");
                        e.appendChild(n, r);
                        var r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createTextNode(")");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [1]),
                            a = new Array(4);
                        return a[0] = e.createMorphAt(t, 0, 0, n), a[1] = e.createMorphAt(r, 0, 0), a[2] = e.createMorphAt(r, 1, 1), a[3] = e.createMorphAt(e.childAt(t, [2]), 1, 1), e.insertBoundary(t, 0), a
                    },
                    statements: [
                        ["content", "title", ["loc", [null, [1, 89],
                            [1, 98]
                        ]]],
                        ["block", "if", [
                                ["get", "sticky", ["loc", [null, [1, 123],
                                    [1, 129]
                                ]]]
                            ],
                            [], 0, null, ["loc", [null, [1, 117],
                                [1, 190]
                            ]]
                        ],
                        ["block", "if", [
                                ["get", "locked", ["loc", [null, [1, 196],
                                    [1, 202]
                                ]]]
                            ],
                            [], 1, null, ["loc", [null, [1, 190],
                                [1, 261]
                            ]]
                        ],
                        ["inline", "t", ["topic.postsCount"],
                            ["count", ["subexpr", "@mut", [
                                    ["get", "postsCount", ["loc", [null, [1, 302],
                                        [1, 312]
                                    ]]]
                                ],
                                [],
                                []
                            ], "postsCount", ["subexpr", "number-with-delimiter", [
                                    ["get", "postsCount", ["loc", [null, [1, 347],
                                        [1, 357]
                                    ]]]
                                ],
                                [],
                                ["loc", [null, [1, 324],
                                    [1, 358]
                                ]]
                            ]],
                            ["loc", [null, [1, 273],
                                [1, 360]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: [e, t]
                }
            }(),
            t = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 381
                            },
                            end: {
                                line: 1,
                                column: 837
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("dl");
                        e.setAttribute(n, "class", "option-selector");
                        var r = e.createElement("dt");
                        e.setAttribute(r, "class", "opt-label");
                        var a = e.createComment("");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("dd");
                        e.setAttribute(r, "class", "opt-choice");
                        var a = e.createElement("a"),
                            l = e.createComment("");
                        e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createElement("dd");
                        e.setAttribute(r, "class", "opt-choice");
                        var a = e.createElement("a"),
                            l = e.createComment("");
                        return e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = e.childAt(r, [1, 0]),
                            l = e.childAt(r, [2, 0]),
                            i = new Array(7);
                        return i[0] = e.createMorphAt(e.childAt(r, [0]), 0, 0), i[1] = e.createAttrMorph(a, "class"), i[2] = e.createElementMorph(a), i[3] = e.createMorphAt(a, 0, 0), i[4] = e.createAttrMorph(l, "class"), i[5] = e.createElementMorph(l), i[6] = e.createMorphAt(l, 0, 0), i
                    },
                    statements: [
                        ["inline", "t", ["topic.show"],
                            [],
                            ["loc", [null, [1, 457],
                                [1, 475]
                            ]]
                        ],
                        ["attribute", "class", ["concat", ["show-game-names mbtn ", ["subexpr", "if", [
                                ["get", "activeUser.showInGameNames", ["loc", [null, [1, 579],
                                    [1, 605]
                                ]]], "pressed"
                            ],
                            [],
                            ["loc", [null, [1, 574],
                                [1, 617]
                            ]]
                        ]]]],
                        ["element", "action", ["toggleShowInGameNames", !0],
                            [],
                            ["loc", [null, [1, 506],
                                [1, 545]
                            ]]
                        ],
                        ["inline", "t", ["topic.inGameName"],
                            [],
                            ["loc", [null, [1, 619],
                                [1, 643]
                            ]]
                        ],
                        ["attribute", "class", ["concat", ["show-kong-names mbtn ", ["subexpr", "if", [
                                ["get", "activeUser.showInGameNames", ["loc", [null, [1, 752],
                                    [1, 778]
                                ]]], "", "pressed"
                            ],
                            [],
                            ["loc", [null, [1, 747],
                                [1, 793]
                            ]]
                        ]]]],
                        ["element", "action", ["toggleShowInGameNames", !1],
                            [],
                            ["loc", [null, [1, 678],
                                [1, 718]
                            ]]
                        ],
                        ["inline", "t", ["topic.kongregateName"],
                            [],
                            ["loc", [null, [1, 795],
                                [1, 823]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            n = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 844
                            },
                            end: {
                                line: 1,
                                column: 955
                            }
                        }
                    },
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createElement("a");
                        e.setAttribute(n, "href", "#"), e.setAttribute(n, "class", "forum-btn topic-edit-btn");
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = e.childAt(t, [0]),
                            a = new Array(2);
                        return a[0] = e.createElementMorph(r), a[1] = e.createMorphAt(r, 0, 0), a
                    },
                    statements: [
                        ["element", "action", ["moderateTopic"],
                            [],
                            ["loc", [null, [1, 864],
                                [1, 890]
                            ]]
                        ],
                        ["inline", "t", ["topic.edit"],
                            [],
                            ["loc", [null, [1, 933],
                                [1, 951]
                            ]]
                        ]
                    ],
                    locals: [],
                    templates: []
                }
            }(),
            r = function() {
                return {
                    meta: {
                        revision: "Ember@1.13.12",
                        loc: {
                            source: null,
                            start: {
                                line: 1,
                                column: 992
                            },
                            end: {
                                line: 1,
                                column: 1056
                            }
                        }
                    },
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function(e) {
                        var t = e.createDocumentFragment(),
                            n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function(e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [
                        ["inline", "render", ["post-list-item", ["get", "post", ["loc", [null, [1, 1050],
                                [1, 1054]
                            ]]]],
                            [],
                            ["loc", [null, [1, 1024],
                                [1, 1056]
                            ]]
                        ]
                    ],
                    locals: ["post"],
                    templates: []
                }
            }();
        return {
            meta: {
                revision: "Ember@1.13.12",
                loc: {
                    source: null,
                    start: {
                        line: 1,
                        column: 0
                    },
                    end: {
                        line: 1,
                        column: 1100
                    }
                }
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function(e) {
                var t = e.createDocumentFragment(),
                    n = e.createElement("div");
                e.setAttribute(n, "class", "forum_wrap thread");
                var r = e.createElement("div");
                e.setAttribute(r, "class", "header");
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createElement("ul");
                e.setAttribute(r, "class", "thread-list");
                var a = e.createComment("");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createComment("");
                return e.appendChild(n, r), e.appendChild(t, n), t
            },
            buildRenderNodes: function(e, t, n) {
                var r = e.childAt(t, [0]),
                    a = e.childAt(r, [0]),
                    l = new Array(5);
                return l[0] = e.createMorphAt(a, 0, 0), l[1] = e.createMorphAt(a, 1, 1), l[2] = e.createMorphAt(a, 2, 2), l[3] = e.createMorphAt(e.childAt(r, [1]), 0, 0), l[4] = e.createMorphAt(r, 2, 2), l
            },
            statements: [
                ["block", "page-title", [],
                    ["additionalClasses", "h1"], 0, null, ["loc", [null, [1, 51],
                        [1, 381]
                    ]]
                ],
                ["block", "if", [
                        ["get", "forum.isGuildForum", ["loc", [null, [1, 387],
                            [1, 405]
                        ]]]
                    ],
                    [], 1, null, ["loc", [null, [1, 381],
                        [1, 844]
                    ]]
                ],
                ["block", "if", [
                        ["get", "moderator", ["loc", [null, [1, 850],
                            [1, 859]
                        ]]]
                    ],
                    [], 2, null, ["loc", [null, [1, 844],
                        [1, 962]
                    ]]
                ],
                ["block", "each", [
                        ["get", "currentPosts", ["loc", [null, [1, 1e3],
                            [1, 1012]
                        ]]]
                    ],
                    [], 3, null, ["loc", [null, [1, 992],
                        [1, 1065]
                    ]]
                ],
                ["inline", "partial", ["pagination"],
                    [],
                    ["loc", [null, [1, 1070],
                        [1, 1094]
                    ]]
                ]
            ],
            locals: [],
            templates: [e, t, n, r]
        }
    }())
}), define("mobile-panel/utils/i18n/compile-template", ["exports", "ember"], function(e, t) {
    function n(e) {
        var t = arguments.length <= 1 || void 0 === arguments[1] ? !1 : arguments[1];
        return function(n) {
            var u = e.replace(i, function(e, t) {
                    return a(n, t)
                }).replace(o, function(e, t) {
                    return l(a(n, t))
                }).replace(c, function(e, t, r) {
                    return a(n, t).replace(s, r)
                }),
                d = t ? "â€«" + u + "â€¬" : u;
            return new r(d)
        }
    }
    e["default"] = n;
    var r = t["default"].Handlebars.SafeString,
        a = t["default"].get,
        l = t["default"].Handlebars.Utils.escapeExpression,
        i = /\{\{\{\s*(.*?)\s*\}\}\}/g,
        o = /\{\{\s*(.*?)\s*\}\}/g,
        c = /\[(.*?) (.*?)\]/g,
        s = "{}"
}), define("mobile-panel/utils/i18n/missing-message", ["exports", "ember-i18n/utils/i18n/missing-message"], function(e, t) {
    e["default"] = t["default"]
}), define("mobile-panel/views/accomplishment-task", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.View.extend({
        templateName: "accomplishment-task",
        tagName: "li",
        classNames: ["mbadgetask"],
        classNameBindings: ["completed"],
        typeAdd: Ember.computed.equal("task.statType", "Add"),
        typeReplace: Ember.computed.equal("task.statType", "Replace"),
        progress: Ember.computed(function() {
            return n(n(n(this, "controller"), "activeUser"), "taskProgress")[n(n(this, "task"), "id")] || {}
        }).property("controller.activeUser.taskProgress", "task.id"),
        completed: Ember.computed(function() {
            return n(n(this, "progress"), "completed")
        }).property("progress.completed"),
        quotaRemaining: Ember.computed(function() {
            return n(n(this, "progress"), "quotaRemaining")
        }).property("progress.quotaRemaining"),
        currentProgress: Ember.computed(function() {
            return n(n(this, "progress"), "currentProgress")
        }).property("progress.currentProgress")
    }), e["default"] = t
}), define("mobile-panel/views/application", ["exports", "mobile-panel/support/gesture-manager", "mobile-panel/config/environment"], function(e, t, n) {
    var r, a = Ember.get,
        l = Ember.set;
    r = Ember.View.extend({
            routeName: null,
            elementId: "container",
            onRouteChanged: Ember.observer(function() {
                return $("html").removeClass(a(this, "routeName")), l(this, "routeName", null != a(a(this, "controller"), "currentRouteName") ? a(a(this, "controller"), "currentRouteName").replace(".", " ", "g") : void 0), $("html").addClass(a(this, "routeName"))
            }.on("didInsertElement"), "controller.currentRouteName"),
            didInsertElement: function() {
                return $("#bootstrap").remove(), a(a(this, "controller"), "device").sendInitialized(), $(document).on("submit", "form", function() {
                    return $("input").blur()
                }), l(this, "gestureManager", t["default"].create({
                    device: a(a(this, "controller"), "device")
                })), a(this, "gestureManager").on("swipe", function(e) {
                    return function(t) {
                        return a(e, "controller").send("swipe" + t.capitalize())
                    }
                }(this)), Ember.run.later(function(e) {
                    return function() {
                        return a(a(e, "controller"), "device").startSending()
                    }
                }(this), Ember.testing ? 0 : 500), "function" == typeof kongUpdateProgress && kongUpdateProgress("ApplicationView"), this.insertCustomStylesheet(), this.insertAppleSigninMeta()
            },
            willDestroyElement: function() {
                return a(this, "gestureManager").destroy(), $("#game-styles").remove(), this.removeObserver("controller.currentRouteName")
            },
            insertCustomStylesheet: function() {
                var e, t;
                return e = a(a(this, "controller"), "game"), t = "", a(e, "backgroundImageUrl") && (t += ".home-bg { " + ("background-image: url(" + a(e, "backgroundImageUrl") + ");") + ("background-color: " + a(e, "bodyColor") + ";") + "}"), a(e, "chatBackgroundImageUrl") && (t += "html.chat body {" + ("background-image: url(" + a(e, "chatBackgroundImageUrl") + ");") + ("background-color: " + a(e, "chatBackgroundColor") + ";") + "}"), a(e, "customCss") && (t += a(e, "customCss")), $("head").append($('<style id="game-styles">').text(t))
            },
            insertAppleSigninMeta: function() {
                var e;
                return e = encodeURIComponent(JSON.stringify({
                    game_id: a(a(a(this, "controller"), "game"), "id"),
                    remember_me: !0
                })), $("head").append($('<meta name="appleid-signin-client-id" content="' + a(a(a(n["default"], "APP"), "appleSignin"), "clientId") + '">')), $("head").append($('<meta name="appleid-signin-scope" content="name email">')), $("head").append($('<meta name="appleid-signin-redirect-uri" content="' + a(a(a(n["default"], "APP"), "appleSignin"), "redirectUri") + '">')), $("head").append($('<meta name="appleid-signin-state" content="' + e + '">')), $("head").append($('<meta name="appleid-signin-use-popup" content="false">'))
            }
        }),
        e["default"] = r
}), define("mobile-panel/views/asset-preloader", ["exports"], function(e) {
    var t, n = Ember.get,
        r = Ember.set;
    t = Ember.View.extend({
        removeLoadedImages: function() {
            var e, t;
            r(this, "preloader", this.$("ul.preloader"));
            for (var a = 0, l = n(n(this, "controller"), "classesToLoad").length; l > a; ++a) e = n(n(this, "controller"), "classesToLoad")[a], n(this, "preloader").append("<li class='cls " + e + "'></li>");
            for (var i = 0, o = n(n(this, "controller"), "imagesToLoad").length; o > i; ++i) t = n(n(this, "controller"), "imagesToLoad")[i], n(this, "preloader").append("<li class='img' data-src='" + t + "'></li>");
            return this.$("ul.preloader li.cls").each(function(e) {
                return function(t, r) {
                    var a, l;
                    return a = $(r), l = a.css("background-image"), l = l.substring(l.indexOf("http"), n(l, "length") - 1), l ? e.loadImageRemoveNode(l, a) : void 0
                }
            }(this)), this.$("ul.preloader li.img").each(function(e) {
                return function(t, n) {
                    var r, a;
                    return r = $(n), a = r.attr("data-src"), a ? e.loadImageRemoveNode(a, r) : void 0
                }
            }(this)), n(this, "preloader").remove()
        }.on("didInsertElement"),
        loadImageRemoveNode: function(e, t) {
            var n, a;
            return n = function() {
                return t.remove(), Ember.Logger.debug("Finished cache preload " + e)
            }, a = new Image, r(a, "onload", n), r(a, "onerror", n), r(a, "src", e), t.append(a)
        }
    }), e["default"] = t
}), define("mobile-panel/views/back-button", ["exports"], function(e) {
    var t;
    Ember.get, Ember.set;
    t = Ember.View.extend({
        layoutName: "back-button"
    }), e["default"] = t
}), define("mobile-panel/views/chat-modal", ["exports", "mobile-panel/views/modal", "mobile-panel/mixins/force-redraw"], function(e, t, n) {
    var r;
    Ember.get, Ember.set;
    r = t["default"].extend(n["default"], {
        layoutName: "chat-modal",
        didInsertElement: function() {
            return this._super(), this.forceRedraw()
        }
    }), e["default"] = r
}), define("mobile-panel/views/chat", ["exports"], function(e) {
    var t, n, r = Ember.get,
        a = Ember.set;
    n = 100, t = Ember.View.extend({
        device: Ember.computed.alias("controller.device"),
        classNameBindings: ["controller.supportsGoToGuild:w-guild-btn"],
        didInsertElement: function() {
            return this.addEventHandlers(), this.applyLegacyAndroidHack(), this.toggleDisconnectedClass(), this.toggleRateLimitedClass(), this.recordWindowSize(), this.scrollToBottom(!0)
        },
        willDestroyElement: function() {
            return this.cleanUpDisconnectedClass(), this.cleanUpRateLimiteddClass(), this.removeEventHandlers()
        },
        addEventHandlers: function() {
            var e;
            return r(this, "controller").on("scrollToBottom", this, "scrollToBottom"), r(this, "controller").on("stickToMessage", this, "stickToMessage"), r(this, "controller").on("focusInput", this, "focusInput"), r(r(r(this, "controller"), "device"), "iosApp") ? (e = function(e) {
                return function() {
                    return r(r(e, "controller"), "iosKeyboardVisible") ? void 0 : r(e, "controller").debouncedScrollToBottomIfNear()
                }
            }(this), window.onorientationchange = e) : $(window).on("orientationchange.chat", Ember.run.bind(this, "scrollToBottom")), $(window).on("orientationchange.chat", Ember.run.bind(this, "swapWindowSize")), $(window).on("scroll.chat", Ember.run.bind(this, "updateScrollPosition"))
        },
        removeEventHandlers: function() {
            return $(window).off(".chat"), r(r(r(this, "controller"), "device"), "iosApp") && (window.onorientationchange = void 0), r(this, "controller").off("scrollToBottom", this, "scrollToBottom"), r(this, "controller").off("stickToMessage", this, "stickToMessage"), r(this, "controller").off("focusInput", this, "focusInput")
        },
        recordWindowSize: function() {
            return r(this, "controller").setProperties({
                initialHeight: r(window, "innerHeight"),
                initialWidth: r(window, "innerWidth")
            })
        },
        swapWindowSize: function() {
            return r(this, "controller").setProperties({
                initialWidth: r(r(this, "controller"), "initialHeight"),
                initialHeight: r(r(this, "controller"), "initialWidth")
            })
        },
        updateScrollPosition: function() {
            return a(r(this, "controller"), "nearBottom", this.nearBottom(n))
        },
        toggleDisconnectedClass: Ember.observer(function() {
            return r(r(this, "controller"), "temporarilyDisconnected") ? $("body").addClass("disconnected") : $("body").removeClass("disconnected")
        }, "controller.temporarilyDisconnected"),
        cleanUpDisconnectedClass: function() {
            return $("body").removeClass("disconnected")
        },
        toggleRateLimitedClass: Ember.observer(function() {
            return r(r(this, "controller"), "rateLimited") ? $("body").addClass("rate_limited") : $("body").removeClass("rate_limited")
        }, "controller.rateLimited"),
        cleanUpRateLimiteddClass: function() {
            return $("body").removeClass("rate_limited")
        },
        scrollToBottom: function(e, t) {
            return null == t && (t = n), this.nearBottom(t) || e ? Ember.run.scheduleOnce("afterRender", function() {
                return $("body").scrollTop(r(r(document, "body"), "scrollHeight"))
            }) : void 0
        },
        stickToMessage: function(e) {
            var t, n;
            return n = $(".chat-messages .msg").first(), null != n[0] && (t = r(n.offset(), "top")), null != t ? Ember.run.scheduleOnce("afterRender", function() {
                var n, a;
                return a = $($(".chat-messages .msg")[e]), n = $("body").scrollTop() - t, $("body").scrollTop(r(a.offset(), "top") + n)
            }) : void 0
        },
        focusInput: function() {
            return $("#chat-input").focus()
        },
        nearBottom: function(e) {
            return $(window).scrollTop() + $(window).height() > $(document).height() - e
        },
        applyLegacyAndroidHack: function(e) {
            var t;
            return null == e && (e = 1e3), r(r(this, "device"), "androidLegacy") ? (t = $("#chat-footer"), t.hide(), Ember.run.later(function() {
                return t.show()
            }, e)) : void 0
        }
    }), e["default"] = t
}), define("mobile-panel/views/create-or-edit-post", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.View.extend({
        didInsertElement: function() {
            return this.$("textarea").on("focus", function() {
                var e, t;
                return e = $("div.body-w-controls"), (t = n(n(this, "value"), "length")) > 0 && !e.hasClass("expanded") && setTimeout(function(e) {
                    return function() {
                        return e.setSelectionRange(t, t)
                    }
                }(this), 1), e.addClass("expanded")
            })
        }
    }), e["default"] = t
}), define("mobile-panel/views/edit-profile", ["exports", "mobile-panel/mixins/scroll-to-top"], function(e, t) {
    var n, r = Ember.get,
        a = Ember.set;
    n = Ember.View.extend(t["default"], {
        setupFocusListener: function() {
            return a(this, "foregroundListener", function(e) {
                return function() {
                    return r(e, "controller").send("refreshVerificationStatus")
                }
            }(this)), r(this, "device").on("app-foreground", r(this, "foregroundListener"))
        }.on("didInsertElement"),
        removeFocusListener: function() {
            return r(this, "device").off("app-foreground", r(this, "foregroundListener"))
        }.on("willDestroyElement")
    }), e["default"] = n
}), define("mobile-panel/views/facebook/finalize", ["exports", "mobile-panel/mixins/scroll-to-top"], function(e, t) {
    var n, r = Ember.get;
    Ember.set;
    n = Ember.View.extend(t["default"], {
        didInsertElement: function() {
            return r(this, "controller").send("disableMenu")
        },
        click: function(e) {
            return $(r(e, "target")).hasClass("pp-link") && (e.preventDefault(), r(this, "controller").send("externalLink", "/privacy")), $(r(e, "target")).hasClass("tos-link") && (e.preventDefault(), r(this, "controller").send("externalLink", "/user-agreement")), $(r(e, "target")).hasClass("cookie-link") ? (e.preventDefault(), r(this, "controller").send("externalLink", "/cookie-policy")) : void 0
        }
    }), e["default"] = n
}), define("mobile-panel/views/facebook/matched", ["exports", "mobile-panel/mixins/scroll-to-top"], function(e, t) {
    var n;
    Ember.get, Ember.set;
    n = Ember.View.extend(t["default"]), e["default"] = n
}), define("mobile-panel/views/forgot-password", ["exports", "mobile-panel/mixins/scroll-to-top"], function(e, t) {
    var n;
    Ember.get, Ember.set;
    n = Ember.View.extend(t["default"]), e["default"] = n
}), define("mobile-panel/views/forum-list-item", ["exports"], function(e) {
    var t;
    Ember.get, Ember.set;
    t = Ember.View.extend({
        tagName: "li",
        classNameBindings: ["controller.hasRecentActivity:recent-activity", ":forum-item", ":forum-group-item"]
    }), e["default"] = t
}), define("mobile-panel/views/forum-search-box", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.View.extend({
        classNames: ["search"],
        templateName: "forum-search-box",
        click: function() {
            return n(n(this, "controller").displayModal({
                name: "forum-search-modal"
            }), "promise").then(function(e) {
                return function(t) {
                    return t && n(t, "length") > 0 ? n(e, "controller").send("forumSearch", t) : void 0
                }
            }(this))
        }
    }), e["default"] = t
}), define("mobile-panel/views/forum-search", ["exports", "mobile-panel/support/kong-link", "mobile-panel/mixins/scroll-to-top"], function(e, t, n) {
    var r, a = Ember.get;
    Ember.set;
    r = Ember.View.extend(n["default"], {
        didInsertElement: function() {
            return $(document).on("click", "div.gsc-resultsRoot", Ember.run.bind(this, a(this, "linkClicked"))), a(this, "controller").send("forumSearch", a(a(this, "controller"), "query"))
        },
        willDestroyElement: function() {
            return $(document).off("click", "div.gsc-resultsRoot")
        },
        linkClicked: function(e) {
            var n, r;
            return e.preventDefault(), n = $(a(e, "target")), n.is("div.gsc-result") || (n = n.parents("div.gsc-result")), n = n.find("a.gs-title"), r = n.attr("href"), r ? (Ember.Logger.info("Search link clicked: " + r), t["default"].create({
                url: r
            }).follow(a(this, "controller"))) : void 0
        }
    }), e["default"] = r
}), define("mobile-panel/views/forum-toolbar", ["exports", "mobile-panel/mixins/toolbar-view"], function(e, t) {
    var n;
    Ember.get, Ember.set;
    n = Ember.View.extend(t["default"]), e["default"] = n
}), define("mobile-panel/views/forum", ["exports", "mobile-panel/mixins/pagination-view", "mobile-panel/mixins/scroll-to-top"], function(e, t, n) {
    var r;
    Ember.get, Ember.set;
    r = Ember.View.extend(t["default"], n["default"]), e["default"] = r
}), define("mobile-panel/views/game/badges", ["exports", "mobile-panel/mixins/scroll-to-top"], function(e, t) {
    var n;
    Ember.get, Ember.set;
    n = Ember.View.extend(t["default"]), e["default"] = n
}), define("mobile-panel/views/game/faq-content", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.View.extend({
        classNames: "mfaq_content",
        click: function(e) {
            var t;
            return "DT" === n(n(e, "target"), "tagName") ? (t = $(n(e, "target")), t.toggleClass("active"), t.next("dd").toggleClass("active")) : void 0
        }
    }), e["default"] = t
}), define("mobile-panel/views/game/faq", ["exports", "mobile-panel/mixins/scroll-to-top"], function(e, t) {
    var n;
    Ember.get, Ember.set;
    n = Ember.View.extend(t["default"]), e["default"] = n
}), define("mobile-panel/views/game/maintenance", ["exports", "mobile-panel/mixins/scroll-to-top"], function(e, t) {
    var n, r = Ember.get;
    Ember.set;
    n = Ember.View.extend(t["default"], {
        didInsertElement: function() {
            return r(this, "controller").send("disableMenu")
        }
    }), e["default"] = n
}), define("mobile-panel/views/game/scores", ["exports", "mobile-panel/mixins/scroll-to-top"], function(e, t) {
    var n;
    Ember.get, Ember.set;
    n = Ember.View.extend(t["default"]), e["default"] = n
}), define("mobile-panel/views/game/support", ["exports", "mobile-panel/mixins/scroll-to-top"], function(e, t) {
    var n;
    Ember.get, Ember.set;
    n = Ember.View.extend(t["default"]), e["default"] = n
}), define("mobile-panel/views/index/badges-pod", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.View.extend({
        classNames: "section home-badges",
        click: function() {
            return n(this, "controller").transitionToRoute("game.badges")
        }
    }), e["default"] = t
}), define("mobile-panel/views/index/coupon-promotion", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.View.extend({
        classNames: "section home-coupon",
        didInsertElement: function() {
            return n(n(n(this, "controller"), "activeUser"), "isAuthenticated") ? (this.$().on("click", ".claim_coupon", function(e) {
                return function(t) {
                    return Ember.run(function(e) {
                        return function() {
                            return t.preventDefault(), n(e, "controller").send("claimCoupon")
                        }
                    }(e))
                }
            }(this)), this.$().on("click", ".change_email", function(e) {
                return function(t) {
                    return Ember.run(function(e) {
                        return function() {
                            return t.preventDefault(), n(e, "controller").send("changeEmail")
                        }
                    }(e))
                }
            }(this))) : this.$().click(function(e) {
                return function() {
                    return Ember.run(function(e) {
                        return function() {
                            return n(e, "controller").send("redirectToRegistrationFlowWithMessage", "You must sign-in or register to claim your coupon")
                        }
                    }(e))
                }
            }(this))
        },
        willDestroyElement: function() {
            return this.$().off()
        }
    }), e["default"] = t
}), define("mobile-panel/views/index/forums-pod", ["exports"], function(e) {
    var t, n = Ember.get,
        r = Ember.set;
    t = Ember.View.extend({
        classNames: "section home-forums",
        setupSwitchTimer: function() {
            var e, t, a, l;
            return l = $(".home-forums ul.threads li"), e = $(".home-forums .info"), a = n(l, "length"), t = null, a > 1 ? r(this, "switchInterval", setInterval(function() {
                return null != t ? (l.removeClass("hide"), $(l.get(t)).removeClass("show").addClass("hide"), t === a - 1 ? (t = null, e.removeClass("switch")) : (t++, $(l.get(t)).addClass("show"))) : (e.addClass("switch"), t = 0, $(l.get(t)).addClass("show"))
            }, 7e3)) : setTimeout(function() {
                return e.addClass("switch"), $(l.first().addClass("show"))
            }, 7e3)
        }.on("didInsertElement"),
        clearSwitchTimer: function() {
            return n(this, "switchInterval") ? clearInterval(n(this, "switchInterval")) : void 0
        }.on("willDestroyElement"),
        resetSwitching: Ember.observer(function() {
            return "inDOM" === n(this, "_state") ? (this.clearSwitchTimer(), Ember.run.scheduleOnce("afterRender", function(e) {
                return function() {
                    return $(".home-forums .info").removeClass("switch"), e.setupSwitchTimer()
                }
            }(this))) : void 0
        }, "controller.model"),
        click: function() {
            return n(n(this, "controller"), "forumsAvailable") ? n(this, "controller").transitionToRoute("game-forums") : void 0
        }
    }), e["default"] = t
}), define("mobile-panel/views/index/guild-forum-pod", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.View.extend({
        classNames: "section home-guild-forum",
        click: function() {
            return n(this, "controller").transitionToRoute("forum", n(n(n(n(this, "controller"), "activeUser"), "guild"), "forumId"))
        }
    }), e["default"] = t
}), define("mobile-panel/views/index/promo-pod", ["exports", "mobile-panel/support/kong-link"], function(e, t) {
    var n, r = Ember.get;
    Ember.set;
    n = Ember.View.extend({
        classNames: "section home-promo",
        click: function() {
            return Ember.run(function(e) {
                return function() {
                    var n;
                    return n = r(r(r(e, "controller"), "model"), "destination"), n ? (Ember.Logger.info("Promo pod clicked: " + n), r(e, "analyticsService").incrementPageviewCounter("/game_feature_clicks"), t["default"].create({
                        url: n
                    }).follow(r(e, "controller"))) : void 0
                }
            }(this))
        }
    }), e["default"] = n
}), define("mobile-panel/views/index", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.View.extend({
        didInsertElement: function() {
            return n(this, "controller").send("enableMenu")
        },
        ready: function() {
            return $("body").addClass("ready"), !n(n(this, "controller"), "firstLoad") && n(n(n(this, "controller"), "device"), "animateTransitions") ? ($(".home-expander").addClass("flip-in"), Ember.run.later(function() {
                return $(".home-expander").removeClass("flip-in")
            }, 500)) : void 0
        }.on("didInsertElement"),
        unready: function() {
            return $("body").removeClass("ready")
        }.on("willDestroyElement")
    }), e["default"] = t
}), define("mobile-panel/views/login", ["exports", "mobile-panel/mixins/scroll-to-top"], function(e, t) {
    var n;
    Ember.get, Ember.set;
    n = Ember.View.extend(t["default"]), e["default"] = n
}), define("mobile-panel/views/menu", ["exports", "mobile-panel/mixins/force-redraw"], function(e, t) {
    var n, r = Ember.get;
    Ember.set;
    n = Ember.View.extend(t["default"], {
        classNames: ["mmenu_outer"],
        applicationController: Ember.computed.alias("controller.application"),
        menuVisibilityChanged: Ember.observer(function() {
            return this.$() ? r(r(this, "controller"), "menuVisible") ? this.addEventListeners() : this.removeEventListeners() : void 0
        }, "controller.menuVisible"),
        didInsertElement: function() {
            return this.addEventListeners(), this.$(".mmenu_inner").on("transitionend webkitTransitionEnd", function(e) {
                return function(t) {
                    return e.onTransitionEnd(t)
                }
            }(this))
        },
        willDestroyElement: function() {
            return this.removeEventListeners(), this.removeObserver("controller.menuVisible"), this.$(".mmenu_inner").off("transitionend webkitTransitionEnd")
        },
        onTouchEvent: function(e) {
            return $(r(e, "target")).hasClass("mmenu_outer") ? (e.preventDefault(), r(this, "controller").send("close")) : void 0
        },
        mouseDown: function(e) {
            return this.onTouchEvent(e)
        },
        click: function(e) {
            return Ember.run(function(t) {
                return function() {
                    return "A" === $(r(e, "target")).prop("tagName") ? r(t, "controller").send("close") : void 0
                }
            }(this))
        },
        addEventListeners: function() {
            var e, t;
            return null != (e = this.$()) && e.on("touchstart.menu", function(e) {
                return function(t) {
                    return e.onTouchEvent(t)
                }
            }(this)), this.$(".mmenu_inner").scrollTop(0), t = $(document).scrollTop(), $(document).on("scroll.menu", function(e) {
                return $(document).scrollTop(t)
            })
        },
        removeEventListeners: function() {
            var e;
            return null != (e = this.$()) && e.off("touchstart.menu"), $(document).off("scroll.menu")
        },
        onTransitionEnd: function(e) {
            var t;
            return (t = this.$(".mmenu_inner")) ? r(t.position(), "left") < 0 ? (this.forceRedraw(), Ember.run.next(function(e) {
                return function() {
                    return Ember.Logger.debug("Menu closed"), r(e, "applicationController").trigger("menu-closed")
                }
            }(this))) : (Ember.Logger.debug("Menu opened"), r(this, "applicationController").trigger("menu-opened")) : void 0
        }
    }), e["default"] = n
}), define("mobile-panel/views/messages", ["exports", "mobile-panel/mixins/scroll-to-top"], function(e, t) {
    var n, r = Ember.get;
    Ember.set;
    n = Ember.View.extend(t["default"], {
        addLinkHandler: function() {
            return this.$().on("click", ".reply-copy a", function(e) {
                return function(t) {
                    return t.preventDefault(), r(e, "controller").handleContentUrl($(r(t, "currentTarget")).attr("href"))
                }
            }(this))
        }.on("didInsertElement"),
        removeLinkHandler: function() {
            return this.$().off("click", ".reply-copy a")
        }.on("willDestroyElement")
    }), e["default"] = n
}), define("mobile-panel/views/modal", ["exports"], function(e) {
    var t, n = Ember.get,
        r = Ember.set;
    t = Ember.View.extend({
        classNames: ["modal-view"],
        classNameBindings: ["boundClass", "className"],
        layoutName: "modal",
        setClassName: function() {
            return r(this, "className", null != n(this, "modalController") ? n(this, "modalController").toString().split(":")[1].replace("/", "-").dasherize() : void 0)
        }.on("init"),
        boundClass: Ember.computed(function() {
            return n(n(n(this, "modalController"), "model"), "boundClass")
        }).property("modalController.model.boundClass"),
        didInsertElement: function() {
            return r(this, "scrollTop", $("body").scrollTop()), $(".modal_hidden").hide(), $("body").addClass("modal"), $("html").addClass(n(this, "className")), Ember.run.next(function() {
                return $("body").scrollTop(0)
            }), $(".modal-view").on("click.modal", function(e) {
                return function(t) {
                    return n(t, "target") === n(t, "delegateTarget") ? Ember.run(n(e, "modalController"), "send", "close") : void 0
                }
            }(this))
        },
        willDestroyElement: function() {
            return $(".modal_hidden").show(), $("body").removeClass("modal"), $("html").removeClass(n(this, "className")), $(".modal-view").off("click.modal"), $("body").scrollTop(n(this, "scrollTop"))
        }
    }), e["default"] = t
}), define("mobile-panel/views/more-games", ["exports", "mobile-panel/support/kong-link", "mobile-panel/mixins/scroll-to-top"], function(e, t, n) {
    var r, a = Ember.get;
    Ember.set;
    r = Ember.View.extend(n["default"], Ember.Evented, {
        hideCurrentGame: function() {
            return $("[data-game-id='" + a(a(a(this, "controller"), "game"), "id") + "']").remove()
        }.on("didInsertElement"),
        interceptGameLinks: function() {
            return this.$().on("click", "a[rel='external']", function(e) {
                return function(n) {
                    return Ember.run(function(e) {
                        return function() {
                            var r, l;
                            return n.preventDefault(), a(e, "controller").send("clickthrough"), r = $(a(n, "currentTarget")), a(r.parents(".slide"), "length") > 0 && r.parents(".slide").hasClass("focus") || 0 === a(r.parents(".slide"), "length") ? (l = $(a(n, "currentTarget")).attr("href"), t["default"].create({
                                url: l,
                                bypassModal: !0
                            }).follow(a(e, "controller"))) : void 0
                        }
                    }(e))
                }
            }(this))
        }.on("didInsertElement"),
        appendFeatureContentScript: function() {
            return this.$().append("<script>" + a(a(a(this, "controller"), "model"), "script") + "</script>")
        }.on("didInsertElement"),
        uninterceptGameLinks: function() {
            return this.$().off("click", "a[rel='external']")
        }.on("willDestroyElement"),
        unhookCarouselEvents: function() {
            return $(document).off(".mkongregatecom"), $(window).off(".mkongregatecom")
        }.on("willDestroyElement")
    }), e["default"] = r
}), define("mobile-panel/views/pages", ["exports", "mobile-panel/mixins/scroll-to-top"], function(e, t) {
    var n;
    Ember.get, Ember.set;
    n = Ember.View.extend(t["default"]), e["default"] = n
}), define("mobile-panel/views/pagination", ["exports"], function(e) {
    var t;
    Ember.get, Ember.set;
    t = Ember.View.extend({
        templateName: "pagination"
    }), e["default"] = t
}), define("mobile-panel/views/post-list-item", ["exports"], function(e) {
    var t;
    Ember.get, Ember.set;
    t = Ember.View.extend({
        tagName: "li",
        classNameBindings: ["controller.isNew:new", ":thread"]
    }), e["default"] = t
}), define("mobile-panel/views/privacy-policy-required", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.View.extend({
        didInsertElement: function() {
            return n(this, "controller").send("disableMenu")
        },
        click: function(e) {
            return $(n(e, "target")).hasClass("tos-link") && (e.preventDefault(), n(this, "controller").send("externalLink", "/user-agreement")), $(n(e, "target")).hasClass("pp-link") && (e.preventDefault(), n(this, "controller").send("externalLink", "/privacy")), $(n(e, "target")).hasClass("cookie-link") ? (e.preventDefault(), n(this, "controller").send("externalLink", "/cookie-policy")) : void 0
        }
    }), e["default"] = t
}), define("mobile-panel/views/profile/fans", ["exports", "mobile-panel/mixins/pagination-view", "mobile-panel/mixins/scroll-to-top"], function(e, t, n) {
    var r;
    Ember.get, Ember.set;
    r = Ember.View.extend(t["default"], n["default"]), e["default"] = r
}), define("mobile-panel/views/profile/friends", ["exports", "mobile-panel/mixins/pagination-view", "mobile-panel/mixins/scroll-to-top"], function(e, t, n) {
    var r;
    Ember.get, Ember.set;
    r = Ember.View.extend(t["default"], n["default"]), e["default"] = r
}), define("mobile-panel/views/profile/posts", ["exports", "mobile-panel/mixins/pagination-view", "mobile-panel/mixins/scroll-to-top"], function(e, t, n) {
    var r;
    Ember.get, Ember.set;
    r = Ember.View.extend(t["default"], n["default"]), e["default"] = r
}), define("mobile-panel/views/profile/send-message", ["exports"], function(e) {
    var t;
    Ember.get, Ember.set;
    t = Ember.View.extend({
        addMessageModalClass: function() {
            return $("body").addClass("profile-pm-page")
        }.on("didInsertElement"),
        removeMessageModalClass: function() {
            return $("body").removeClass("profile-pm-page")
        }.on("willDestroyElement")
    }), e["default"] = t
}), define("mobile-panel/views/registration-flow/username", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.View.extend({
        click: function(e) {
            return $(n(e, "target")).hasClass("tos-link") && (e.preventDefault(), n(this, "controller").send("externalLink", "/user-agreement")), $(n(e, "target")).hasClass("pp-link") && (e.preventDefault(), n(this, "controller").send("externalLink", "/privacy")), $(n(e, "target")).hasClass("cookie-link") ? (e.preventDefault(), n(this, "controller").send("externalLink", "/cookie-policy")) : void 0
        }
    }), e["default"] = t
}), define("mobile-panel/views/registration-flow", ["exports"], function(e) {
    var t;
    Ember.get, Ember.set;
    t = Ember.View.extend(), e["default"] = t
}), define("mobile-panel/views/restricted-access-button", ["exports"], function(e) {
    var t, n = Ember.get;
    Ember.set;
    t = Ember.View.extend({
        tagName: "a",
        errorMessage: "You must be logged in to do that",
        click: function() {
            return n(n(n(this, "_controller"), "activeUser"), "isAuthenticated") ? n(this, "_controller").send(n(this, "action"), n(this, "param")) : n(this, "_controller").send("redirectToRegistrationFlowWithMessage", n(this, "errorMessage"))
        }
    }), e["default"] = t
}), define("mobile-panel/views/search-toolbar", ["exports", "mobile-panel/mixins/toolbar-view"], function(e, t) {
    var n;
    Ember.get, Ember.set;
    n = Ember.View.extend(t["default"]), e["default"] = n
}), define("mobile-panel/views/topic-list-item", ["exports"], function(e) {
    var t;
    Ember.get, Ember.set;
    t = Ember.View.extend({
        tagName: "li",
        classNameBindings: ["controller.hasRecentActivity:recent-activity", "controller.sticky:stick", ":forum-item"]
    }), e["default"] = t
}), define("mobile-panel/views/topic-toolbar", ["exports", "mobile-panel/mixins/toolbar-view"], function(e, t) {
    var n;
    Ember.get, Ember.set;
    n = Ember.View.extend(t["default"]), e["default"] = n
}), define("mobile-panel/views/topic", ["exports", "mobile-panel/support/kong-link", "mobile-panel/mixins/pagination-view", "mobile-panel/mixins/scroll-to-top"], function(e, t, n, r) {
    var a, l = Ember.get;
    Ember.set;
    a = Ember.View.extend(n["default"], r["default"], {
        addClickListeners: function() {
            return this.$().on("click.forumLink", "div.reply-copy a", function(e) {
                return function(t) {
                    return e.forumLinkClicked(t)
                }
            }(this)), this.$().on("click.forumImage", "div.reply-copy img", function(e) {
                return function(t) {
                    return e.forumImageClicked(t)
                }
            }(this))
        }.on("didInsertElement"),
        removeClickListeners: function() {
            return this.$().off("click.forumLink"), this.$().off("click.forumImage")
        }.on("willDestroyElement"),
        forumLinkClicked: function(e) {
            return Ember.run(function(n) {
                return function() {
                    var r, a;
                    return e.preventDefault(), r = $(l(e, "target")), a = r.attr("href"), Ember.Logger.info("Forum link clicked: " + a), t["default"].create({
                        url: a
                    }).follow(l(n, "controller"))
                }
            }(this))
        },
        forumImageClicked: function(e) {
            return Ember.run(function(t) {
                return function() {
                    var n, r;
                    return e.preventDefault(), r = $(l(e, "target")), n = r.attr("src"), Ember.Logger.info("Forum image clicked: " + n), l(t, "controller").displayModal({
                        name: "image-modal",
                        src: n
                    })
                }
            }(this))
        }
    }), e["default"] = a
}), define("mobile-panel/config/environment", ["ember"], function(e) {
    var t = "mobile-panel";
    try {
        var n = t + "/config/environment",
            r = e["default"].$('meta[name="' + n + '"]').attr("content"),
            a = JSON.parse(unescape(r));
        return {
            "default": a
        }
    } catch (l) {
        throw new Error('Could not read config from meta tag with name "' + n + '".')
    }
}), runningTests ? require("mobile-panel/tests/test-helper") : require("mobile-panel/app")["default"].create({
    environmentName: "production",
    servers: {
        production: {
            redisHost: "redis.us-west-2.kongregate.com",
            redisPort: "6379",
            assetPrepend: "https://mobile-panel.kongregate.com/",
            chatServiceUrl: "https://kwak-faye.kongregate.com",
            chatBackendUrl: "https://kwak-rails.kongregate.com",
            googleAnalyticsApplicationID: "UA-211785-35",
            appleSigninClientId: "com.kongregate",
            appleSigninRedirectUri: "https://m.kongregate.com/auth/apple/callback"
        },
        kongregatestage: {
            redisHost: "redis.us-west-2.kongregatestage.com",
            redisPort: "6739",
            bucket: "staging-mobile-panel",
            assetPrepend: "https://mobile-panel.kongregatestage.com/",
            chatServiceUrl: "https://kwak-faye.kongregatestage.com",
            chatBackendUrl: "https://kwak-rails.kongregatestage.com",
            googleAnalyticsApplicationID: "UA-211785-4",
            appleSigninClientId: "com.kongregate.dev",
            appleSigninRedirectUri: "https://www.kongregatestage.com/auth/apple/callback"
        },
        kongregatetrunk: {
            redisHost: "kongregatetrunk.com",
            redisPort: "6379",
            bucket: "kongregatetrunk-mobile-panel",
            assetPrepend: "https://mobile-panel.kongregatetrunk.com/",
            chatServiceUrl: "https://kwak-faye.kongregatetrunk.com",
            chatBackendUrl: "https://kwak-rails.kongregatetrunk.com",
            googleAnalyticsApplicationID: "UA-211785-6",
            appleSigninClientId: "com.kongregate.dev",
            appleSigninRedirectUri: "https://www.kongregatetrunk.com/auth/apple/callback"
        },
        kongboat: {
            redisHost: "kongboat.com",
            redisPort: "6379",
            assetPrepend: "https://mobile-panel.kongboat.com/",
            chatServiceUrl: "https://kwak-faye.kongboat.com",
            chatBackendUrl: "https://kwak-rails.kongboat.com",
            googleAnalyticsApplicationID: "UA-211785-22",
            appleSigninClientId: "com.kongregate.dev",
            appleSigninRedirectUri: "https://m.kongboat.com/auth/apple/callback"
        },
        kongbus: {
            redisHost: "kongbus.com",
            redisPort: "6379",
            assetPrepend: "https://mobile-panel.kongbus.com/",
            chatServiceUrl: "https://kwak-faye.kongbus.com",
            chatBackendUrl: "https://kwak-rails.kongbus.com",
            googleAnalyticsApplicationID: "UA-211785-23",
            appleSigninClientId: "com.kongregate.dev",
            appleSigninRedirectUri: "https://m.kongbus.com/auth/apple/callback"
        },
        kongcab: {
            redisHost: "kongcab.com",
            redisPort: "6379",
            assetPrepend: "https://mobile-panel.kongcab.com/",
            chatServiceUrl: "https://kwak-faye.kongcab.com",
            chatBackendUrl: "https://kwak-rails.kongcab.com",
            googleAnalyticsApplicationID: "UA-211785-22",
            appleSigninClientId: "com.kongregate.dev",
            appleSigninRedirectUri: "https://m.kongcab.com/auth/apple/callback"
        },
        kongdiddy: {
            redisHost: "kongdiddy.com",
            redisPort: "6379",
            assetPrepend: "https://mobile-panel.kongdiddy.com/",
            chatServiceUrl: "https://kwak-faye.kongdiddy.com",
            chatBackendUrl: "https://kwak-rails.kongdiddy.com",
            googleAnalyticsApplicationID: "UA-211785-22",
            appleSigninClientId: "com.kongregate.dev",
            appleSigninRedirectUri: "https://m.kongdiddy.com/auth/apple/callback"
        },
        konghaul: {
            redisHost: "konghaul.com",
            redisPort: "6379",
            assetPrepend: "https://mobile-panel.konghaul.com/",
            chatServiceUrl: "https://kwak-faye.konghaul.com",
            chatBackendUrl: "https://kwak-rails.konghaul.com",
            googleAnalyticsApplicationID: "UA-211785-22",
            appleSigninClientId: "com.kongregate.dev",
            appleSigninRedirectUri: "https://m.konghaul.com/auth/apple/callback"
        },
        kongice: {
            redisHost: "kongice.com",
            redisPort: "6379",
            assetPrepend: "https://mobile-panel.kongice.com/",
            chatServiceUrl: "https://kwak-faye.kongice.com",
            chatBackendUrl: "https://kwak-rails.kongice.com",
            googleAnalyticsApplicationID: "UA-211785-22",
            appleSigninClientId: "com.kongregate.dev",
            appleSigninRedirectUri: "https://m.kongice.com/auth/apple/callback"
        },
        kongjunk: {
            redisHost: "kongjunk.com",
            redisPort: "6379",
            assetPrepend: "https://mobile-panel.kongjunk.com/",
            chatServiceUrl: "https://kwak-faye.kongjunk.com",
            chatBackendUrl: "https://kwak-rails.kongjunk.com",
            googleAnalyticsApplicationID: "UA-211785-22",
            appleSigninClientId: "com.kongregate.dev",
            appleSigninRedirectUri: "https://m.kongjunk.com/auth/apple/callback"
        },
        kongwater: {
            redisHost: "kongwater.com",
            redisPort: "6379",
            assetPrepend: "https://mobile-panel.kongwater.com/",
            chatServiceUrl: "https://kwak-faye.kongwater.com",
            chatBackendUrl: "https://kwak-rails.kongwater.com",
            googleAnalyticsApplicationID: "UA-211785-22",
            appleSigninClientId: "com.kongregate.dev",
            appleSigninRedirectUri: "https://m.kongwater.com/auth/apple/callback"
        },
        kongzep: {
            redisHost: "kongzep.com",
            redisPort: "6379",
            assetPrepend: "https://mobile-panel.kongzep.com/",
            chatServiceUrl: "https://kwak-faye.kongzep.com",
            chatBackendUrl: "https://kwak-rails.kongzep.com",
            googleAnalyticsApplicationID: "UA-211785-22",
            appleSigninClientId: "com.kongregate.dev",
            appleSigninRedirectUri: "https://m.kongzep.com/auth/apple/callback"
        },
        kongluge: {
            redisHost: "kongluge.com",
            redisPort: "6379",
            assetPrepend: "https://mobile-panel.kongluge.com/",
            chatServiceUrl: "https://kwak-faye.kongluge.com",
            chatBackendUrl: "https://kwak-rails.kongluge.com",
            googleAnalyticsApplicationID: "UA-211785-22",
            appleSigninClientId: "com.kongregate.dev",
            appleSigninRedirectUri: "https://m.kongluge.com/auth/apple/callback"
        },
        kongyak: {
            redisHost: "kongyak.com",
            redisPort: "6379",
            assetPrepend: "https://mobile-panel.kongyak.com/",
            chatServiceUrl: "https://kwak-faye.kongyak.com",
            chatBackendUrl: "https://kwak-rails.kongyak.com",
            googleAnalyticsApplicationID: "UA-211785-22",
            appleSigninClientId: "com.kongregate.dev",
            appleSigninRedirectUri: "https://m.kongyak.com/auth/apple/callback"
        },
        kongalong: {
            redisHost: "kongalong.com",
            redisPort: "6379",
            assetPrepend: "https://mobile-panel.kongalong.com/",
            chatServiceUrl: "https://kwak-faye.kongalong.com",
            chatBackendUrl: "https://kwak-rails.kongalong.com",
            googleAnalyticsApplicationID: "UA-211785-22",
            appleSigninClientId: "com.kongregate.dev",
            appleSigninRedirectUri: "https://m.kongalong.com/auth/apple/callback"
        },
        kongshred: {
            redisHost: "kongshred.com",
            redisPort: "6379",
            assetPrepend: "https://mobile-panel.kongshred.com/",
            chatServiceUrl: "https://kwak-faye.kongshred.com",
            chatBackendUrl: "https://kwak-rails.kongshred.com",
            googleAnalyticsApplicationID: "UA-211785-13",
            appleSigninClientId: "com.kongregate.dev",
            appleSigninRedirectUri: "https://m.kongshred.com/auth/apple/callback"
        }
    },
    chat: {
        serviceUrl: "https://kwak-faye.kongregate.com",
        backendUrl: "https://kwak-rails.kongregate.com"
    },
    googleAnalytics: {
        accountID: "UA-211785-35"
    },
    appleSignin: {
        clientId: "com.kongregate",
        redirectUri: "https://m.kongregate.com/auth/apple/callback"
    },
    name: "mobile-panel",
    version: "0.0.0+a90ce2bf"
});
